{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/external \"@platform/api/index\"","webpack://[name]/external \"@platform/components/index\"","webpack://[name]/external \"@platform/table-core/index\"","webpack://[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://[name]/external \"@platform/base/index\"","webpack://[name]/external \"@platform/card-table/index\"","webpack://[name]/external \"@platform/form/index\"","webpack://[name]/external \"@platform/simple-table/index\"","webpack://[name]/external \"@platform/edit-table/index\"","webpack://[name]/./node_modules/qs/lib/utils.js","webpack://[name]/./node_modules/qs/lib/index.js","webpack://[name]/./node_modules/qs/lib/formats.js","webpack://[name]/./src/platform/FastExtend/const.js","webpack://[name]/./src/platform/FastExtend/utils.js","webpack://[name]/./src/platform/components/Form/compatible.js","webpack://[name]/./src/platform/components/Form/output.js","webpack://[name]/./src/platform/components/Table/appTable/CardTable/compatible.js","webpack://[name]/./src/platform/components/Table/appTable/CardTable/output.js","webpack://[name]/./src/platform/components/Table/appTable/SimpleTable/compatible.js","webpack://[name]/./src/platform/components/Table/appTable/SimpleTable/output.js","webpack://[name]/./src/platform/components/Table/appTable/EditTable/compatible.js","webpack://[name]/./src/platform/components/Table/appTable/EditTable/output.js","webpack://[name]/./src/platform/FastExtend/methodsModel.js","webpack://[name]/./src/platform/FastExtend/index.js","webpack://[name]/./src/platform/components/createPage.js","webpack://[name]/./src/core/api/loadJS.js","webpack://[name]/./src/core/api/useJS.js","webpack://[name]/external \"@platform/transfer-table/index\"","webpack://[name]/external \"@platform/tree-table/index\"","webpack://[name]/./src/platform/old/2005/index.js","webpack://[name]/external \"babel-polyfill\"","webpack://[name]/./node_modules/qs/lib/stringify.js","webpack://[name]/./node_modules/qs/lib/parse.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__14__","__WEBPACK_EXTERNAL_MODULE__15__","__WEBPACK_EXTERNAL_MODULE__17__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","has","isArray","Array","hexTable","array","push","toString","toUpperCase","arrayToObject","source","options","obj","plainObjects","length","assign","target","keys","reduce","acc","combine","a","b","concat","compact","queue","prop","refs","item","j","val","indexOf","pop","compacted","compactQueue","decode","str","decoder","charset","strWithoutPlus","replace","unescape","decodeURIComponent","e","encode","defaultEncoder","string","String","escape","$0","parseInt","slice","out","charCodeAt","charAt","isBuffer","constructor","isRegExp","maybeMap","fn","mapped","merge","allowPrototypes","mergeTarget","forEach","targetItem","stringify","parse","formats","percentTwenties","util","Format","RFC1738","RFC3986","formatters","emptyf","enable","NCCExtendEable","feConfigName","config","getCheckedMethod","defaultf","getCheckedExtendMethod","console","log","JSON","defaultFxConfig","onAfterEvent","onBeforeEvent","onEditTableAfterEvent","onEditTableBeforeEvent","onFormAfterEvent","onFormBeforeEvent","onCardTableAfterEvent","onCardTableBeforeEvent","testType","origin","beforeAndAfter","pageScope","info","fy","fx","attrcode","fxType","fxParams","fe","fxConfig","orderResult","Promise","resolve","then","data","getStore","this","formDataSource","Error","getContext","context","newConfig","rest","areaId","itemId","methods","output","form","props","curMetaItem","oldValue","componentValue","allValue","singleFormCode","editAfterFlag","isFunction","handleRelationItems","type","areaCode","formMetaCode","callback","finalValue","createForm","currentStore","store","formComponentUpdate","page","useOn","getHotKeyConfig","autoFocusDeferred","meta","state","withHotKeyChange","orderOfHotKey","onLastFormEnter","setAllFormValue","formDataObj","copyFlag","emptyOldVal","setOldValueExceptKey","newData","rows","values","getAllFormValue","moduleIds","allFormData","getSingleData","isSimple","formData","setReferValueSimple","setReferValue","status","getStatus","areaType","getFormItemsValue","map","getItemValue","display","setFormItemsValue","cancel","hasNumberField","itemtype","getItemAttribute","setItemValue","forceUpdate","getFormItemsDisabled","setFormItemsDisabled","setItemAttribute","setFormItemsRequired","getFormItemsRequired","getFormItemsVisible","setFormItemsVisible","setFormItemsVerify","getFormItemsVerify","EmptyAllFormValue","exceptArr","emptyAllFormValue","isCheckNow","toastStore","requiredItems","regItems","maxItems","flag","index","res","json","getInnerHooks","getJson","toastContent","join","toast","mark","color","title","content","openArea","groupId","closeArea","setAreaVisible","visible","getAreaVisible","setActiveTab","activeTabCode","setFormTabs","getActiveTab","getFormTabs","setFormStatus","setStatus","getFormStatus","checkRequired","resetItemWidth","countFormWidth","setFormItemAutoFocus","setStore","updateForm","getAllFormValueSimple","isEmpty","find","setItemsVisible","getResidtxtLang","setFormPopConfirmSwitchTips","setFormItemFocus","PubSub","publish","focusFormItem","focusFormNextItem","updateDataByRefresh","pkname","FormData","pknameValue","clearFormVerify","newResData","result","trim","scale","formCompatible","register","Form","useForm","apiBindPage","formAPI","component","displayName","unfinished","utils","isObject","warningOnce","isString","isUndefined","isWrong","useCardTable","CardTable","TabsTableStore","ROW_STATUS","CONFIG","_setGrandTableStore","grandGroup","grandTableIds","grandTableId","cardTableDataSource","grandTableStore","__handleEventsCallBack","func","record","outputIndex","beforeObj","params","currentName","rowKey","rowKeyValue","rowIndex","column","event","triggerType","isTriggerModal","activeCode","warn","includes","test","setCellProps","isEdit","changedRows","isMulti","isMultiSelectedEnabled","refcode","startsWith","substring","refer","valueArr","oldValArr","split","rowid","newvalue","oldvalue","saveRowOldValue","changedrows","tableMetaCode","getViewData","actionTag","areaTag","selected","selectedChange","checked","len","onHeadAngleToggle","statusChange","tableStatusChanged","__handleProps","autoAddRow","enabled","isAddRow","addRowCallback","defaultValue","addRowDefaultValue","rowClassnName","rowClassList","bodyStyle","minHeight","height","scroll","x","y","cellClassName","setCellClass","high_filter","alloweFilter","__addDefautProps","onChange","inputChange","valueChange","handleEventsCallBack","stores","ikey","elem","grandConfig","grandTableConfig","createCardTable","myTableData","setTableData","setTableProps","multiConfig","addTabStore","getTabsStores","renderItems","renderItem","table","setConfig","afterLangload","_langJson","onCellHyperlinkTo","tableId","linkTo","pageid","mountChildrenStore","id","cardTableComponentUpdate","existenceCheck","cardTableStore","setLayout","layout","setTabsTableData","resetTabsTableData","getTabsTableData","setTabsTableStatus","_this","mainStore","oldStatus","clearOneTypeToast","clearRequiredStatus","setTabsTableShow","mainId","flagObj","isUpdatePage","setTabsTableActive","childId","getTabsTableActive","checkTabRequired","items","allToast","validateFailed","firstValidateFaild","row","rowToast","entries","colKey","required","label","tabToast","checkAllTabsRequire","autoFocus","getMeta","gridrelation","containerrelation","allValidateFailed","allFirstValidateFaild","errorTabIds","metaTabs","tabs","checkedMusters","checkedMuster","tabId","currentRelation","tabRelationMuster","initialTabRelation","tabRelation","metaConfig","getArrayMeta","filter","tabItem","getTableProps","isRefresh","setCache","validated","refresh","tableIdList","tabSelector","cellSelector","some","cellInfo","tabElement","document","querySelector","click","setTimeout","cellElement","ncExecuteFocus","focus","errorContent","tabName","rowsToast","rowName","TextArr","groupOperation","groupOperationMsg","saveChangedRowsOldValue","metaStore","getChangedRowsOldValue","getRowOldValue","delChangedRowsOldValue","deleteRowOldValue","isCache","isTop","shouldForceUpdate","includeAllArea","getCache","grandValidateFailed","grandStore","setTableStatus","getAllRows","isDeepCopy","getVisibleRows","getChangedRows","getNumberOfRows","getAllData","areacode","toggleRowView","addRow","isAutoAddRow","addTableRow","delRowByRowId","isDeepDel","deleteTableRows","rowKeyValues","clearValidated","delRowsByIndex","delRowidList","rowIndexs","setValByKeyAndIndex","cellValue","isUpdateBatch","allRows","getData","isSetEdit","setValByKeyAndRowId","resetTableData","updateTableData","getValByKeyAndIndex","getValByKeyAndRowId","getValByKeyAndRowKey","setEditableByRowId","setCellsProps","attrcodes","undefined","disabled","setEditableByIndex","pasteRow","copy","getRows","copyRow","excludeKeys","getCheckedRows","getSelectedRows","selectAllRows","setAllRowsSelected","newLen","selectRowsByIndex","setRowsSelected","unSelectRowsByIndex","reverseSelected","reverseRowsSelected","filterEmptyRows","rule","removeEmptyRows","filterEmptyGrandRows","getAllRowsRemoveKeys","closeExpandedRow","getCacheData","focusRowByIndex","getMixinMetaData","getMixinMetaOfData","getFilterRows","langCode","getCookie","setFiltrateTableData","isShowAll","batchChangeTableData","updateDataByIndexs","updateTableDataByIndexs","insertDataByIndexs","setRowStatusByIndexs","insertRowsAfterIndex","setTdEditByIndex","isUpdate","setValByKeysAndIndex","setRowProps","edit","setCellValue","setAllCheckboxAble","checkInfo","getCheckInfo","disabledAll","setCheckInfo","setMulTablesData","originData","formatData","oldData","clearRowsOldValue","setData","saveRowsOldValue","getRowsByIndexs","getAllTableRequire","tableIds","errorInfo","ids","idInfo","tableName","tableLabel","tableDataRows","idMain","tabLabel","itemsMain","getArrayData","_getAllItem","cellLabel","checkedValue","getTableItemData","setColScale","list","eve","fieldcode","setMeta","checkVisible","isVisible","children","getChildTableRequired","parentIds","allErrorInfo","parentId","childIds","parentStore","parentData","grandTableDatas","parentRowKey","parentErrorInfo","prow","pindex","grandTableData","childRowKey","checkChildTableRequired","isReturnBool","isRequired","toastMessage","requiredRows","isNoRequired","pinfo","rowInfo","parentLabel","childRequiredRows","item1","labelItem","labelItemChild","pagelabel","cont","ele","isNode","message","checkTableRequired","setAllKeysVal","setRowsCellValue","setClickRowIndex","getClickRowIndex","setSaveData","getDataByIndex","updateDataByRowId","isDel","updateTableDataByRowId","getRowStatus","getRowProps","getCurrentIndex","updateDiffDataByRowId","isAddStatus","rowidMap","deleteRow","rowStatus","generateRowKey","add","initialvalue","hasInit","initialCellValue","storeData","moveRow","indexStart","indexEnd","setRowEditByIndex","setRowsCellPropsByIndex","setModelEdit","destEditAreaCode","editcode","code","setDestBrowseProps","destBrowseAreaCode","itemIndex","findIndex","setColVisibleByKey","hideKeys","showKeys","setColumn","setColsValue","colArr","openModel","hideModel","every","editAreaCode","areaVisible","showSideBox","closeModel","closeSideBox","hideColByKey","isShouldUpdate","showColByKey","getColValue","setColValue","openListView","expandedRowKeys","openMaxTable","openMaxView","isMaxView","getMetaValByKey","temp","setColEditableByKey","formItem","updateTableHeight","getModalDataByIndex","editRowsCode","_getEditRows","showEditAreaKey","editRows","isStr","isArr","toggleCardTable","tableVisible","toggleTableShow","setQueryCondition","queryCondition","child","setGrandTableData","isDiffUpdate","getAllGrandData","getViewGrandData","view","delCacheGrandData","rowidList","delAll","deleteGrandData","getRowIdFromPkcode","plcodeValue","pkcode","process","tree","editTableId","prev","editId","saveFilterCustomColData","rowId","getSideParentCurrentIndex","updateTable","updateAfterBatchChange","param","updateAndAddRows","_updateAndAddRows","refreshData","saga_errormesg","refreshLen","anoterTable","cardTableCompatible","cardTableAPI","useSimpleTable","SimpleTable","getPageSizeStorage","tableDataSource","createSimpleTable","onRowClick","onRowDoubleClick","onSelected","onSelectedAll","handlePageInfoChange","onBatchSelected","tableModelConfirm","others","oldLen","checkedAll","onPageInfoChange","pks","total","setAllTableData","prePageSize","resetFilter","allpks","alltss","pageInfo","pageIndex","Number","pageSize","totalPage","focusIndex","crossPageSelectIndex","checkedAllpage","size","selectPk","Set","newIndex","pk","indeterminate","selectIndex","arrayColumns","clearSortStatus","columns","Date","getTime","getSafeRandom","getConfig","crossPageSelect","setSelect","rowIdArr","error","getTablePageInfo","openModal","closeModal","setTableRender","render","getAllTableData","model","operType","setTableValueByKeyAndRecord","dist","newRecord","showColumn","checkRows","currentPagePkArr","pkIndex","Math","floor","ts","getFilterData","checkRow","deleteTableRowsByIndex","deleteTableRowsByRowId","addTableRows","setTableValueBykey","refname","refpk","setTableValueDisabled","setTableValueRequired","tableData","rowidArr","selectTableRows","isCallBack","indexArr","_getRowIdByIndex","pattern","getPks","currentPageIndex","currentPageSize","start","hasCacheData","dataSource","mcData","ViewModel","simpleTable","deleteCacheId","pkvalue","addCacheId","_setHeadCheckbox","updateDiffDataByIndex","beforeAreaChangeHeight","publishSync","getSortParam","selectArr","selectArrLen","dataLen","simpleTableCompatible","simpleTableAPI","useEditTable","EditTable","isPromise","isNumber","editTableDataSource","indexCheck","viewData","isNaN","createEditTable","myEditData","showPagination","adaptionHeight","onCloseModel","fieldid","adaption","isUnique","newRow","rowClassName","editTableComponentUpdate","useFixedHeader","delRow","isFilter","getCurrentRecord","setSelectedIndex","getTrueRowIndex","setRowByIndex","setEditableRowByRowId","setRowsCellPropsByKey","setEditableRowByIndex","setEditableRowKeyByRowId","setRowStatus","setRowsProps","setRowPosition","position","updateRows","updateRowsProps","resetTableCaches","setEditableByKey","setEditableRowKeyByIndex","getColumn","cancelEdit","getCacheDataById","getCacheForEditModal","metaItems","finalContent","cellFocusElement","updateDifference","vals","OldVal","setEditableKeyEdit","rowsIndex","disabledValue","sideBoxConfig","show","html","getElementsByTagName","style","overflow","operateType","addIndex","setCheckboxDisabled","visibleRows","isFlag","getPageInfo","setCheckboxFix","editTableCompatible","editTableAPI","getUrlPathName","hash","pageStore","getAppUrl","pageurl","matchStr","match","getExtendUrl","billinfo","domainCode","moduleCode","appcode","pageTo","getAppCode","pagecode","getPageCode","fastExtend","feConfig","extendUrl","src","extendPath","allScript","from","element","getAttribute","srcriptAlreadyExist","script","createElement","readyState","addEventListener","readStateChange","removeEventListener","allMethods","dataAlreadyLoaded","templateAlreadyLoaded","beforeAjaxSend","localExtendRouter","body","appendChild","$script","removeChild","removeScript","outputWrapper","EXPORTS","EXPORT","initTemplate","mutiLangCode","domainName","hashChangeCallBack","relationAfterEventCallBack","appAutoFocus","historyBack","App","use","search","componentNames","_store","simpleTableDataSource","searchDataSource","treeTableDataSource","metaData","beforeUpdatePage","updatePage","formid","tableid","buttonAreas","editid","cardTable","editTable","keyDownHandle","keyCode","which","charCode","shouldAutoFocus","disableHistory","history","pushState","URL","isIE","userAgent","navigator","isOpera","startPerMonitor","listenSprNum","top","sys_monitor","that","handleModifySPR","getbMonitor","initMonitor","spr","startMonitor","setPageStatus","location","query","Qs","setState","getPageStatus","endMonitor","myState","oprationIndex","buttonsComponent","buttonsLangJson","lang","intl","stopOprationBtnsRenderAreas","oprationButtons","appButtons","buttons","btnInfo","transferTable","totalTemplateKeys","bodyColumn","fullColumns","totalStatusOfTransferTable","headTotalStatusOfTransferTable","fullTotalStatusOfTransferTable","bodyTotalStatusOfTransferTable","traversalStatus","jsonIntl","transferList","keySessionS","myForm","myCrossServiceBtn","myCrossServiceState","nativeSocketBillInfo","syncTreeDataSource","asyncTreeDataSource","globalPageCode","myCardPagination","myTable","myEditTable","myMulTable","myMulData","infoExchangeController","onHeightChange","area","cardPagination","formBack","formGroupData","showFormIcon","groupsId","button","anchorNav","dragDown","insertTable","treeData","modal","tableModeldata","treeTableCol","referItem","formItemWidth","autoFocusFormItem","tabOrder","tab","tabData","currentBill","formItemAttrFlag","moduletype","DataSource","currentSource","formrelation","formassociatedrelation","tabsID","formtabs","getMetaItems","currentItems","dataSources","app_context","addMeta","removeMeta","multipleMeta","gridMultiple","tempArr","one","everyOne","splice","handleMultiple","relation","handleChildMultiple","first","isObj","multipleItem","renderTabs","showTab","primordialTable","batchData","editTableInitValue","tableChangedRowsOldValue","formOldValues","formStatusFlag","formSetFormValues","formsetFormVisible","setFormVisibleByForm","copyMetaBeforePkorg","getCompatibleApi","treeTableManyCol","treeTableCompatible","CreateSearch","CardPagination","BillHeadInfo","socket","Socket","CrossServiceBtns","Button","ButtonApp","DragWidthCom","InsertTable","TransferTable","asyncTree","AsyncTree","syncTree","SyncTree","downLoad","url","formDownload","enctype","CreateModal","NCmodal","CreateNCModal","newItem","replaceItem","getPageDataByMeta","metaObj","saveData","createMasterChildData","head_code","body_code","tabletype","head","templetid","createTabsMasterChildData","getAllTabsData","createMasterChildDataSimple","isDeleteEmptyItem","delEmptyData","requestMeta","ssc_templetid","urlAppcode","reqData","rqUrl","rqJson","rqCode","reqDataQuerypage","reqDataQueryallbtns","storeCipher","localStorage","getItem","getMetaKey","g","Gzip","getGlobalStorage","unzip","template","refreshMeta","gzip","cacheMeta","isExeCacheMeta","ajax","sysAppcode","success","jsonMeta","MetaTemp","MetaItem","templateCode","newMeta","zip","setGlobalStorage","createUIDom","actionName","billtype","method","billpk","billtypecode","sence","appPageVO","appReqParam","getAppReqParam","createExtCardDataSimple","bodys_code","bodys","createExtCardData","createTabsCardData","getSearchParam","pushTo","openTo","parentParam","specialOpenTo","getWinObj","setHashChangeCallback","setRelationAfterEventCallBack","setRelationItemBillinfo","linkBack","openOut","getUrlParam","setUrlParam","delUrlParam","addUrlParam","popObj","createFormAfterEventData","form_code","getOldValue","createHeadAfterEventData","cardData","card","createTabsAfterEventData","createGridAfterEventData","grid_code","gridData","grid","createBodyAfterEventData","createTabsBodyAfterEventData","createCurrentRowAfterEventData","getrelationItems","relationItems","createGridAfterEventRecord","createHeadAfterEventRecord","createBodyAfterEventRecord","handleSumChildCol","editformula","formula","masterInfo","childInfo","formAreaCode","formAttrcode","tableAreaCode","tableAttrcode","sums","colValues","sum","afterData","headcode","billBodyCode","bodycode","tablecode","handleTabRelationItems","editformulaArr","sumformulaLen","singleformula","tableTypeObj","formulamsg","dealFormulamsg","async","currentIndex","mesArr","currentcode","maincode","relationcode","editflag","rownum","noCancelBtn","outPromptByArr","Arr","promptBox","beSureBtnClick","cancelBtnClick","validateToSave","billType","validateFlag","userJson","updateTabDataByIndexs","dealTabFormulamsg","setTabTdEditByIndex","validateToTabSave","initMetaByPkorg","isTableForm","isTableEditForm","_disabled","getAllFormItem","MutiInit","mutiInit","MultiInit","getMultiLang","resMetaAfterPkorgEdit","getFormList","ncmodal","checkNode","findFocusModuleId","controlAutoFocus","executeAutoFocus","getFocusRowIndex","getAuthorityOfNotification","noticeToUser","multiCardTable","init","install","tabindex","setAttribute","appDom","unstall","isOpenMonitor","ref","Component","api","unfinishedApi","notLoadedApi","scriptMap","useJS","useList","loaded","args","all","dep","path","substr","onload","onerror","err","loadJS","nextConfig","BRANCH","PLATFORM_VERSION","high","base","DragWithCom","oldbase","importMap","Breadcrumb","NCBreadcrumbItem","Checkbox","CheckboxGroup","Dnd","GridLayout","NCFormItem","Menu","NCSubMenu","NCMenuItemGroup","NCDivider","Item","Select","NCOption","Step","NCSteps","Tabs","NCTabPane","Tree","NCTreeNode","Upload","Dragger","ButtonGroup","NCButton","Modal","Header","Title","Body","Footer","MultiLangText","MultiOption","Radio","NCRadioGroup","NCRadioButton","subkey","NCScrollElement","ScrollElement","NCScrollLink","ScrollLink","NCFormControl","EmptyAreaTip","NCNumber","NCDatePicker","NCRangePicker","NCYearPicker","USUAL_KEYS","NCHotKeys","themeTypes","getTheme","themeType","setTheme","baseName","addFontClass","tableTotal","arrayPrefixGenerators","brackets","prefix","comma","indices","repeat","pushToArray","arr","valueOrArray","apply","toISO","toISOString","defaultFormat","defaults","addQueryPrefix","allowDots","charsetSentinel","delimiter","encoder","encodeValuesOnly","format","formatter","serializeDate","date","skipNulls","strictNullHandling","generateArrayPrefix","sort","v","objKeys","keyPrefix","opts","TypeError","normalizeStringifyOptions","arrayFormat","joined","arrayLimit","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","numberStr","fromCharCode","parseArrayValue","parseKeys","givenKey","valuesParsed","segment","exec","parent","chain","leaf","cleanRoot","0","parseObject","normalizeParseOptions","tempObj","cleanStr","limit","Infinity","parts","skipIndex","part","bracketEqualsPos","pos","encodedVal","parseValues","newObj"],"mappings":"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","file":"platform-login.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@platform/api/index\"), require(\"@platform/components/index\"), require(\"@platform/table-core/index\"), require(\"react\"), require(\"@platform/base/index\"), require(\"@platform/card-table/index\"), require(\"@platform/form/index\"), require(\"@platform/simple-table/index\"), require(\"@platform/edit-table/index\"), require(\"@platform/transfer-table/index\"), require(\"@platform/tree-table/index\"), require(\"babel-polyfill\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@platform/api/index\", \"@platform/components/index\", \"@platform/table-core/index\", \"react\", \"@platform/base/index\", \"@platform/card-table/index\", \"@platform/form/index\", \"@platform/simple-table/index\", \"@platform/edit-table/index\", \"@platform/transfer-table/index\", \"@platform/tree-table/index\", \"babel-polyfill\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"platform-login\"] = factory(require(\"@platform/api/index\"), require(\"@platform/components/index\"), require(\"@platform/table-core/index\"), require(\"react\"), require(\"@platform/base/index\"), require(\"@platform/card-table/index\"), require(\"@platform/form/index\"), require(\"@platform/simple-table/index\"), require(\"@platform/edit-table/index\"), require(\"@platform/transfer-table/index\"), require(\"@platform/tree-table/index\"), require(\"babel-polyfill\"));\n\telse\n\t\troot[\"platform-login\"] = factory(root[\"@platform/api/index\"], root[\"@platform/components/index\"], root[\"@platform/table-core/index\"], root[\"React\"], root[\"@platform/base/index\"], root[\"@platform/card-table/index\"], root[\"@platform/form/index\"], root[\"@platform/simple-table/index\"], root[\"@platform/edit-table/index\"], root[\"@platform/transfer-table/index\"], root[\"@platform/tree-table/index\"], root[\"babel-polyfill\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__7__, __WEBPACK_EXTERNAL_MODULE__8__, __WEBPACK_EXTERNAL_MODULE__14__, __WEBPACK_EXTERNAL_MODULE__15__, __WEBPACK_EXTERNAL_MODULE__17__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../platform/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar util = require('./utils');\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = util.assign(\n    {\n        'default': Format.RFC3986,\n        formatters: {\n            RFC1738: function (value) {\n                return replace.call(value, percentTwenties, '+');\n            },\n            RFC3986: function (value) {\n                return String(value);\n            }\n        }\n    },\n    Format\n);\n","export const name = 'NCCExtend';\r\n\r\nexport const emptyf = function () {\r\n};\r\n\r\nexport const enable = window.NCCExtendEable || true;\r\n\r\nexport default {\r\n    name,\r\n    emptyf,\r\n    enable\r\n};","\r\n\r\nimport * as config from './const';\r\n\r\nexport const feConfigName = config.name;\r\n\r\nexport const getCheckedMethod = function (obj, name, defaultf) {\r\n\treturn obj && typeof obj[name] === 'function' ? obj[name] : (defaultf || config.emptyf);\r\n};\r\n\r\nexport const getCheckedExtendMethod = function (obj, name, defaultf) {\r\n\t// console.log('二开相关回调方法', config, name);\r\n\tif (name === 'templateAlreadyLoaded') {\r\n\t\tconsole.log('二开相关回调方法', config, name);\r\n\t}\r\n\t// 有些特殊情况 取不到this对象上的方法\r\n\tif (obj && (!obj[config.name] || JSON.stringify(obj[config.name]) === '{}')) {\r\n\t\tobj = window;\r\n\t}\r\n\treturn obj && obj[config.name] ? getCheckedMethod(obj[config.name], name, defaultf) : (defaultf || config.emptyf);\r\n};\r\n\r\n// export const decoratorZ = function (target, name, descriptor) {\r\n// \tvar oldValue = descriptor.value;\r\n// \tdescriptor.value = function () {\r\n// \t\tconsole.log(`before ${name}`, this);\r\n// \t\tlet res = oldValue.apply(this, arguments);\r\n// \t\tconsole.log(`after ${name}`);\r\n// \t\treturn res;\r\n// \t};\r\n// \treturn descriptor;\r\n// };\r\n\r\nconst defaultFxConfig = {\r\n\tonAfterEvent: 'after', // after before replace remian\r\n\tonBeforeEvent: 'before',\r\n\tonEditTableAfterEvent: 'after', // after before replace remian\r\n\tonEditTableBeforeEvent: 'before',\r\n\tonFormAfterEvent: 'after', // after before replace remian\r\n\tonFormBeforeEvent: 'before',\r\n\tonCardTableAfterEvent: 'after', // after before replace remian\r\n\tonCardTableBeforeEvent: 'before',\r\n};\r\n\r\nfunction testType(origin) {\r\n\treturn Object.prototype.toString.call(origin).slice(8, -1);\r\n}\r\n\r\nexport const beforeAndAfter = function (pageScope, info = {}, fy, fx) {\r\n\t//有些特殊情况 取不到this对象上的方法\r\n\tif (JSON.stringify(pageScope[config.name]) === '{}') { \r\n\t\tpageScope = window;\r\n\t}\r\n\t// console.log('二开相关回调方法', info);\r\n\tif (!pageScope[config.name] || !info || !info['attrcode'] || !info['fxType']) {\r\n\t\treturn fy();\r\n\t}\r\n\tlet { attrcode, moduleId = '', fxType = 'onAfterEvent', fxParams = {} } = info,\r\n\t\tfe = pageScope[config.name],\r\n\t\tfxConfig = {\r\n\t\t\t...defaultFxConfig,\r\n\t\t\t...(fe['defaultFxConfig'] || {}),\r\n\t\t\t...(fe[moduleId + '-' + attrcode] || {})\r\n\t\t};\r\n\t// 获取对应的回调方法\r\n\tfx = fx || getCheckedExtendMethod(pageScope, fxType);\r\n\t// console.log(fxConfig, info, fe['defaultFxConfig']);\r\n\tif (fxConfig[fxType] === 'mixin') {\r\n\t\treturn fx(fxParams, fy);\r\n\t} else if (fxConfig[fxType] === 'replace') {\r\n\t\treturn fx(fxParams);\r\n\t} else if (fxConfig[fxType] === 'before') {\r\n\t\tconst orderResult = fx(fxParams); // 可以考虑添加异步处理\r\n\t\tif (testType(orderResult) === 'AsyncFunction') {\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\torderResult().then(data => {\r\n\t\t\t\t\tfy();\r\n\t\t\t\t\tresolve(data);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else if (testType(orderResult) === 'Promise') {\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\torderResult.then(data => {\r\n\t\t\t\t\tfy(); // 这里也可能是异步关系\r\n\t\t\t\t\tresolve(data);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn fy();\r\n\t\t}\r\n\t} else {\r\n\t\tconst orderResult = fy(); // 可以考虑添加异步处理\r\n\t\tif (testType(orderResult) === 'AsyncFunction') {\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\torderResult().then(data => {\r\n\t\t\t\t\tfx(fxParams);\r\n\t\t\t\t\tresolve(data);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else if (testType(orderResult) === 'Promise') {\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\torderResult.then(data => {\r\n\t\t\t\t\tfx(fxParams); // 这里也可能是异步关系\r\n\t\t\t\t\tresolve(data);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn fx(fxParams);\r\n\t\t}\r\n\t}\r\n\r\n};\r\nexport default {\r\n\tgetCheckedExtendMethod,\r\n\tgetCheckedMethod,\r\n\tbeforeAndAfter,\r\n\tfeConfigName,\r\n};","/*\r\n * @Author: your name\r\n * @Date: 2020-07-16 11:10:16\r\n * @LastEditTime: 2020-11-17 09:56:49\r\n * @LastEditors: bbq\r\n * @Description: In User Settings Edit\r\n * @FilePath: /Platform_Front/src/platform/components/Form/compatible.js\r\n */\r\nimport React from \"react\";\r\nimport Form from \"@platform/form\";\r\nimport { localeLang, PubSub, isFunction, toast } from '@platform/api';\r\nimport { beforeAndAfter, getCheckedExtendMethod } from '../../FastExtend/utils';\r\n\r\n/**\r\n * @description: 获取当前form的Store \r\n * @param {type} \r\n * @return: \r\n */\r\nfunction getStore(moduleId) {\r\n    if (this.formDataSource && this.formDataSource[moduleId]) {\r\n        return this.formDataSource[moduleId]\r\n    } else {\r\n        // console.warn('不存在formDataSource');\r\n        // return null\r\n        // 暂时通过error 提醒业务组、 稳定后可去掉\r\n        throw Error(`正在调用formID为${moduleId}的表单的API, 但此表单还未通过use.form注册,请先注册此ID，才能正常调用API`)\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 获取page、兼容处理编辑前编辑后等回调函数的第一个参数\r\n * @param {type} \r\n * @return: \r\n */\r\nfunction getContext(config = {}, context = {}) {\r\n    let newConfig = { ...config };\r\n\r\n    newConfig.onBeforeEvent = function (...rest) {\r\n        let fxParams = { areaId: rest[0], itemId: rest[1], methods: context.output, form: rest[3], item: rest[2] };\r\n        // console.log('beforeAndAfter before', fxParams);\r\n        return beforeAndAfter(\r\n            context,\r\n            { moduleId: rest[0], attrcode: rest[1], fxType: 'onFormBeforeEvent', fxParams },\r\n            () => {\r\n                if (typeof config.onBeforeEvent === 'function') {\r\n                    return config.onBeforeEvent.call(context, { ...context.props, ...context.output }, ...rest)\r\n                }\r\n                return true;\r\n            });\r\n    }\r\n\r\n    newConfig.onAfterEvent = function (rest) {\r\n        const {\r\n            areaId, // 主表\r\n            attrcode,\r\n            curMetaItem, // 当前字段属性\r\n            value,\r\n            oldValue,\r\n            componentValue,\r\n            allValue,\r\n            singleFormCode, // 当前子表ID\r\n        } = rest;\r\n        // 暂时处理编辑关联项\r\n        if (curMetaItem.editAfterFlag && isFunction(context.handleRelationItems)) {\r\n            context.handleRelationItems({\r\n                type: 'form',\r\n                areaCode: areaId,\r\n                formMetaCode: singleFormCode,\r\n                key: attrcode,\r\n                value,\r\n                callback: () => {\r\n                    let fxParams = { areaId, itemId: attrcode, methods: context.output, form: allValue, finalValue: value, oldValue, val: componentValue };\r\n                    beforeAndAfter(\r\n                        context,\r\n                        { moduleId: areaId, attrcode, fxType: 'onFormAfterEvent', fxParams },\r\n                        () => {\r\n                            typeof config.onAfterEvent === 'function' && config.onAfterEvent.call(context, { ...context.props, ...context.output }, areaId, attrcode, value, oldValue, componentValue, allValue)\r\n                        });\r\n                },\r\n            })\r\n        } else {\r\n            let fxParams = { areaId, itemId: attrcode, methods: context.output, form: allValue, finalValue: value, oldValue, val: componentValue };\r\n            // console.log('beforeAndAfter after', fxParams);\r\n            beforeAndAfter(\r\n                context,\r\n                { moduleId: areaId, attrcode, fxType: 'onFormAfterEvent', fxParams },\r\n                () => {\r\n                    typeof config.onAfterEvent === 'function' && config.onAfterEvent.call(context, { ...context.props, ...context.output }, areaId, attrcode, value, oldValue, componentValue, allValue)\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    return newConfig\r\n}\r\n\r\n/**\r\n * @description: 创建表单\r\n * @param {type} moduleId 主表ID\r\n * @param {type} config Object 表单配置项\r\n * @return: \r\n */\r\nfunction createForm(moduleId, config = {}) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    return (\r\n        <Form\r\n            key={moduleId}\r\n            store={currentStore}\r\n            name={moduleId}\r\n            formComponentUpdate={form => {\r\n                // console.log('getCheckedExtendMethod', form);\r\n                getCheckedExtendMethod(this, 'updateForm')({ form, moduleId, page: this, useOn: 'create' });\r\n            }}\r\n            config={getContext(config, this)}\r\n            // 快捷键 解耦\r\n            getHotKeyConfig={() => {\r\n                return {\r\n                    autoFocusDeferred: this.autoFocusDeferred,\r\n                    meta: this.state.meta,\r\n                    withHotKeyChange: this.withHotKeyChange,\r\n                    orderOfHotKey: this.orderOfHotKey,\r\n                    onLastFormEnter: config.onLastFormEnter,\r\n                };\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\n/**\r\n * @description: 设置表单全部数据\r\n * @param {Object, Boolean, Boolean, Array, Function} \r\n * @return: \r\n */\r\nfunction setAllFormValue(formDataObj, copyFlag = true, emptyOldVal = false, setOldValueExceptKey, callback) {\r\n    for (let moduleId of Object.keys(formDataObj)) {\r\n        let newData = formDataObj[moduleId].rows[0].values,\r\n            currentStore = getStore.call(this, moduleId);\r\n        currentStore.setAllFormValue(newData, copyFlag, emptyOldVal, setOldValueExceptKey, callback)\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 获取表单所有数据\r\n * @param {String/Array}   \r\n * @return: Object\r\n */\r\nfunction getAllFormValue(moduleIds) {\r\n    if (Array.isArray(moduleIds)) {\r\n        let allFormData = {};\r\n        for (let moduleId of moduleIds) {\r\n            allFormData[moduleId] = getSingleData.call(this, moduleId);\r\n        }\r\n        return allFormData\r\n    } else {\r\n        return getSingleData.call(this, moduleIds)\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 获取单个表数据\r\n * @param {type} \r\n * @return: \r\n */\r\nfunction getSingleData(moduleId, isSimple = false) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    let formData = isSimple ? setReferValueSimple(moduleId, currentStore.getAllFormValue()) : setReferValue(moduleId, currentStore.getAllFormValue());\r\n    let data = { values: formData };\r\n    let status = currentStore.getStatus();\r\n    if (status == 'add') {\r\n        data.status = '2';\r\n    } else if (status == 'edit') {\r\n        data.status = '1';\r\n    }\r\n    return {\r\n        areaType: 'form',\r\n        rows: [data],\r\n    };\r\n}\r\n\r\n/**\r\n * @description: 获取表单中某个字段的值\r\n * @param {String, Array} \r\n * @return: \r\n */\r\nfunction getFormItemsValue(moduleId, data) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    if (currentStore) {\r\n        if (Array.isArray(data)) {\r\n            let newData = [];\r\n            newData = data.map(item => {\r\n                let result = null;\r\n                result = currentStore.getItemValue(item)\r\n                return result;\r\n            });\r\n            return newData;\r\n        } else {\r\n            let newData = currentStore.getItemValue(data, true)\r\n            return newData\r\n        }\r\n    } else {\r\n        if (Array.isArray(data)) {\r\n            let newData = [];\r\n            newData = data.map(() => {\r\n                return {\r\n                    display: null,\r\n                    value: null,\r\n                };\r\n            });\r\n            return newData;\r\n\r\n        } else {\r\n            return {\r\n                display: null,\r\n                value: null,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 设置表单中某个字段的值\r\n * @param {String, Object, Boolean} \r\n * @return: \r\n */\r\nfunction setFormItemsValue(moduleId, values = {}, cancel = true) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    let hasNumberField = false;\r\n    for (let key of Object.keys(values)) {\r\n        let itemtype = currentStore.getItemAttribute(key, 'itemtype');\r\n        if (itemtype === 'number') {\r\n            hasNumberField = true;\r\n        }\r\n        currentStore.setItemValue(key, { ...values[key] }, { cancel })\r\n    }\r\n    // number的value值里有scale，属于props，需要整表更新；\r\n    hasNumberField && currentStore.forceUpdate();\r\n}\r\n\r\n/**\r\n * @description: 获取表单某个或某些字段的编辑性\r\n * @param {String, String/Array} \r\n * @return: \r\n */\r\nfunction getFormItemsDisabled(moduleId, keys) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n\r\n    if (Array.isArray(keys)) {\r\n        let res = [];\r\n        res = keys.map(item => {\r\n            return !!currentStore.getItemAttribute(item, 'disabled');\r\n        });\r\n        return res;\r\n    } else {\r\n        return !!currentStore.getItemAttribute(keys, 'disabled');\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 设置表单编辑性\r\n * @param {String, Object} \r\n * @return: \r\n */\r\nfunction setFormItemsDisabled(moduleId, values) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore.setItemAttribute('disabled', values)\r\n}\r\n\r\n/**\r\n * @description: 设置表单某些字段的必输性\r\n * @param {String,Obejct} \r\n * @return: \r\n */\r\nfunction setFormItemsRequired(moduleId, values) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore.setItemAttribute('required', values)\r\n}\r\n\r\n/**\r\n * @description: 获取表单某些字段的必输性\r\n * @param {String,String} \r\n * @return: \r\n */\r\nfunction getFormItemsRequired(moduleId, keys) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n\r\n    if (Array.isArray(keys)) {\r\n        let res = [];\r\n        res = keys.map(item => {\r\n            return !!currentStore.getItemAttribute(item, 'required');\r\n        });\r\n        return res;\r\n    } else {\r\n        return !!currentStore.getItemAttribute(keys, 'required');\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 设置表单某些字段的显隐性\r\n * @param {type} \r\n * @return: \r\n */\r\nfunction getFormItemsVisible(moduleId, keys) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n\r\n    if (Array.isArray(keys)) {\r\n        let res = [];\r\n        res = keys.map(item => {\r\n            return !!currentStore.getItemAttribute(item, 'visible');\r\n        });\r\n        return res;\r\n    } else {\r\n        return !!currentStore.getItemAttribute(keys, 'visible');\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 设置表单某些字段的显隐性\r\n * @param {type} \r\n * @return: \r\n */\r\nfunction setFormItemsVisible(moduleId, values) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore.setItemAttribute('visible', values)\r\n}\r\n\r\n/**\r\n * @description: 设置表单某些字段的校验规则\r\n * @param {type} \r\n * @return: \r\n */\r\nfunction setFormItemsVerify(moduleId, keys) {\r\n    // TODO: 2005版没对这个方法做实现\r\n    let currentStore = getStore.call(this, moduleId);\r\n\r\n    if (Array.isArray(keys)) {\r\n        let res = [];\r\n        res = keys.map(item => {\r\n            return !!currentStore.getItemAttribute(item, 'verify');\r\n        });\r\n        return res;\r\n    } else {\r\n        return !!currentStore.getItemAttribute(keys, 'verify');\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 设置表单某些字段的校验规则\r\n * @param {type} \r\n * @return: \r\n */\r\nfunction getFormItemsVerify(moduleId, values) {\r\n    // TODO: 这里逻辑有问题，2005版没对这个方法做实现\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore.setItemAttribute('verify', values)\r\n}\r\n\r\n/**\r\n * @description: 清空表单所有数据\r\n * @param {String, Array, Boolean} \r\n * @return: \r\n */\r\nfunction EmptyAllFormValue(moduleId, exceptArr, cancel = true) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore.emptyAllFormValue(exceptArr, cancel)\r\n}\r\n\r\n/** \r\n * @description: 表单检验(必填,正则校验)\r\n * @param {String, String} \r\n * @return: Boolean \r\n */\r\nfunction isCheckNow(moduleId, type = 'danger') {\r\n    let requiredItems = [], \r\n        regItems = [], \r\n        maxItems = [],\r\n        flag = true,\r\n        toastStore;\r\n    if (Array.isArray(moduleId)) {\r\n        moduleId.forEach((item, index) => {\r\n            let currentStore = getStore.call(this, item);\r\n            if (index === 0) toastStore = currentStore\r\n            let res = currentStore.isCheckNow();\r\n            requiredItems = requiredItems.concat(res.requiredItems);\r\n            regItems = regItems.concat(res.regItems);\r\n            maxItems = maxItems.concat(res.maxItems);\r\n        });\r\n    } else {\r\n        let currentStore = getStore.call(this, moduleId);\r\n        toastStore = currentStore;\r\n        ({ requiredItems, regItems, maxItems } = currentStore.isCheckNow());\r\n    }\r\n    if (requiredItems.length || regItems.length || maxItems.length) {\r\n        flag = false;\r\n\r\n        let json = toastStore.getInnerHooks().getJson();\r\n        \r\n        let toastContent = '';\r\n        \r\n        if (requiredItems.length) {\r\n            toastContent += `${json['page-form-0001']}：${requiredItems.join(', ')}\\n`\r\n        }\r\n        if (regItems.length) {\r\n            toastContent += `${json['page-form-0002']}：${regItems.join(', ')}\\n`\r\n        }\r\n        if (maxItems.length) {\r\n            toastContent += `${json['page-form-0010']}：${maxItems.join(', ')}`\r\n        }\r\n\r\n        toast({\r\n            mark: 'form_isCheckNow',\r\n            color: type,\r\n            title: json['page-form-0009'],\r\n            content: toastContent,\r\n        });\r\n    }\r\n    return flag\r\n}\r\n\r\n/**\r\n * @description: 展开表单某个区域\r\n * @param {String} 主表ID  和  分组ID\r\n * @return: \r\n */\r\nfunction openArea(moduleId, groupId) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore && currentStore.openArea(groupId)\r\n}\r\n\r\n/**\r\n * @description: 收起表单某个区域\r\n * @param {String}  主表ID  和  分组ID\r\n * @return: \r\n */\r\nfunction closeArea(moduleId, groupId) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore && currentStore.closeArea(groupId)\r\n}\r\n\r\nfunction setAreaVisible(moduleId, groupId, visible) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore && currentStore.setAreaVisible(groupId, visible);\r\n}\r\n\r\nfunction getAreaVisible(moduleId, groupId, visible) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore && currentStore.getAreaVisible(groupId, visible);\r\n}\r\n\r\nfunction setActiveTab(moduleId, activeTabCode) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore && currentStore.getInnerHooks().setFormTabs(activeTabCode);\r\n}\r\n\r\nfunction getActiveTab(moduleId) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore && currentStore.getInnerHooks().getFormTabs();\r\n}\r\n\r\n/**\r\n * @description: 表单取消方法\r\n * @param {String/Array} \r\n * @return: \r\n */\r\nfunction cancel(moduleIds) {\r\n    if (Array.isArray(moduleIds)) {\r\n        for (let moduleId of moduleIds) {\r\n            let currentStore = getStore.call(this, moduleId);\r\n            currentStore.cancel()\r\n        }\r\n    } else {\r\n        let currentStore = getStore.call(this, moduleIds);\r\n        currentStore.cancel()\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 设置表单status\r\n * @param {String, String} \r\n * @return: \r\n */\r\nfunction setFormStatus(moduleId, status) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore.setStatus(status)\r\n}\r\n\r\n/**\r\n * @description: 获取表单status\r\n * @param {String} \r\n * @return: \r\n */\r\nfunction getFormStatus(moduleId) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    return currentStore.getStatus()\r\n}\r\n\r\n/**\r\n * @description: 检验是否必填 没看出来有什么用处\r\n * @param {String} \r\n * @return: Boolean\r\n */\r\nfunction checkRequired() {\r\n    return false\r\n}\r\n\r\n/**\r\n * @description: 表单从新计算\r\n * @param {String} \r\n * @return: \r\n */\r\nfunction resetItemWidth(moduleId) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore.countFormWidth()\r\n}\r\n\r\n/**\r\n * @description: 自动获取焦点API\r\n * @param {String,String} \r\n * @return: \r\n */\r\nfunction setFormItemAutoFocus(moduleId, attrcode) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    console.log(moduleId);\r\n    currentStore.getInnerHooks().setStore('autoFocusFormItem', attrcode);\r\n}\r\n\r\n/**\r\n * @description: 更新表单\r\n * @param {String/Array} \r\n * @return: \r\n */\r\nfunction updateForm(moduleId) {\r\n    console.log(moduleId);\r\n}\r\n\r\n/**\r\n * @description: 获取表单所有简化版数据\r\n * @param {String, Array} \r\n * @return: Array\r\n */\r\nfunction getAllFormValueSimple(moduleIds) {\r\n    if (Array.isArray(moduleIds)) {\r\n        let allFormData = {};\r\n        for (let moduleId of moduleIds) {\r\n            allFormData[moduleId] = getSingleData.call(this, moduleId, true);\r\n            return allFormData\r\n        }\r\n    } else {\r\n        return getSingleData.call(this, moduleIds, true)\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 简化表单每一项数据\r\n * @param {String, Object} \r\n * @return: Object\r\n */\r\nfunction setReferValueSimple(moduleId, formData = {}) {\r\n    let newData = {};\r\n    // Object.keys(formData).forEach(pop => {\r\n    //     if (!isEmpty(formData[pop].value)) {\r\n    //         newData[pop] = { value: formData[pop].value };\r\n    //     } else {\r\n    //         newData[pop] = {};\r\n    //     }\r\n    // })\r\n    for (let pop in formData) {\r\n        if (!isEmpty(formData[pop].value)) {\r\n            newData[pop] = { value: formData[pop].value };\r\n        } else {\r\n            newData[pop] = {};\r\n        }\r\n    }\r\n    return newData;\r\n}\r\n\r\n/**\r\n * @description: 判断第一个参数是否为空，后面可以传其他【认为是空值】的参数\r\n * @param {} \r\n * @return: Boolean\r\n */\r\nfunction isEmpty(val, ...rest) {\r\n    if (val === null || val === undefined || rest.find(e => e == val)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * @description: 设置显隐性\r\n * @param {type} \r\n * @return: \r\n */\r\nfunction setItemsVisible(moduleId, values) {\r\n    setFormItemsVisible.call(this, moduleId, values)\r\n}\r\n\r\n/**\r\n * @description: attrcode 获取 当前登录语言的 attrcode \r\n* @param  moduleId String  form的id号 \r\n * @param  attrcode String 字段\r\n * @return: \r\n */\r\nfunction getResidtxtLang(moduleId, attrcode) {\r\n    return attrcode;\r\n}\r\n\r\nfunction setFormPopConfirmSwitchTips(moduleId) {\r\n\r\n}\r\n\r\n/**\r\n * @description: 设置表单某项获取焦点\r\n * @param {String,String} \r\n * @return: \r\n */\r\nfunction setFormItemFocus(moduleId, attrcode) {\r\n    if (moduleId && attrcode) {\r\n        PubSub.publish('autoFocus', { data: attrcode });\r\n    }\r\n}\r\n\r\nfunction focusFormItem(moduleId) {\r\n\r\n}\r\n\r\nfunction focusFormNextItem(moduleId) {\r\n\r\n}\r\n\r\nfunction updateDataByRefresh(moduleId, newData, pkname) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n\r\n    if (currentStore && newData) {\r\n        let FormData = getAllFormValue.call(this, moduleId);\r\n        FormData = FormData.rows ? FormData.rows[0] : {};\r\n        FormData = FormData.values ? FormData.values : {};\r\n        //let newData = refreshData[0];\r\n        let pknameValue = FormData[pkname] ? (FormData[pkname].value || FormData[pkname].display || FormData[pkname]) : '';\r\n        // 根据pkname进行更新 \r\n        if (pkname && pknameValue == newData[pkname]) {\r\n            for (let pop in newData) {\r\n                FormData[pop] = {\r\n                    ...FormData[pop],\r\n                    value: newData[pop],\r\n                };\r\n            }\r\n            currentStore.setAllFormValue(FormData)\r\n        }\r\n        console.log('update form data by pkname:', pkname);\r\n    }\r\n}\r\n\r\nfunction clearFormVerify(moduleId) {\r\n\r\n}\r\n\r\n/**\r\n * @description: 设置参照值\r\n * @param {String, Object} \r\n * @return: \r\n */\r\nfunction setReferValue(moduleId, formData) {\r\n    let newResData = {}; //新加--提高效率\r\n    for (let pop in formData) {\r\n        let result = null;\r\n        if (formData[pop]) {\r\n            if (Object.prototype.toString.call(formData[pop].value).slice(8, -1) === 'String') {\r\n                formData[pop].value = formData[pop].value.trim();\r\n            }\r\n            result = {\r\n                display: formData[pop].display,\r\n                value: formData[pop].value,\r\n            };\r\n            if (formData[pop].hasOwnProperty('scale')) {\r\n                result.scale = formData[pop].scale;\r\n            }\r\n        }\r\n        //formData[pop] = result;\r\n        newResData[pop] = result;//新加--提高效率\r\n    }\r\n    return newResData;\r\n}\r\n\r\nfunction reset(moduleId) {\r\n    let currentStore = getStore.call(this, moduleId);\r\n    currentStore.reset('visible')\r\n}\r\n\r\nexport {\r\n    createForm,\r\n    getAllFormValue,\r\n    setAllFormValue,\r\n    getFormItemsValue,\r\n    setFormItemsValue,\r\n    getFormItemsDisabled,\r\n    setFormItemsDisabled,\r\n    setFormItemsRequired,\r\n    getFormItemsRequired,\r\n    getFormItemsVisible,\r\n    setFormItemsVisible,\r\n    setFormItemsVerify,\r\n    getFormItemsVerify,\r\n    EmptyAllFormValue,\r\n    isCheckNow,\r\n    openArea,\r\n    closeArea,\r\n    setAreaVisible,\r\n    getAreaVisible,\r\n    setActiveTab,\r\n    getActiveTab,\r\n    cancel,\r\n    setFormStatus,\r\n    getFormStatus,\r\n    checkRequired,\r\n    resetItemWidth,\r\n    setFormItemAutoFocus,\r\n    updateForm,\r\n    getAllFormValueSimple,\r\n    setItemsVisible,\r\n    getResidtxtLang,\r\n    setFormPopConfirmSwitchTips,\r\n    setFormItemFocus,\r\n    focusFormItem,\r\n    focusFormNextItem,\r\n    updateDataByRefresh,\r\n    clearFormVerify,\r\n    // reset,\r\n}","/*\r\n * @Author: wanglongx\r\n * @Date: 2020-07-16 11:07:43\r\n * @LastEditTime: 2020-07-16 20:17:53\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: /Platform_Front/src/platform/components/Form/output.js\r\n */ \r\nimport * as formAPI from \"./compatible\";\r\nimport Form from \"@platform/form\";\r\n\r\n/**\r\n * @param {string} mainCode \r\n * @param {object} config \r\n */\r\n\r\nexport default function formCompatible() {\r\n    this.register(\"form\");\r\n    return {\r\n        store: Form.useForm,\r\n        ...apiBindPage.call(this, formAPI),\r\n    };\r\n}\r\n\r\nfunction apiBindPage(formAPI){\r\n    let res ={}\r\n    for(let pop of Object.keys(formAPI)){\r\n        res[pop] = formAPI[pop].bind(this);\r\n    }\r\n    return res;\r\n}\r\n\r\nformCompatible.component = Form;\r\nformCompatible.displayName = \"Form\";\r\nformCompatible.unfinished = [];\r\n","import CardTable from '@platform/card-table';\r\nimport React from 'react';\r\n\r\nimport { CONFIG, utils } from '@platform/table-core';\r\n\r\nimport { beforeAndAfter, getCheckedExtendMethod } from '../../../../FastExtend/utils';\r\n\r\nconst { isFunction, isArray, isObject, warningOnce, isString, isUndefined, isWrong } = utils;\r\n\r\nimport { toast, linkTo, getCookie, PubSub, clearOneTypeToast } from '@platform/api';\r\n\r\nconst { useCardTable, TabsTableStore } = CardTable;\r\n\r\n// console.log(useCardTable, TabsTableStore);\r\n\r\nconst ROW_STATUS = CONFIG.ROW_STATUS;\r\n\r\n// 页面其他区域变化表格重新计算标识\r\nconst OTHERCOMPLETE = 'otherComplete';\r\nconst HEIGHTTOSCROLL = 'heightToScroll';\r\n\r\n// console.log(beforeAndAfter, getCheckedExtendMethod);\r\n\r\n/**\r\n *  cardTable 关键功能：\r\n * *\r\n *  1.  编辑后事件：需要维护一份旧值，编辑后事件需要给业务新值和旧值\r\n *\r\n *  2.  新增行时，需要取模板 initialValue 数据 给单元格赋默认值\r\n *\r\n *  3.  孙表领域调用API测试\r\n * \r\n *\r\n * *\r\n */\r\n\r\n/**\r\n *     ***********      方 法 目 录    ************\r\n *\r\n *     PS： 按习惯和常用性排序，新增方法请追加\r\n *\r\n *     序号      \t英文名称              \t 作用\r\n * \t\t1     \tsetTableData       \t\t  设置表格数据\r\n * \t\t2     \tgetStatus          \t\t  获取表格的状态\r\n * \t\t3     \tsetStatus          \t\t  设置表格的状态\r\n * \t\t4     \tgetAllRows     \t \t\t    获得表格所有数据\r\n * \t\t5     \tgetVisibleRows     \t\t  获得表格可见数据\r\n * \t\t6     \tgetChangedRows     \t\t  获得表格修改后数据\r\n * \t\t7     \tgetNumberOfRows    \t  \t获得表格总数(可见/全部)\r\n * \t\t8     \tgetAllData        \t\t  获取表格被包装的数据\r\n *      9     \taddRow             \t  \t新增行(通过index值)\r\n * \t\t10    \tdelRowByRowId      \t  \t删除行通过（rowId\b）\r\n * \t\t11    \tdelRowsByIndex     \t\t  删除行通过（index或者indexs）\r\n * \r\n *      12    \tsetValByKeyAndIndex     设置值(通过键key和index)\r\n *      13      setValByKeyAndRowId     设置值(通过键key和rowId)\r\n *      14      resetTableData          重置表格数据(回到上次缓存)\r\n * \t\t15      updateTableData         修正表格数据\r\n * \t\t18      getValByKeyAndIndex     获取值(通过键key和index)\r\n * \t\t19      getValByKeyAndRowId     获取值(通过键key和rowId)\r\n *      22      setEditableByRowId      设置字段编辑性(通过rowId)\r\n * \t\t23\t\t  setEditableByIndex      设置字段编辑性(通过Index)\r\n * \r\n *\t\t24\t\t  pasteRow \t\t\t\t        复制粘贴行\r\n * \t\t27\t\t  getCheckedRows          获取选中行数据\r\n * \t\t28\t\t  selectAllRows           选中全部行\r\n * \t\t29\t\t  selectRowsByIndex       选中某些行(通过index)\r\n * \t\t30\t\t  unSelectRowsByIndex     取消选中某些行(通过index)\r\n * \t\t31      reverseSelected         反选\r\n * \t\t32      filterEmptyRows         移除空行\r\n * \t\t33      getAllRowsRemoveKeys    通过传入的键过滤不想要的数据\r\n * \t\t34\t\t  toggleRowView           切换视图\r\n * \t\t36      getCacheData            获取缓存数据\r\n *      37      focusRowByIndex         设置选中行(通过index)\r\n *      38      getMixinMetaData        以模板为基准获取全数据    TODO\r\n *      40      getFilterRows           筛选表格中指定数据的方法\r\n *      41      setFiltrateTableData    设置筛选后的表格数据\r\n *      42      batchChangeTableData    批量修改\r\n * \t\t45\t\t  updateDataByIndexs      更新多行的数据（根据index值）\r\n * \t\t46      insertDataByIndexs      更新多行的数据（根据index值）    !!!仅供编辑后使用\r\n * \t\t47      setRowStatusByIndexs    设置行数据的状态(根据index)\r\n * \t\t50\t\t  insertRowsAfterIndex    多行数据插入到index行后\r\n * \t\t51      setTdEditByIndex        设置某个单元格为编辑态\r\n * \t\t52      setValByKeysAndIndex    设置多个值(通过键key和index)\r\n *      53      setAllCheckboxAble      设置所有左侧复选禁/启用\r\n * \t\t57      setMulTablesData        设置多个表格数据\r\n *      58      getRowsByIndexs         根据index获取行数据\r\n *      59      checkTableRequired      根据id检测必输性\r\n *      61      setAllKeysVal           给表格所用单元格设值\r\n *      62      setClickRowIndex        设置当前点击行\r\n *      63      getClickRowIndex        获取当前点击行\r\n *      64      setSaveData             给表格所用单元格设值\r\n *      65      getDataByIndex          获取表格中一行的数据(根据index)\r\n *      66      updateDataByRowId       通过传入的行数据更新数据\r\n *      70      getCurrentIndex         获得当前行\r\n *      71      updateDiffDataByRowId   郭祉祺差异更新\r\n *      72      moveRow                 移动行方法\r\n *      73      setRowEditByIndex       设置行编辑态\r\n *   //任亚军整理\r\n *      69      setModelEdit            设置行侧拉编辑性\r\n *      68      setColVisibleByKey      设置列显示隐藏\r\n *      67      setColsValue            设置列数据\r\n * *    16      openModel               打开侧拉窗\r\n *      17      closeModel              关闭侧拉窗\r\n * *    20      hideColByKey            隐藏列(根据key)\r\n * \t\t21      showColByKey            显示列(根据key)\r\n * *    25\t\t  getColValue             获取列数据\r\n *      26\t\t  setColValue             设置列数据\r\n * *    39      closeExpandedRow        关闭任何的展开视图\r\n * *    43      openListView            最大化多表中表体卡片列表\r\n * \t\t44 \t\t  openMaxTable            最大化多表体表格\r\n * * \t48      getMetaValByKey         根据key键获取模板中数据\r\n * \t\t49      setColEditableByKey     设置某一列的编辑性\r\n * *    54\t\t  getModalDataByIndex     获取侧拉数据(根据index)\r\n * \t\t55\t\t  showEditAreaKey \t\t    设置侧拉某控件显隐\r\n * \t\t56      toggleCardTable         控制主表的收起展开\r\n * *    60      setQueryCondition       统一给表体和侧拉添加参照顾虑\r\n *\r\n *\r\n */\r\n\r\nfunction _setGrandTableStore(pageScope, store, config) {\r\n    let { grandGroup } = config;\r\n    let grandTableIds = [];\r\n    if (isArray(grandGroup) && store) {\r\n        grandGroup.forEach(item => {\r\n            grandTableIds.push(item.grandTableId);\r\n            if (!pageScope.cardTableDataSource[item.grandTableId]) {\r\n                let grandTableStore = store.getStore('grandTableStore');\r\n                grandTableStore[item.grandTableId] = TabsTableStore();\r\n                pageScope.cardTableDataSource[item.grandTableId] = grandTableStore[item.grandTableId];\r\n                store.setStore('grandTableStore', grandTableStore, false);\r\n            }\r\n            store.setStore('grandTableIds', grandTableIds, false);\r\n        });\r\n    }\r\n}\r\n// store.statusChange = statusChange;\r\n// store.selectedChange = selectedChange;\r\n// store.tableStatusChanged = tableStatusChanged;\r\n\r\nfunction __handleEventsCallBack(name, func, currentStore) {\r\n    let pageScope = this;\r\n    // 点击事件回调\r\n    if (name === 'onRowClick') {\r\n        return (moduleId, record, outputIndex, e) => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, moduleId, record, outputIndex, e);\r\n        };\r\n    }\r\n    // 点击事件回调\r\n    if (name === 'onRowDoubleClick') {\r\n        return (record, outputIndex, e) => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, record, outputIndex, e);\r\n        };\r\n    }\r\n    //侧拉回调\r\n    if (name === 'modelSave') {\r\n        return index => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, index);\r\n        };\r\n    }\r\n    if (name === 'modelClose') {\r\n        return () => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output });\r\n        };\r\n    }\r\n    if (name === 'modelFooter' || name === 'modelDelRowBefore' || name === 'modelAddRow') {\r\n        return (moduleId, index, record) => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, moduleId, index, record);\r\n        };\r\n    }\r\n    if (name === 'modelDelRow' || name === 'modelAddRowBefore') {\r\n        return (moduleId, beforeObj) => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, moduleId, beforeObj);\r\n        };\r\n    }\r\n    //编辑事件回调,\r\n    if (name === 'onAfterEvent') {\r\n        return (params, currentStore) => {\r\n            let {\r\n                currentName,\r\n                moduleId,\r\n                record,\r\n                rowKey,\r\n                rowKeyValue,\r\n                rowIndex,\r\n                attrcode,\r\n                column,\r\n                value = {},\r\n                oldValue = {},\r\n                componentValue,\r\n                event,\r\n                triggerType = 'onChange', // onChange || onBlur\r\n                isTriggerModal = false,\r\n                activeCode\r\n            } = params;\r\n\r\n            if (!currentStore) {\r\n                console.warn('not find current currentStore !!!');\r\n            }\r\n\r\n            let val = value.value;\r\n\r\n            // 为郭祉祺加的针对input类型时,这两个字段的特殊校验,换算率\r\n            if (column.itemtype === 'input' && ['vchangerate', 'vqtunitrate'].includes(attrcode)) {\r\n                let reg = /^([1-9][0-9]*|0)(\\.\\d{1,})?(\\/)(([1-9][0-9]*)(\\.\\d{1,})?|(\\d\\.\\d{1,}))$/;\r\n                if (val && val.length < 1000 && !reg.test(val)) {\r\n                    if (!isTriggerModal) {\r\n                        currentStore.setCellProps(rowKeyValue, attrcode, { isEdit: false });\r\n                    }\r\n                    currentStore.setCellProps(rowKeyValue, attrcode, { value: null });\r\n                    // toast({\r\n                    //     content: `${json['table0025']}'1/2'!`,\r\n                    //     color: 'danger',\r\n                    //     groupOperation: true,\r\n                    //     isNode: true,\r\n                    //     TextArr: [json['table0022'], json['table0023'], json['table0024']]\r\n                    // });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let changedRows = [];\r\n\r\n            // editItem.props.hasOwnProperty('isMultiSelectedEnabled') && (isMul = editItem.props.isMultiSelectedEnabled);\r\n            let isMulti = column.isMultiSelectedEnabled;\r\n            if (column.refcode) {\r\n                let refcode = column.refcode.replace('.js', '');\r\n                if (refcode.startsWith('/')) refcode = refcode.substring(1);\r\n                let refer = window[refcode] && window[refcode].default();\r\n                if (refer && refer.props && refer.props.isMultiSelectedEnabled) {\r\n                    isMulti = refer.props.isMultiSelectedEnabled;\r\n                }\r\n            }\r\n\r\n            // 多选参照的判断\r\n            let valueArr = [];\r\n            if (isMulti && oldValue) {\r\n                let oldValArr = isString(oldValue.value)\r\n                    ? oldValue.value.split(',')\r\n                    : isArray(oldValue.value) ? oldValue.value : [oldValue.value];\r\n\r\n                let valueArr = isString(value.value)\r\n                    ? value.value.split(',')\r\n                    : isArray(value.value) ? value.value : [value.value];\r\n\r\n                valueArr.forEach((val, i) => {\r\n                    changedRows.push({\r\n                        rowid: record.rowid,\r\n                        newvalue: { value: val || '' },\r\n                        oldvalue: { value: oldValArr[0] || '' },\r\n                    });\r\n                });\r\n            } else {\r\n                changedRows.push({\r\n                    rowid: record[rowKey],\r\n                    newvalue: { value: val || '' },\r\n                    oldvalue: { value: oldValue.value || '' },\r\n                });\r\n            }\r\n\r\n            currentStore.saveRowOldValue(record[rowKey], attrcode, valueArr.length > 0 ? valueArr[0] : val);\r\n\r\n            // !isValEqual(changedrows[0].newvalue.value, changedrows[0].oldvalue.value)\r\n            if (column.editAfterFlag && pageScope.handleRelationItems) {\r\n                pageScope.handleRelationItems({\r\n                    type: 'table',\r\n                    areaCode: moduleId,\r\n                    key: attrcode,\r\n                    changedrows: changedRows,\r\n                    index: rowIndex,\r\n                    rowid: record[rowKey],\r\n                    record: record,\r\n                    tableMetaCode: activeCode,\r\n                    column: column,\r\n                    callback: () => {\r\n                        let fxParams = {\r\n                            moduleId,\r\n                            record: record,\r\n                            attrcode: attrcode,\r\n                            methods: pageScope.output,\r\n                            rows: currentStore.getViewData(),\r\n                            index: rowIndex,\r\n                            val: column.itemtype === 'refer' || column.itemtype === 'residtxt' ? componentValue : value.value,\r\n                            changedRows,\r\n                            actionTag: triggerType === 'onBlur' ? 'blur' : 'change',\r\n                        };\r\n                        // 客开先不加了\r\n                        beforeAndAfter(\r\n                            pageScope,\r\n                            { moduleId, attrcode: attrcode, fxType: 'onCardTableAfterEvent', fxParams },\r\n                            () => {\r\n                                return func(\r\n                                    {\r\n                                        ...pageScope.props,\r\n                                        ...pageScope.output,\r\n                                    },\r\n                                    moduleId,\r\n                                    attrcode,\r\n                                    column.itemtype === 'refer' || column.itemtype === 'residtxt' ? componentValue : value.value,\r\n                                    changedRows,\r\n                                    rowIndex,\r\n                                    record,\r\n                                    isTriggerModal ? 'model' : 'line',\r\n                                    triggerType === 'onBlur' ? 'blur' : 'change',\r\n                                    currentStore.getViewData(),\r\n                                    event,\r\n                                )\r\n                            });\r\n                    },\r\n                });\r\n            } else {\r\n                let fxParams = {\r\n                    moduleId,\r\n                    record: record,\r\n                    attrcode: attrcode,\r\n                    methods: pageScope.output,\r\n                    rows: currentStore.getViewData(),\r\n                    index: rowIndex,\r\n                    val: column.itemtype === 'refer' || column.itemtype === 'residtxt' ? componentValue : value.value,\r\n                    changedRows,\r\n                    actionTag: triggerType === 'onBlur' ? 'blur' : 'change',\r\n                };\r\n                beforeAndAfter(\r\n                    pageScope,\r\n                    { moduleId, attrcode: attrcode, fxType: 'onCardTableAfterEvent', fxParams },\r\n                    () => {\r\n                        // console.log('beforeAndAfter  编辑后');\r\n                        return func(\r\n                            {\r\n                                ...pageScope.props,\r\n                                ...pageScope.output,\r\n                            },\r\n                            moduleId,\r\n                            attrcode,\r\n                            column.itemtype === 'refer' || column.itemtype === 'residtxt' ? componentValue : value.value,\r\n                            changedRows,\r\n                            rowIndex,\r\n                            record,\r\n                            isTriggerModal ? 'model' : 'line',\r\n                            triggerType === 'onBlur' ? 'blur' : 'change',\r\n                            currentStore.getViewData(),\r\n                            event,\r\n                        )\r\n                    });\r\n            }\r\n        };\r\n    }\r\n    if (name === 'onBeforeEvent') {\r\n        return async params => {\r\n            let {\r\n                moduleId,\r\n                record,\r\n                rowKey,\r\n                rowKeyValue,\r\n                rowIndex,\r\n                attrcode,\r\n                column,\r\n                value = {},\r\n                event,\r\n                triggerType = 'onChange', // onChange || onBlur\r\n                isTriggerModal = false,\r\n            } = params;\r\n            console.log(record, attrcode, '编辑前');\r\n            /***\r\n              * 二开的编辑后事件 --qinbb\r\n              */\r\n            let fxParams = {\r\n                moduleId,\r\n                record,\r\n                attrcode: attrcode,\r\n                methods: pageScope.output,\r\n                val: record.values[attrcode],\r\n                index: rowIndex,\r\n                areaTag: isTriggerModal ? 'model' : 'line',\r\n            };\r\n\r\n            return (\r\n                (await beforeAndAfter(\r\n                    pageScope,\r\n                    { moduleId, attrcode: attrcode, fxType: 'onCardTableBeforeEvent', fxParams },\r\n                    () => {\r\n                        // 触发编辑前\r\n                        return func(\r\n                            { ...pageScope.props, ...pageScope.output },\r\n                            moduleId,\r\n                            attrcode,\r\n                            record.values[attrcode],\r\n                            rowIndex,\r\n                            record,\r\n                            isTriggerModal ? 'model' : 'line',\r\n                        )\r\n                    })\r\n                ) !== false\r\n            );\r\n        };\r\n    }\r\n    //复选框选中回调\r\n    if (name === 'onSelected') {\r\n        return (moduleId, record, index, selected) => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, moduleId, record, index, selected);\r\n        };\r\n    }\r\n\r\n    if (name === 'onCellKeyDown') {\r\n        return (moduleId, record, index, attrcode, column, e) => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, moduleId, record, index, attrcode, column, e);\r\n        };\r\n    }\r\n\r\n    //复选框选中回调\r\n    if (name === 'onBatchSelected') {\r\n        return (moduleId, rows) => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, moduleId, rows);\r\n        };\r\n    }\r\n\r\n    if (name === 'onSelectedAll' || name === 'selectedChange') {\r\n        if (currentStore && name === 'selectedChange') {\r\n            currentStore.selectedChange = func;\r\n        }\r\n        return (moduleId, checked, len) => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, moduleId, checked, len);\r\n        };\r\n    }\r\n    //页签改变、表格展开收起事件\r\n    if (name === 'onTabChange' || name === 'onHeadAngleToggle') {\r\n        if (currentStore && name === 'onHeadAngleToggle') {\r\n            currentStore.onHeadAngleToggle = func;\r\n        }\r\n        return (moduleId, item) => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, moduleId, item);\r\n        };\r\n    }\r\n\r\n    // 这几个有坑  放在这个store上限制太大  由于store 难先生成  必须的话  就需要业务自己use了\r\n    if (name === 'statusChange') {\r\n        currentStore.statusChange = func;\r\n    }\r\n\r\n    if (name === 'tableStatusChanged') {\r\n        currentStore.tableStatusChanged = func;\r\n    }\r\n\r\n    if (name === 'onBodyScroll') {\r\n        return (...params) => {\r\n            return func.call(pageScope, { ...pageScope.props, ...pageScope.output }, ...params);\r\n        };\r\n    }\r\n\r\n    return func;\r\n}\r\n\r\n/**\r\n * @description: 转换和添加一些属性\r\n * @param {type} \r\n * @return: \r\n */\r\nfunction __handleProps(item, name) {\r\n    if (name === 'moduleId') {\r\n        item.name = item.moduleId;\r\n    }\r\n\r\n    if (name === 'isAddRow') {\r\n        item.autoAddRow.enabled = item.isAddRow;\r\n    }\r\n\r\n    if (name === 'addRowCallback') {\r\n        item.autoAddRow.callback = item.addRowCallback.bind(this);\r\n    }\r\n\r\n    if (name === 'addRowDefaultValue') {\r\n        item.autoAddRow.defaultValue = item.addRowDefaultValue;\r\n    }\r\n\r\n    if (name === 'rowClassList') {\r\n        item.rowClassnName = item.rowClassList;\r\n    }\r\n\r\n    if (name === 'height') {\r\n        item.bodyStyle = { minHeight: item.height || 300 };\r\n        item.scroll = {\r\n            x: true,\r\n            y: item.height || 300,\r\n        };\r\n\r\n        // 避免行高的传递\r\n        delete item.height;\r\n    }\r\n\r\n    if (name === 'setCellClass') {\r\n        item.cellClassName = (record, rowIndex, attrcode) => {\r\n            return isFunction(item.setCellClass) && item.setCellClass(rowIndex, record, attrcode);\r\n        }\r\n    }\r\n\r\n    if (name === 'alloweFilter') {\r\n        item.high_filter = { alloweFilter: item.alloweFilter };\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 添加一些默认方法和参数\r\n * @param {type} \r\n * @return: \r\n */\r\nfunction __addDefautProps(item) {\r\n    // 添加事件\r\n    item.onChange = ({ rowKey, rowKeyValue, rowIndex, attrcode, value, column, e }) => {\r\n        // 为郭祉琪加的针对input类型时,这两个字段的特殊校验,换算率\r\n        if (column.itemtype === 'input' && ['vchangerate', 'vqtunitrate'].includes(column.attrcode)) {\r\n            // eslint-disable-next-line no-useless-escape\r\n            let reg = /^[0-9\\/\\.]+$/;\r\n            if (value && !reg.test(value)) {\r\n                //只能输入数字和/\r\n                return;\r\n            }\r\n        }\r\n        //胡杰李忠博加\r\n        if (isFunction(item.inputChange)) {\r\n            let callbackValue = item.inputChange.call(this, {\r\n                index: rowIndex,\r\n                item: column,\r\n                valueChange: value.value,\r\n            });\r\n            if (!callbackValue) {\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    // 自动增行的参数\r\n    item.autoAddRow = item.autoAddRow || {};\r\n\r\n    // 给 onAfterEvent 事件设置一个默认值  \r\n    // 因为 onAfterEvent 里处理了默认逻辑 避免业务没有传参数时不调用\r\n    item.onAfterEvent = item.onAfterEvent || (() => { });\r\n    item.onBeforeEvent = item.onBeforeEvent || (() => { });\r\n}\r\n\r\n/**\r\n * config: {key: config}\r\n * @description: 统一处理一下所有的方法回调\r\n * @param {type} \r\n * @return: \r\n */\r\nfunction handleEventsCallBack(config = {}, stores, moduleId) {\r\n    let pageScope = this;\r\n    for (let key in config) {\r\n        let item = config[key]; // 获取所有表配置项\r\n        if (isObject(item)) {\r\n            // onAfterEvent  autoAddRow  onChange\r\n            __addDefautProps.call(pageScope, item);\r\n            for (let ikey in item) {\r\n                // 获取所有方法的\r\n\r\n                //孙表\r\n                if (ikey === 'grandGroup' && isArray(item[ikey])) {\r\n                    item[ikey].forEach(elem => {\r\n                        let grandConfig = elem.grandTableConfig;\r\n                        let moduleId = elem.grandTableId;\r\n                        handleEventsCallBack.call(pageScope, { [moduleId]: grandConfig }, {}, moduleId);\r\n                    });\r\n                }\r\n\r\n                // 先处理一些属性转换\r\n                __handleProps.call(pageScope, item, ikey);\r\n\r\n                if (isFunction(item[ikey])) {\r\n                    item[ikey] = __handleEventsCallBack.call(pageScope, ikey, item[ikey], stores[key], moduleId);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return config;\r\n}\r\n\r\nexport function createCardTable(moduleId, config = {}) {\r\n    let pageScope = this,\r\n        store = pageScope.cardTableDataSource[moduleId];\r\n\r\n    let newConfig = Object.assign({}, config);\r\n    if (!store) {\r\n        store = useCardTable();\r\n        pageScope.cardTableDataSource[moduleId] = store;\r\n        // 如果有缓存值 则做一下  Store 的赋值操作  把setTableData里的else操作提到这里了  估计可以去除\r\n        if (pageScope.myTableData[moduleId]) {\r\n            store.setTableData(pageScope.myTableData[moduleId]); // TODO 验证\r\n            store.setTableProps('focusIndex', -1, false);\r\n            delete pageScope.myTableData[moduleId];\r\n        }\r\n    }\r\n\r\n    // console.log('cardTableStore', store);\r\n\r\n    // 解析事件\r\n    if (isObject(newConfig.multiConfig)) {\r\n        for (let name in newConfig.multiConfig) {\r\n            pageScope.cardTableDataSource[name] = pageScope.cardTableDataSource[name] || useCardTable();\r\n            store.addTabStore(name, pageScope.cardTableDataSource[name]);\r\n        }\r\n\r\n        // 可以放到事件解析里做\r\n        let stores = store.getTabsStores(); // 这里meta 不一定有所以 不一定有Store\r\n\r\n        newConfig.multiConfig = handleEventsCallBack.call(pageScope, newConfig.multiConfig, stores, moduleId);\r\n    }\r\n\r\n    if (isObject(newConfig.multiConfig) && !newConfig.multiConfig[moduleId]) {\r\n        newConfig.multiConfig[moduleId] = newConfig;\r\n    }\r\n\r\n    // 解析事件 不要放在else 里  可以单多来源都兼容\r\n    newConfig =\r\n        handleEventsCallBack.call(pageScope, { [moduleId]: newConfig }, { [moduleId]: store }, moduleId)[moduleId] ||\r\n        newConfig;\r\n\r\n    // 挂载孙表store\r\n    _setGrandTableStore(\r\n        pageScope,\r\n        store,\r\n        !isObject(newConfig.multiConfig) || !newConfig.multiConfig[moduleId] ? newConfig : newConfig.multiConfig[moduleId],\r\n    );\r\n\r\n    //console.log(config, config.multiConfig);\r\n\r\n    // renderItem 适配  TODO 多来源时是否需要区分id\r\n    let renderItems = {};\r\n    if (pageScope.state.renderItem && pageScope.state.renderItem.table) {\r\n        renderItems = pageScope.state.renderItem.table || {};\r\n    }\r\n    store.setConfig(newConfig)\r\n    // console.log(newConfig);\r\n\r\n    return (\r\n        <CardTable\r\n            // 多语加载完成事件\r\n            afterLangload={(json, store) => {\r\n                // console.log(this, json);\r\n                pageScope.cardTableDataSource._langJson = json || {};\r\n            }}\r\n            onCellHyperlinkTo={(record, attrcode, value, tableId) => {\r\n                linkTo(pageScope.state.meta.pageid, tableId, attrcode, value.value);\r\n            }}\r\n            name={moduleId}\r\n            store={store}\r\n            config={newConfig}\r\n            multiConfig={newConfig.multiConfig || {}}\r\n            renderItems={renderItems}\r\n            mountChildrenStore={(id, callback) => {\r\n                // 挂载多页签的 store\r\n                pageScope.cardTableDataSource[id] = callback(pageScope.cardTableDataSource[id]);\r\n                // 挂载孙表store\r\n                newConfig.multiConfig &&\r\n                    newConfig.multiConfig[id] &&\r\n                    _setGrandTableStore(pageScope, pageScope.cardTableDataSource[id], newConfig.multiConfig[id]);\r\n            }}\r\n            cardTableComponentUpdate={(props, data) => {\r\n                // console.log('cardTableComponentUpdate', props, data);\r\n                getCheckedExtendMethod(pageScope, 'updateEditTable')({ pageScope, data, props, useOn: 'create' });\r\n            }}\r\n            // 快捷键 解耦\r\n            getHotKeyConfig={() => {\r\n                return {\r\n                    autoFocusDeferred: this.autoFocusDeferred,\r\n                    meta: this.state.meta,\r\n                    withHotKeyChange: this.withHotKeyChange,\r\n                    orderOfHotKey: this.orderOfHotKey,\r\n                    onLastFormEnter: config.onLastFormEnter,\r\n                };\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\n/**\r\n * bbq\r\n * 检测组件对象是否存在\r\n * @param {*} id\r\n */\r\nconst existenceCheck = function (id) {\r\n    let cardTableStore = this.cardTableDataSource[id];\r\n    if (!cardTableStore) {\r\n        warningOnce(false, `所操作的表格中无ID为${id}的数据`);\r\n        return;\r\n    }\r\n    return cardTableStore;\r\n};\r\n\r\n/**\r\n * bbq\r\n * 检测行的index是否存在\r\n * @param {*} id\r\n */\r\nconst indexCheck = function (id, index, rowid) {\r\n    let cardTableStore = existenceCheck.call(this, id);\r\n    if (!cardTableStore) {\r\n        return;\r\n    }\r\n    let viewData = cardTableStore.getData([ROW_STATUS.delete, ROW_STATUS.filter]);\r\n    if (isNaN(index) || index > viewData.length || index < 0) {\r\n        warningOnce(index, '传入的第二个参数为行index值，须为大于等于0且小于等于总行数减一的整数');\r\n        return -1;\r\n    }\r\n    return index;\r\n};\r\n\r\n// 多来源 设置布局方式\r\nexport function setLayout(moduleId, layout) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setLayout(layout);\r\n}\r\n\r\n// 多来源 获取布局方式\r\n// export function getLayout(moduleId) {\r\n//     let store = existenceCheck.call(this, moduleId);\r\n//     if (!store) {\r\n//         return;\r\n//     }\r\n//     return store.getLayout(moduleId);\r\n// }\r\n\r\n// 多来源 设置全部数据\r\n/**\r\n * 1、设置表格数据\r\n * @param  moduleId      表格id\r\n * @param  data         数据\r\n * @param  callback     设置后回调,\r\n * 这里注意设置值的时候,表格如果没有数据,也要设置默认值 { rows: [] }\r\n * data数据格式 例如: {\r\n * revecont_b: { rows:[{values: { num: {value: 1111}, fconfirmpoint: {value: 1, display: '人工'} }}] },\r\n * material: { rows:[{values: { num: {value: 1111}, fconfirmpoint: {value: 1, display: '人工'} }}] }\r\n * }\r\n */\r\nexport function setTabsTableData(moduleId, data) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setTabsTableData(data, true, moduleId);\r\n}\r\n\r\n/**\r\n * 3、取消所有页签数据\r\n * @param  moduleId  表格id\r\n */\r\nexport function resetTabsTableData(moduleId) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.resetTabsTableData(false, moduleId);\r\n}\r\n\r\n/**\r\n * 2、获取所有表格数据\r\n * @param  moduleId  表格id\r\n */\r\nexport function getTabsTableData(moduleId) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.getTabsTableData(moduleId);\r\n}\r\n\r\n/**\r\n * 4、设置多个主表状态\r\n * @param  status tableId和表格状态组成的对象\r\n * { revecont_b: 'edit', revecont_b1: 'browse' }\r\n */\r\nexport function setTabsTableStatus(moduleId, status = {}) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let _this = this;\r\n\r\n    return store.setTabsTableStatus(status, false, moduleId, (tableId, mainStore, oldStatus) => {\r\n        // 切换成浏览态的时候把所有的toast清掉\r\n        if (oldStatus !== 'browse' && status[tableId] == 'browse') {\r\n            clearOneTypeToast('danger');\r\n            clearRequiredStatus.call(_this || this, tableId);\r\n        }\r\n    });\r\n}\r\n\r\n//设置页签显示隐藏\r\nexport function setTabsTableShow(mainId, flagObj) {\r\n    let store = existenceCheck.call(this, mainId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.setTabsTableShow(mainId, flagObj, !this.isUpdatePage);\r\n}\r\n//设置页签激活\r\nexport function setTabsTableActive(mainId, childId) {\r\n    let store = existenceCheck.call(this, mainId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.setTabsTableActive(mainId, childId, !this.isUpdatePage);\r\n}\r\n\r\n//获取当前激活页签\r\nexport function getTabsTableActive(mainId) {\r\n    let store = existenceCheck.call(this, mainId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.getTabsTableActive(mainId);\r\n}\r\n\r\n/**\r\n * 工具api 区域\r\n */\r\n\r\n/**\r\n * 校验页签的数据 他是一个工具函数\r\n * @param {*} items 单个页签的模版\r\n * @param {*} rows 单个页签的行数据\r\n * @param {*} allToast 当个页签检验结果的容器\r\n */\r\nfunction checkTabRequired({ items, rows, allToast, rowKey }) {\r\n    let validateFailed = {}, firstValidateFaild = [];\r\n\r\n    items.forEach(item => {\r\n        //将数据中没有的列附上空对象，保证校验的准确性\r\n        const { attrcode } = item;\r\n        rows.forEach(row => {\r\n            const { values } = row;\r\n            if (isUndefined(values[attrcode])) {\r\n                values[attrcode] = {};\r\n            }\r\n        });\r\n    });\r\n    rows.forEach((row, index) => {\r\n        const rowToast = []; //保存每行的检验提示信息\r\n        const { values } = row;\r\n        //便利校验是否没有输入必输项\r\n        Object.entries(values).forEach(([colKey, colValue]) => {\r\n            let value = colValue.value;\r\n            if (isString(value)) {\r\n                value = value.trim();\r\n            }\r\n            if (isWrong(value)) {\r\n                items.forEach(item => {\r\n                    const { attrcode, required, label } = item;\r\n                    if (required && attrcode === colKey) {\r\n                        rowToast.push(label);\r\n                        // 有就是有没有就是没有  给页签上判断用\r\n                        validateFailed[row[rowKey]] = validateFailed[row[rowKey]] || {};\r\n                        validateFailed[row[rowKey]][item.attrcode] = item.attrcode;\r\n                        if (!firstValidateFaild.length) {\r\n                            firstValidateFaild = [row[rowKey], item.attrcode];\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if (rowToast.length > 0) {\r\n            allToast[`第${index + 1}行`] = rowToast;\r\n        }\r\n    });\r\n\r\n    return { tabToast: allToast, validateFailed, firstValidateFaild };\r\n}\r\n\r\n/**\r\n * TODO\r\n * 5、校验多页签表格\r\n * @param {*} moduleId 表格id\r\n */\r\nexport function checkAllTabsRequire(moduleId, autoFocus = true) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return false;\r\n    }\r\n\r\n    const meta = store.getMeta() || this.state.meta;\r\n    const json = this.cardTableDataSource._langJson || {};\r\n    const { gridrelation, containerrelation } = meta;\r\n\r\n    // 校验\r\n    let allValidateFailed = {};\r\n    let allFirstValidateFaild = {};\r\n\r\n    /**\r\n     * 必输项不全的页签\r\n     */\r\n    const errorTabIds = [];\r\n    /**\r\n     * 提示信息集合\r\n     */\r\n    const label = {};\r\n    /**\r\n     * 多页签所有的主表列表\r\n     */\r\n    let metaTabs = containerrelation[moduleId];\r\n    let tabs = [];\r\n    if (Array.isArray(metaTabs) && metaTabs.length) {\r\n        metaTabs.forEach(item => {\r\n            tabs.push(...item);\r\n        })\r\n    }\r\n    /**\r\n     * 构造用校验的数据结构\r\n     */\r\n    const checkedMusters = tabs.reduce((checkedMuster, tabId) => {\r\n        const currentRelation = gridrelation[tabId];\r\n        const currentStore = existenceCheck.call(this, tabId);\r\n        if (!currentStore || !currentRelation) {\r\n            return checkedMuster;\r\n        }\r\n        const rows = currentStore.getViewData('filter');\r\n        const tabRelation = currentRelation.initialTabRelation || currentRelation.tabRelation;\r\n\r\n        const tabRelationMuster = tabRelation.reduce((metaConfig, tabId) => {\r\n            const name = meta[tabId].name;\r\n            let items = currentStore.getArrayMeta(tabId) || [];\r\n            items = items.filter(item => item.visible);\r\n            metaConfig[tabId] = { name, items };\r\n            return metaConfig;\r\n        }, {});\r\n        checkedMuster[tabId] = { tabRelationMuster, rows };\r\n        return checkedMuster;\r\n    }, {});\r\n    for (let tableId in checkedMusters) {\r\n        const tabItem = checkedMusters[tableId];\r\n        let store = existenceCheck.call(this, tableId);\r\n        const rowKey = store ? store.getTableProps('rowKey') : 'rowid';\r\n        allValidateFailed[tableId] = allValidateFailed[tableId] || {};\r\n        allFirstValidateFaild[tableId] = allFirstValidateFaild[tableId] || [];\r\n\r\n        const { tabRelationMuster, rows } = tabItem;\r\n        Object.entries(tabRelationMuster).forEach(([tabId, config]) => {\r\n            const { name, items } = config;\r\n            const { tabToast, validateFailed, firstValidateFaild } = checkTabRequired({ items, rows, allToast: {}, rowKey });\r\n\r\n            allValidateFailed[tableId][tabId] = allValidateFailed[tableId][tabId] || {};\r\n\r\n            if (Object.keys(tabToast).length) {\r\n                allValidateFailed[tableId][tabId] = validateFailed;\r\n                // console.log(validateFailed, firstValidateFaild);\r\n                if (!allFirstValidateFaild[tableId].length) {\r\n                    allFirstValidateFaild[tableId] = [tabId, ...firstValidateFaild];\r\n                }\r\n                errorTabIds.push(tabId);\r\n                label[`${name}(页签)`] = tabToast;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (errorTabIds.length) {\r\n        // validateFailed, firstValidateFaild // 四层数据\r\n        console.log(allValidateFailed, allFirstValidateFaild);\r\n        for (let tableId in allValidateFailed) {\r\n            const store = existenceCheck.call(this, tableId);\r\n            const table = allValidateFailed[tableId];\r\n            let isRefresh = false;\r\n            if (store && table) {\r\n                console.log(store);\r\n                // 缓存状态\r\n                store.setCache('validateFailed', allValidateFailed);\r\n                store.setCache('firstValidateFaild', allFirstValidateFaild);\r\n                for (let tabId in table) {\r\n                    const rows = table[tabId];\r\n                    if (rows) {\r\n                        for (let rowKeyValue in rows) {\r\n                            if (rowKeyValue) {\r\n                                let row = rows[rowKeyValue];\r\n                                if (row) {\r\n                                    for (let attrcode in row) {\r\n                                        store.setCellProps(rowKeyValue, attrcode, { validated: false }, false);\r\n                                    }\r\n                                }\r\n                                isRefresh = true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                isRefresh && store.refresh();\r\n            }\r\n        }\r\n\r\n        // 自动聚焦到首个\r\n        if (allFirstValidateFaild && autoFocus) {\r\n            const tableIdList = tabs ? (isArray(tabs) ? tabs : [tabs]) : tabs || this.orderOfHotKey;\r\n\r\n            let tabSelector = null,\r\n                cellSelector = null;\r\n            // 找到第一个\r\n            tableIdList.some(tableId => {\r\n                let cellInfo = allFirstValidateFaild[tableId];\r\n                if (cellInfo && cellInfo.length > 0) {\r\n                    tabSelector = `#js_lightTabs_header_${tableId} [name=\"${cellInfo[0]}\"] a`;\r\n                    cellSelector = `.table-cell-wrapper[cellselectorkey=\"${cellInfo[1]}@${cellInfo[2]}\"] [tabindex=\"0\"]`;\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            const tabElement = document.querySelector(tabSelector);\r\n\r\n            tabElement && tabElement.click();\r\n\r\n            setTimeout(() => {\r\n                const cellElement = document.querySelector(cellSelector);\r\n                if (cellElement) {\r\n                    cellElement.ncExecuteFocus = true;\r\n                    cellElement.focus();\r\n                    cellElement.ncExecuteFocus = false;\r\n                }\r\n            }, 300)\r\n\r\n            console.log(tableIdList, allFirstValidateFaild, tabSelector, cellSelector);\r\n        }\r\n        const errorContent = Object.entries(label).reduce((errorContent, [tabName, rowsToast]) => {\r\n            errorContent.push(`${tabName} :`);\r\n            Object.entries(rowsToast).forEach(([rowName, rowToast]) => {\r\n                errorContent.push(`${rowName}: ${rowToast.join(', ')}`);\r\n            });\r\n            return errorContent;\r\n        }, []);\r\n        toast({\r\n            content: `${json && json['table_no_empty']}：`,\r\n            color: 'danger',\r\n            TextArr: [json['table0022'], json['table0023'], json['table0024']],\r\n            groupOperation: true,\r\n            groupOperationMsg: errorContent,\r\n            mark: 'edit-table-toastx',\r\n        });\r\n        store.setStore('errorTabIds', errorTabIds);\r\n        errorContent && errorContent.length > 0 && store.setCache('errorContent', errorContent);\r\n        return false;\r\n    } else {\r\n        store.setStore('errorTabIds', []);\r\n        store.setCache('errorContent', []);\r\n        return true;\r\n    }\r\n}\r\n\r\n// 处理旧值函数 bbq\r\nexport function saveChangedRowsOldValue(moduleId, rowid, attrcode, value) {\r\n    let metaStore = existenceCheck.call(this, moduleId);\r\n    if (!metaStore) {\r\n        return;\r\n    }\r\n    metaStore.saveRowOldValue(rowid, attrcode, value);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 对旧值处理的函数, 这原来是标识是index,但是增加筛选后,\r\n * 对筛选结果进行编辑,使用index作为标识存取新旧值,会导致存取值错误,\r\n * 所以改成现在rowid为标识, 但是对旧值处理的方法,已经对外暴露,如果出现问题,需要业务组配合修改,\r\n * 将对新旧值的处理换成rowid为标识\r\n * */\r\nexport function getChangedRowsOldValue(moduleId, rowid, attrcode) {\r\n    let metaStore = existenceCheck.call(this, moduleId);\r\n    if (!metaStore) {\r\n        return;\r\n    }\r\n    return metaStore.getRowOldValue(rowid, attrcode);\r\n}\r\n\r\n// 删除旧值函数 bbq\r\nexport function delChangedRowsOldValue(moduleId, rowid, attrcode) {\r\n    let metaStore = existenceCheck.call(this, moduleId);\r\n    if (!metaStore) {\r\n        return;\r\n    }\r\n    metaStore.deleteRowOldValue(rowid, attrcode);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 设置表格数据，同时缓存数据，缓存数据用于取消时调用\r\n * @param  tableId   表格主区域编码\r\n * @param  data      传入的data数据\r\n * @param  isCache   是否缓存  默认缓存\r\n * @param  isTop     是否回到顶部\r\n * @param  autoFocus 表格重新渲染后是否需要聚焦到之前聚焦的元素 主要解决快捷键连续性操作的问题\r\n * @param  resetSort 重置主表的排序标记\r\n */\r\nexport function setTableData(tableId, data, callback, isCache = true, isTop = false, autoFocus = false) {\r\n    if (!data || !data.rows || !isArray(data.rows)) {\r\n        warningOnce(data, '传入的第二个参数为所设置的数据，数据格式是对象，且有个rows属性，rows的内容是数组');\r\n        return;\r\n    }\r\n\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        // 控制设值定位后将参数至成默认值\r\n        this.myTableData[tableId] = data;\r\n        isFunction(callback) && callback.call(this, { ...this.props, ...this.output }, tableId, data);\r\n        return;\r\n    }\r\n\r\n    // 设置表格数据\r\n    data = store.setTableData(data, {\r\n        isCache,\r\n        isTop,\r\n        shouldForceUpdate: !this.isUpdatePage,\r\n    });\r\n\r\n    // 调用selectedChange事件\r\n    isFunction(store.selectedChange) && store.selectedChange({ ...this.props, ...this.output }, tableId, 0);\r\n    //将回调打开，看看有没有问题 zhanghengh  18/7/30\r\n    isFunction(callback) && callback.call(this, { ...this.props, ...this.output }, tableId, data);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 2、获取表格状态\r\n * @param  tableId   meta的id号\r\n */\r\nexport function getStatus(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.getTableProps('status');\r\n}\r\n\r\n//  清除校验状态\r\nexport function clearRequiredStatus(tableId, includeAllArea = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let validateFailed = store.getCache('validateFailed') || {};\r\n\r\n    for (let tableId in validateFailed) {\r\n        const mainStore = existenceCheck.call(this, tableId);\r\n        const table = validateFailed[tableId];\r\n        // let isRefresh = false;\r\n        if (mainStore && table) {\r\n            // console.log(mainStore);\r\n            // 缓存状态\r\n            // mainStore.setCache('validateFailed', allValidateFailed);\r\n            // mainStore.setCache('firstValidateFaild', allFirstValidateFaild);\r\n            for (let tabId in table) {\r\n                const rows = table[tabId];\r\n                if (rows) {\r\n                    for (let rowKeyValue in rows) {\r\n                        if (rowKeyValue) {\r\n                            let row = rows[rowKeyValue];\r\n                            if (row) {\r\n                                for (let attrcode in row) {\r\n                                    mainStore.setCellProps(rowKeyValue, attrcode, { validated: true }, false);\r\n                                }\r\n                            }\r\n                            // isRefresh = true;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n            // isRefresh && mainStore.refresh();\r\n            mainStore.setCache('validateFailed', null);\r\n            mainStore.setCache('firstValidateFaild', null);\r\n        }\r\n\r\n        // 去除校验状态\r\n        store.setCache('validateFailed', null);\r\n        store.setCache('firstValidateFaild', null);\r\n    }\r\n\r\n    if (includeAllArea && store) {\r\n        // 孙表的\r\n        let grandTableStore = store.getStore('grandTableStore') || {};\r\n        let grandValidateFailed = store.getCache('grandValidateFailed') || {};\r\n\r\n        for (let grandTableId in grandTableStore) {\r\n            let grandStore = grandTableStore[grandTableId];\r\n\r\n            for (let rowid in grandValidateFailed) {\r\n                // 记录校验状态\r\n                const validateFailed = grandValidateFailed[rowid];\r\n                if (grandStore && validateFailed) {\r\n                    // for (let tableId in validateFailed) {\r\n                    const table = validateFailed[grandTableId];\r\n                    // let isRefresh = false;\r\n                    if (table) {\r\n                        for (let tabId in table) {\r\n                            const rows = table[tabId];\r\n                            if (rows) {\r\n                                for (let rowKeyValue in rows) {\r\n                                    if (rowKeyValue) {\r\n                                        let row = rows[rowKeyValue];\r\n                                        if (row) {\r\n                                            for (let attrcode in row) {\r\n                                                // debugger;\r\n                                                grandStore.setCellProps(rowKeyValue, attrcode, { validated: true }, false);\r\n                                            }\r\n                                        }\r\n                                        // isRefresh = true;\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                        }\r\n\r\n                        // 缓存状态\r\n                        grandStore.setCache('validateFailed', null);\r\n                        // isRefresh && mainStore.refresh();\r\n                    }\r\n                    // }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        store.setCache('grandValidateFailed', null);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * bbq\r\n * 3、设置表格状态\r\n * @param  tableId   meta的id号\r\n * @param  status    表格状态：edit,browse其一\r\n */\r\nexport function setStatus(tableId, status) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let oldStatus = store.getTableProps('status') || 'browse';\r\n    // 切换成浏览态的时候把所有的toast清掉\r\n    if (oldStatus !== 'browse' && status == 'browse') {\r\n        clearOneTypeToast('danger');\r\n        clearRequiredStatus.call(this, tableId);\r\n    }\r\n\r\n    if (status === 'edit') {\r\n        store.setStore('expandedRowKeys', [], !this.isUpdatePage);\r\n    }\r\n\r\n    store.setTableStatus(status, { shouldForceUpdate: !this.isUpdatePage });\r\n    // TODO props 传递有些问题\r\n    isFunction(store.tableStatusChanged) && store.tableStatusChanged(tableId, { props: store, status });\r\n}\r\n\r\n/**\r\n * bbq\r\n * 4、获取表格内所有行数据（包含删除项目）\r\n * @param  tableId   meta的id号\r\n * @return []/false  返回数组或者false\r\n * @warn   // TODO   校验可能存在风险，规则不全\r\n * mofify by zhanghengh @18/05/05  在内部判断筛选后和没有筛选获得全数据等的情况\r\n * mofify by zhanghengh @18/05/16  对之前的逻辑进行修改，减少了不必要的代码\r\n */\r\nexport function getAllRows(tableId, isDeepCopy = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    return store.getAllRows(isDeepCopy);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 5、获取表格内可见列表数据 （排除删除项目）\r\n * @param  tableId   meta的id号\r\n * @return []/false  返回数组或者false\r\n */\r\nexport function getVisibleRows(tableId, isDeepCopy = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    return store.getVisibleRows(isDeepCopy);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 6、获取表格修改后数据 （排除删除项目）\r\n * @param  tableId   meta的id号\r\n * @return []/false  返回数组或者false\r\n */\r\nexport function getChangedRows(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    return store.getChangedRows();\r\n}\r\n\r\n/**\r\n * bbq\r\n * 7、根据id获取表格中所有(可见)的行的数量\r\n * @param  tableId   meta的id号\r\n * @param  flag      flag为true包含删除项目  flag不传或者false不包含删除项目\r\n */\r\nexport function getNumberOfRows(tableId, flag) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return 0;\r\n    }\r\n    return flag ? getAllRows.call(this, tableId, false).length : getVisibleRows.call(this, tableId, false).length;\r\n}\r\n\r\n// bbq\r\nexport function getAllData(tableId, flag = true) {\r\n    let rows = getAllRows.call(this, tableId, flag);\r\n    let data = {\r\n        areaType: 'table',\r\n        rows,\r\n        areacode: null,\r\n    };\r\n    return data;\r\n}\r\n\r\n/**\r\n * bbq\r\n * 控制行展开收起\r\n * @param  tableId   meta的id号\r\n * @param  record    行data\r\n */\r\nexport function toggleRowView(tableId, record) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    return store.toggleRowView(record);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 9、新增行(通过index值)\r\n * @param  tableId   meta的id号\r\n * @param  index     增加行的位置index   0为行首 不传为和len为行尾部\r\n * @param  defaultValue      新增的默认defaultValue 格式：{key: {display: '', scale: 0, value: ''}, key2: {display: '', scale: 0, value: ''}}\r\n * mofify by zhanghengh  增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n */\r\nexport function addRow(tableId, index, defaultValue, autoFocus = true, callback, flag = false, isAutoAddRow, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    //判断index是否存在\r\n    index = isUndefined(index) ? getNumberOfRows.call(this, tableId, false) : index;\r\n\r\n    if (!defaultValue) defaultValue = {};\r\n\r\n    // flag 暂时没有用 内部会处理多表头\r\n    store.addTableRow(index, defaultValue, !this.isUpdatePage && shouldForceUpdate, {\r\n        autoFocus,\r\n        isAutoAddRow,\r\n        callback: () => {\r\n            /*\r\n             * 如果table第一次加载时数据是空，业务组调用addRow Api生成时没有在KeyByModuleId中生成数据\r\n             * 所以再此手动调用 createByModuleType 方法\r\n             * TODO 快捷键相关\r\n             * */\r\n            // if (keyByModuleId[tableId] === undefined) {\r\n            //     createByModuleType['table'](myCardScope.props);\r\n            // }\r\n            // 给每个控件赋初始值   TODO  好多地方需要这个 比如  reset的时候  TODO\r\n            // const myCardTable = this.myTable[tableId].state.table;\r\n            //const myCardTable = store;\r\n            isFunction(callback) && callback.call(this, tableId, index, { rows: store.getViewData() });\r\n\r\n            // TODO 快捷键\r\n            // clearOtherTableRowSelectedStatus({ pageScope: this, moduleId: tableId });\r\n\r\n            // TODO 全局事件\r\n            PubSub.publish(HEIGHTTOSCROLL, true);\r\n        },\r\n    });\r\n\r\n    // isFunction(store.statusChange) && store.statusChange(status);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 10、根据rowId的删除行方法\r\n * 规则：1、当state == ‘2’    新增        这时候直接删除数组就可以了\r\n *      2、当state == ‘0/1’  原始/修改   这时候数组的内容不能删除，把state置位3\r\n *      3、当state == ‘3’    已删除      这时候数组的内容不会显示，所以没删除功能\r\n * 解决思路： 把不是新增的 置位3 并push到结尾，其余的按index删除即可。 控制index的最大取值。\r\n * 注意点：   _selectedChangeFn方法调用\r\n * @param  tableId   meta的id号\r\n * @param  rowid     删除的行rowId\r\n */\r\nexport function delRowByRowId(tableId, rowid, callback, isDeepDel) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.deleteTableRows({ rowKeyValues: rowid }, isDeepDel, false);\r\n    // 清理一下错误状态\r\n    store.clearValidated();\r\n    // this.myTable[tableId].state.table  store.getStore() // TODO\r\n    isFunction(callback) && callback.call(this, tableId, rowid, store.getStore());\r\n    PubSub.publish(HEIGHTTOSCROLL, true); // TODO\r\n}\r\n\r\n/**\r\n * bbq\r\n * 11、根据index的删除行方法\r\n * @param  tableId   meta的id号\r\n * @param  Index     删除的行号-1\r\n */\r\nexport function delRowsByIndex(tableId, index, callback, isDeepDel) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let delRowidList = store.deleteTableRows({ rowIndexs: index }, isDeepDel, false);\r\n    // 清理一下错误状态\r\n    store.clearValidated();\r\n    // TODO  store.getStore()   this.myTable[tableId].state.table  store.getStore()\r\n    isFunction(callback) && callback.call(this, tableId, index, store.getStore(), delRowidList);\r\n    PubSub.publish(HEIGHTTOSCROLL, true); // TODO\r\n}\r\n\r\n/**\r\n * bbq\r\n * 12、根据index设置表格某行某个字段值  0代表第一行  行序号可有可没有\r\n * @param  tableId   meta的id号\r\n * @param  index     行序号-1，从0开始\r\n * @param  key       columns的键值\r\n * @param  value     需要设置的value值\r\n * @param  display   需要设置的display值\r\n * @param  scale     需要设置的scale值\r\n * mofify by zhanghengh  增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n * mofify by zhanghengh 这里现在只进行了重新赋值，没有进行更新页面，借助其他的更新一起更新，有问题的话，提供统一更新方法\r\n * mofify by zhanghengh 将批改数据重新缓存\r\n *\r\n *\r\n */\r\nexport function setValByKeyAndIndex(\r\n    tableId,\r\n    index,\r\n    key,\r\n    cellValue,\r\n    callback,\r\n    flag = false,\r\n    isUpdateBatch = false,\r\n) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let allRows = store.getData();\r\n    if (!allRows.length) {\r\n        console.warn('empty data cant setting value');\r\n        return;\r\n    }\r\n    // flag 没用了 多表头在内部处理\r\n    store.setValByKeyAndIndex(\r\n        index,\r\n        key,\r\n        cellValue,\r\n        { isSetEdit: true, isUpdateBatch, shouldForceUpdate: !this.isUpdatePage },\r\n    );\r\n}\r\n\r\n/**\r\n * bbq\r\n * 13、根据rowId设置表格某行某个字段值\r\n * @param  tableId   meta的id号\r\n * @param  rowid     行rowId\r\n * @param  key       columns的键值？？\r\n * @param  value     需要设置的value值\r\n * @param  display   需要设置的display值\r\n * @param  scale     需要设置的scale值\r\n * mofify by zhanghengh  增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n * mofify by zhanghengh 这里现在只进行了重新赋值，没有进行更新页面，借助其他的更新一起更新，有问题的话，提供统一更新方法\r\n * mofify by zhanghengh 将批改数据重新缓存\r\n */\r\nexport function setValByKeyAndRowId(\r\n    tableId,\r\n    rowid,\r\n    key,\r\n    cellValue,\r\n    callback,\r\n    flag = false,\r\n    isUpdateBatch = true,\r\n) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    // flag 没用了 多表头在内部处理\r\n    store.setValByKeyAndRowId(rowid, key, cellValue, { isUpdateBatch, shouldForceUpdate: false });\r\n}\r\n\r\n/**\r\n * bbq\r\n * 14、取消编辑，回到上次状态\r\n * @param  tableId   meta的id号\r\n * change zhanghengh 18/5/5 更改取消方式\r\n * change zhanghengh 18/5/16 将取消回原来的代码，并将ALL_DATA指为null\r\n */\r\nexport function resetTableData(tableId, callback) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    clearOneTypeToast('danger');\r\n\r\n    store.resetTableData({ shouldForceUpdate: !this.isUpdatePage });\r\n    // TODO\r\n    // callback && typeof callback === 'function' && callback.call(this, tableId, this.myTable[tableId].state.table);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 15、更新表格数据\r\n * @param  tableId   meta的id号\r\n * @param  data      后台返回的data 需要有rowId 删除的数据不要返回\r\n */\r\nexport function updateTableData(tableId, data, callback, isCache = true) {\r\n    if (!isObject(data) || !isArray(data.rows)) {\r\n        warningOnce(data, '传入的第二个参数为所设置的数据，数据格式是对象，且有个rows属性，rows的内容是数组');\r\n        return;\r\n    }\r\n\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.updateTableData(data, isCache, !this.isUpdatePage);\r\n\r\n    // 调用selectedChange事件\r\n    if (store.selectedChange) {\r\n        store.selectedChange({ ...this.props, ...this.output }, tableId, 0);\r\n    }\r\n}\r\n\r\n/**\r\n * bbq\r\n * 18、根据index获取表格某行某个字段值  0代表第一行  行序号可有可没有\r\n * @param  tableId   meta的id号\r\n * @param  index     行序号-1，从0开始\r\n * @param  key       columns的键值\r\n * mofify by zhanghengh  增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n */\r\nexport function getValByKeyAndIndex(tableId, index, key, flag = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.getValByKeyAndIndex(index, key);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 19、根据rowId设置获取某行某个字段值\r\n * @param  tableId   meta的id号\r\n * @param  rowid     行rowId\r\n * @param  key       columns的键值\r\n * @param  value     需要设置的value值\r\n * @param  display   需要设置的display值\r\n * @param  scale     需要设置的scale值\r\n * mofify by zhanghengh  增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n */\r\nexport function getValByKeyAndRowId(tableId, rowid, key, flag = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.getValByKeyAndRowKey(rowid, key);\r\n}\r\n\r\n/**\r\n * bbq\r\n这个有方法用edittable的相同方法替换他了\r\n * 22、通过rowId和键设置表格某行某个字段编辑性\r\n * @param  tableId   meta的id号\r\n * @param  rowid     rowid\r\n * @param  key       columns的键值\r\n * @param  flag      开关true/false\r\n * mofify by zhanghengh  增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n */\r\nexport function setEditableByRowId(tableId, rowid, key, flag = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setCellsProps({\r\n        rowKeyValues: [rowid],\r\n        attrcodes: key === 0 ? undefined : key,\r\n        value: { disabled: !flag },\r\n        shouldForceUpdate: !this.isUpdatePage,\r\n    });\r\n}\r\n\r\n/**\r\n * bbq\r\n * 23、通过Index和键设置表格某行某个字段编辑性\r\n * @param  tableId   meta的id号\r\n * @param  index     行序号-1\r\n * @param  key       columns的键值\r\n * @param  flag      开关true/false\r\n * mofify by zhanghengh  增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n */\r\nexport function setEditableByIndex(tableId, index, key, flag = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setCellsProps({\r\n        rowIndexs: index,\r\n        attrcodes: key === 0 ? undefined : key, // z支持数组\r\n        value: { disabled: !flag },\r\n        shouldForceUpdate: !this.isUpdatePage,\r\n    });\r\n}\r\n\r\n/**\r\n * bbq\r\n * 24、复制粘贴行，默认粘贴到该行下方\r\n * @param  tableId   meta的id号\r\n * @param  index     行序号index\r\n * @param  keys      不去复制的键值\r\n */\r\nexport function pasteRow(tableId, index, keys) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let copy = store.getRows({ rowIndexs: [index] })[0];\r\n    index = index === undefined ? 0 : index + 1;\r\n\r\n    store.pasteRow({ copyRow: copy, index, excludeKeys: keys });\r\n}\r\n\r\n/**\r\n * bbq\r\n * 27、获取选中行数据\r\n * @param  tableId   meta的id号\r\n */\r\nexport function getCheckedRows(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return [];\r\n    }\r\n\r\n    return store.getSelectedRows();\r\n}\r\n\r\n/**\r\n * TODO\r\n * 28、选中所有行\r\n * @param  tableId   meta的id号\r\n * @param  checked   开关\r\n */\r\nexport function selectAllRows(tableId, checked) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return [];\r\n    }\r\n\r\n    return store.setAllRowsSelected(checked, !this.isUpdatePage, () => {\r\n        let newLen = store.getSelectedRows().length;\r\n        isFunction(store.selectedChange) && store.selectedChange({ ...this.props, ...this.output }, tableId, newLen);\r\n    });\r\n}\r\n\r\n/**\r\n * bbq\r\n * 29、选中某些行(通过index)\r\n * @param  tableId   meta的id号\r\n * @param  index     行序号index\r\n */\r\nexport function selectRowsByIndex(tableId, index) {\r\n    // TODO  加入index的极限值判断\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setRowsSelected({ rowIndexs: index }, true);\r\n\r\n    let newLen = store.getSelectedRows().length;\r\n    isFunction(store.selectedChange) && store.selectedChange({ ...this.props, ...this.output }, tableId, newLen);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 30、取消选中某些行(通过index)\r\n * @param  tableId   meta的id号\r\n * @param  index     行序号index\r\n */\r\nexport function unSelectRowsByIndex(tableId, index) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setRowsSelected(index, false);\r\n\r\n    let newLen = store.getSelectedRows().length;\r\n    isFunction(store.selectedChange) && store.selectedChange({ ...this.props, ...this.output }, tableId, newLen);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 31、反选\r\n * @param  tableId   meta的id号\r\n */\r\nexport function reverseSelected(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.reverseRowsSelected(!this.isUpdatePage);\r\n\r\n    let newLen = store.getSelectedRows().length;\r\n    isFunction(store.selectedChange) && store.selectedChange({ ...this.props, ...this.output }, tableId, newLen);\r\n}\r\n\r\n/**\r\n * qbb\r\n * 32、移除没有输入内容，所有的空行\r\n * @param  tableId   meta的id号\r\n * @param  key       data的键值\r\n * @param  rule      对keys的修饰, rule == ‘except’/'include'\r\n * @modify\r\n * \t\t\t1、  增加了rule规则                             yanggqm      @18/05/18\r\n */\r\nexport function filterEmptyRows(tableId, keys, rule = 'except') {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.removeEmptyRows({ keys, rule });\r\n}\r\n\r\n/**\r\n * 过滤孙表数据\r\n * @param {string} tableId  子表id\r\n * @param {object} grandTableConfig  \r\n \r\n * grandTableConfig:\r\n * \r\n *  { \r\n *      grandTableCode1: { keys:[], rule='except' },\r\n *      grandTableCode2: { keys:[], rule='except' },\r\n *  }\r\n */\r\nexport function filterEmptyGrandRows(tableId, grandTableConfig, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.filterEmptyGrandRows(grandTableConfig, shouldForceUpdate);\r\n}\r\n\r\n\r\n/**\r\n * bbq\r\n * 33、通过传入的键过滤不想要的数据\r\n * @param  tableId   meta的id号\r\n * @param  keys      排除的项（根据columns里） 可数组可字符串也可不传\r\n */\r\nexport function getAllRowsRemoveKeys(tableId, keys) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    return store.getAllRowsRemoveKeys(keys);\r\n}\r\n\r\n/**\r\n * 关闭所有行展开\r\n * @param  tableId   meta的id号\r\n */\r\nexport function closeExpandedRow(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    store.setStore('expandedRowKeys', []);\r\n}\r\n\r\n/*\r\n * bbq\r\n * 36、获取缓存数据\r\n * @param  tableId   meta的id号\r\n * mofify by zhanghengh @18/05/05\r\n * mofify by zhanghengh @18/05/15 将初始值该会 ACHE_ORIGIN_DATA\r\n */\r\nexport function getCacheData(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    return JSON.parse(JSON.stringify(store.getCache(['base'])));\r\n}\r\n\r\n/*\r\n * bbq\r\n * 37、把index行设置为选中行\r\n * @param  tableId   meta的id号\r\n * @param  index     index 行序号-1\r\n */\r\nexport function focusRowByIndex(tableId, index) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n\r\n    // index = store.getTrueRowIndex({ rowIndex: index });\r\n    // TODO setCurrnetInfo\r\n    store.setTableProps('focusIndex', index, false);\r\n    store.setTableProps('currentIndex', index, true, () => {\r\n        store.setTableProps('focusIndex', -1, false);\r\n    });\r\n}\r\n\r\n/**\r\n * TODO\r\n * 38、获取以模板数据为基准的全数组数据\r\n * @param  tableId   meta的id号\r\n * mofify by zhanghengh  增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n */\r\nexport function getMixinMetaData(tableId, flag = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    return store.getMixinMetaOfData();\r\n}\r\n\r\n/**\r\n * bbq\r\n * 40、搜索表格中特定数据的方法，\r\n * @param {*} tableId 表格id\r\n * @param {*} key 所要搜索表格数据中的key 字符串或字符串数组\r\n * @param {*} value 所要搜索表格数据中的value 字符串\r\n * return  返回值是搜索到的表格数据  object\r\n * mofify by zhanghengh @18/05/116 修改之前的逻辑，改为每次从全数据筛选\r\n */\r\nexport function getFilterRows(tableId, key, value, allRows) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    let langCode = getCookie('langCode') || 'simpchn';\r\n    return store.getFilterRows(key, value, langCode);\r\n}\r\n/**\r\n * bbq\r\n * 41、搜索设置搜索后表格数据的方法，\r\n * @param {*} tableId 表格id\r\n * @param {*} key 所要搜索表格数据中的key 字符串或字符串数组\r\n * @param {*} value 所要搜索表格数据中的value 字符串\r\n * @param {*}  isShowAll 筛选不到是否展示全数据  true 或false\r\n * mofify by zhanghengh @18/05/16 修改之前的逻辑，每次筛选，保存当前全数据\r\n */\r\nexport function setFiltrateTableData(tableId, key, value, isShowAll) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    let langCode = getCookie('langCode') || 'simpchn';\r\n    return store.setFiltrateTableData(key, value, isShowAll, langCode, tableId);\r\n}\r\n\r\n/**\r\n * TODO\r\n * 批量更改表格数据42\r\n * add by zhangheng 18/5/4\r\n * @param {*} tableId 表格id\r\n */\r\nexport function batchChangeTableData(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return null;\r\n    }\r\n\r\n    return store.batchChangeTableData();\r\n}\r\n\r\n/**\r\n * bbq\r\n * add by yanggqm @18/05/15\r\n * 45、更新多行的数据（根据index值）\r\n * @param  tableId   meta的id号\r\n * @param  record    插入的数据数组\r\n * @param  flag      是否缓存新加入的数据\r\n * @param  autoFocus 表格重新渲染后是否需要聚焦到之前聚焦的元素 主要解决快捷键连续性操作的问题\r\n */\r\nexport function updateDataByIndexs(tableId, record, flag = false, autoFocus = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    store.updateTableDataByIndexs(record, flag, !this.isUpdatePage);\r\n\r\n    store.clearValidated();\r\n    // TODO\r\n    //     let cell = autoFocus && getCellDom(tableId);\r\n    //   let cellIdentity = cell && getCellIdentity(cell);\r\n}\r\n\r\n/**\r\n * bbq\r\n * add by yanggqm @18/05/15\r\n * 46、插入多行的数据（根据index值）\r\n * @param  tableId   meta的id号\r\n * @param  record    插入的数据数组\r\n * @param  autoFocus 表格重新渲染后是否需要聚焦到之前聚焦的元素 主要解决快捷键连续性操作的问题\r\n\r\n */\r\nexport function insertDataByIndexs(tableId, record, flag = false, autoFocus = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    // 由于内部是true  所以这里默认要为false\r\n    store.insertDataByIndexs(record, flag, !this.isUpdatePage);\r\n    // TODO\r\n    //     let cell = autoFocus && getCellDom(tableId);\r\n    //   let cellIdentity = cell && getCellIdentity(cell);\r\n    return {\r\n        // ...myCardScope.state.table,\r\n        rows: store.getData(),\r\n    };\r\n}\r\n\r\n/**\r\n * bbq\r\n * add by yanggqm @18/05/15\r\n * 47、根据index设置行数据的状态\r\n * @param  tableId   meta的id号\r\n * @param  record    插入的数据数组\r\n */\r\nexport function setRowStatusByIndexs(tableId, record) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    store.setRowStatusByIndexs(record, true);\r\n}\r\n\r\n/**\r\n * bbq\r\n * add by yanggqm @18/06/07\r\n * 51、 多行数据插入到index行后\r\n * @param  tableId   meta的id号\r\n * @param  data      多行为数组。\r\n * @param  index     行序号-1 index\r\n */\r\nexport function insertRowsAfterIndex(tableId, data, index) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    store.insertRowsAfterIndex(data, index);\r\n}\r\n\r\n/**\r\n * bbq\r\n * add by yanggqm @18/05/29\r\n * 50、 设置单元格为编辑态（同时光标定位）\r\n * @param  tableId   meta的id号\r\n * @param  index     行序号-1 index\r\n * @param  key       键值\r\n * @param  flag      编辑性 默认为true  为编辑态\r\n */\r\nexport function setTdEditByIndex(tableId, index, key, flag = true, isUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    store.setCellProps({\r\n        attrcode: key,\r\n        rowIndex: index,\r\n        shouldForceUpdate: isUpdate,\r\n        value: { isEdit: flag },\r\n    });\r\n}\r\n\r\n/**\r\n * bbq\r\n * add by yanggqm @18/06/08\r\n * 52、根据index设置表格某行某个字段值\r\n * @param  tableId   meta的id号\r\n * @param  index     行序号-1，从0开始\r\n * @param  origin    多键组成的对象，例如： {key1: {display: '', value: ''}, key2: {display: ''}}, key2: {display: '', value: '', scale: ''}}\r\n * motify zhanghengh 将批改数据重新缓存\r\n */\r\nexport function setValByKeysAndIndex(tableId, index, origin = {}) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n\r\n    let row = store.getRows({ rowIndexs: [index] })[0];\r\n    let rowKey = store.getTableProps('rowKey');\r\n\r\n    if (!row) {\r\n        return console.warn('unknow row data');\r\n    }\r\n\r\n    row.status == ROW_STATUS.origin && store.setRowProps({ rowIndex: index }, { status: ROW_STATUS.edit }, false);\r\n\r\n    for (let key in origin) {\r\n        store.setCellValue({\r\n            attrcode: key,\r\n            rowIndex: index,\r\n            shouldForceUpdate: false,\r\n            value: origin[key],\r\n        });\r\n        // 将批改数据重新缓存 有问题看一下 TODO\r\n        // if (!isUndefined(origin[key].value) || !isUndefined(origin[key].display)) {\r\n        //     this.batchData[tableId] = {\r\n        //       batchChangeIndex: index,\r\n        //       batchChangeKey: key,\r\n        //       batchChangeValue: !isUndefined(origin[key].value) ? origin[key].value : null,\r\n        //       batchChangeDisplay: !isUndefined(origin[key].display) ? origin[key].display : null\r\n        //     };\r\n        //   }\r\n    }\r\n\r\n    if (!this.isUpdatePage) {\r\n        store.refresh();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * TODO\r\n * add by yanggqm @18/06/09\r\n * 53、设置所有左侧复选禁/启用\r\n * @param  tableId     表格id\r\n * @param  flag        是否禁用 true 或false\r\n */\r\nexport function setAllCheckboxAble(tableId, flag = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let checkInfo = store.getCheckInfo();\r\n    checkInfo.disabledAll = !flag;\r\n    store.setCheckInfo({ checkInfo, shouldForceUpdate: false });\r\n\r\n    let data = store.getData();\r\n    let rowKey = store.getTableProps('rowKey');\r\n\r\n    // TODO\r\n    // add by bbqin 禁用所有checkbox时  先判断是否是聚焦的 聚焦就将焦点 移动一下\r\n    // let activeEl = document && document.activeElement;\r\n    // let container = document.getElementById(`hot-key-${tableId}`);\r\n    // if (\r\n    //     container &&\r\n    //     container.contains(activeEl) &&\r\n    //     activeEl.type === \"checkbox\"\r\n    // ) {\r\n    //     document.body.focus();\r\n    // }\r\n\r\n    data.forEach(item => {\r\n        store.setRowProps({ rowKeyValue: item[rowKey] }, { disabled: !flag }, false);\r\n    });\r\n\r\n    //  更新\r\n    if (!this.isUpdatePage) {\r\n        store.refresh();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * bbq\r\n * add by yanggqm @18/06/26\r\n * 57、设置多个表格数据\r\n * @param  tableId   meta的id号\r\n * @param  data      传入的data数据\r\n * 解决思路：\r\n * \t\t1、给不同的tableId配对应的data\r\n * \t\t2、不论第几次给tableId对应table来setTableData，都要把最新的data存下来\r\n *      3、date的数据结构为 {rows: []}\r\n */\r\nexport function setMulTablesData(data = {}, callback) {\r\n    for (let key in data) {\r\n        let store = existenceCheck.call(this, key);\r\n        if (!store) {\r\n            return [];\r\n        }\r\n\r\n        let originData = JSON.parse(JSON.stringify(data[key]));\r\n        originData.rows = store.formatData(originData.rows);\r\n\r\n        store.setCache(['base'], JSON.parse(JSON.stringify(originData)));\r\n        store.setCache(['all'], null);\r\n\r\n        let oldData = store.getData();\r\n        // 清理旧值\r\n        store.clearRowsOldValue({ rows: oldData });\r\n        // 设置数据\r\n        store.setData({ data: originData.rows, shouldForceUpdate: true });\r\n        // 设置值之后  存旧值\r\n        let newData = store.getData();\r\n        store.saveRowsOldValue({ rows: newData });\r\n\r\n        isFunction(callback) && callback();\r\n\r\n        // if (!this.myTable[key]) {\r\n        //     // 给每个控件赋初始值\r\n        //     let rows = originData.rows;\r\n        //     _saveOldValue.call(this, { rows, tableId: key });\r\n        //     this.myTableData[key] = originData;\r\n        //     isFunction(callback) && callback.call(this, { ...this.output }, data);\r\n        //     _saveOriginCache(key, originData);\r\n        //     _saveAllData(key, null); // TODO 缓存表格初始全数据 zh\r\n        // }\r\n    }\r\n}\r\n\r\n/**\r\n * bbq\r\n * add by yanggqm @18/07/05\r\n * 58、根据index获取行数据\r\n * @param  tableId   meta的id号\r\n * @param  index     index值 行序号-1\r\n */\r\n\r\nexport function getRowsByIndexs(tableId, index) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    return store.getRows({ rowIndexs: index });\r\n}\r\n\r\n// TODO\r\nexport function getAllTableRequire(tableIds, flag = false) {\r\n    const errorInfo = {\r\n        key: {},\r\n        label: {},\r\n        ids: [],\r\n    };\r\n\r\n    if (!isArray(tableIds) && !isString(tableIds) && !isUndefined(tableIds)) {\r\n        warningOnce(\r\n            !isArray(tableIds) && !isString(tableIds) && !isUndefined(tableIds),\r\n            '不传检测所有表，传入字符串检测当前表，传入数组检测数组中的每一项，其他格式错误',\r\n        );\r\n        return errorInfo;\r\n    }\r\n\r\n    const json = this.cardTableDataSource._langJson || {};\r\n    const meta = this.state.meta;\r\n    const { gridrelation, containerrelation } = meta;\r\n\r\n    if (containerrelation) {\r\n        console.log('current meta include mutil containerrelation');\r\n    }\r\n\r\n    tableIds = !isUndefined(tableIds) ? (isArray(tableIds) ? tableIds : [tableIds]) : null;\r\n\r\n    // 校验\r\n    const validateFailed = {};\r\n    let firstValidateFaild = {};\r\n\r\n    for (let tableId in gridrelation) {\r\n        const idInfo = gridrelation[tableId];\r\n        errorInfo.key[tableId] = {};\r\n        const tableName = meta[tableId]['name'] || json['table0010'];\r\n\r\n        //  校验\r\n        validateFailed[tableId] = validateFailed[tableId] || {};\r\n        firstValidateFaild[tableId] = firstValidateFaild[tableId] || [];\r\n\r\n        let store = existenceCheck.call(this, tableId);\r\n        const rowKey = store ? store.getTableProps('rowKey') : 'rowid';\r\n\r\n        if (!tableIds) {\r\n            errorInfo.ids.push(tableName);\r\n        } else {\r\n            tableIds.includes(tableId) && errorInfo.ids.push(tableName);\r\n        }\r\n\r\n        const tableLabel = `${json['table007']}_` + tableName + ' > ';\r\n        errorInfo.label[tableLabel] = {};\r\n        // 筛选之前的代码\r\n        // const tableData =\r\n        //   this.myTable[tableId] && this.myTable[tableId].state ? this.myTable[tableId].state.table : { rows: [] };\r\n        const rows = getAllRows.call(this, tableId);\r\n\r\n        const tableDataRows = rows.filter(item => item.status != ROW_STATUS.delete);\r\n\r\n        // destEditAreaCode是侧拉项  tabRelation为页签项\r\n        const { tabRelation = [] } = idInfo;\r\n\r\n        if (tabRelation.length) {\r\n            tabRelation.forEach(idMain => {\r\n                const tabId = idMain + '_TAB';\r\n                const tabName = meta[idMain]['name'] || json['table009'];\r\n                const tabLabel = `${tabName}(${json['table008']})` + ' ： ';\r\n                errorInfo.key[tableId][tabId] = {};\r\n                errorInfo.label[tableLabel][tabLabel] = {};\r\n\r\n                validateFailed[tableId][idMain] = {};\r\n\r\n                // idMain 为主表内的不同页签  itemsMain可能会多表头\r\n                let itemsMain = isObject(meta[idMain]) ? meta[idMain].items : [];\r\n                if (flag) {\r\n                    itemsMain = itemsMain.getArrayData ? itemsMain.getArrayData() : _getAllItem(itemsMain); // 处理侧拉多表头\r\n                }\r\n\r\n                // itemsMain  兼容\r\n                itemsMain = itemsMain.getArrayData ? itemsMain.getArrayData() : itemsMain;\r\n\r\n                itemsMain.forEach(item => {\r\n                    if (!!item.required && !!item.visible && tableDataRows.length > 0) {\r\n                        tableDataRows.forEach((val, index) => {\r\n                            const cellLabel = `${json['table_first']}${index + 1}${json['table_row']}：`;\r\n                            errorInfo.key[tableId][tabId][index] = errorInfo.key[tableId][tabId][index] || {};\r\n                            errorInfo.label[tableLabel][tabLabel][cellLabel] = errorInfo.label[tableLabel][tabLabel][cellLabel] || {};\r\n\r\n                            if (val.values[item.attrcode]) {\r\n                                const checkedValue = val.values[item.attrcode].value;\r\n                                if (isWrong(checkedValue)) {\r\n                                    errorInfo.key[tableId][tabId][index][item.attrcode] = item.label;\r\n                                    errorInfo.label[tableLabel][tabLabel][cellLabel][item.label] = ' 为空';\r\n\r\n                                    // 有就是有没有就是没有  给页签上判断用\r\n                                    validateFailed[tableId][idMain][val[rowKey]] = validateFailed[tableId][idMain][val[rowKey]] || {};\r\n                                    validateFailed[tableId][idMain][val[rowKey]][item.attrcode] = item.attrcode;\r\n                                    if (!firstValidateFaild[tableId].length) {\r\n                                        firstValidateFaild[tableId] = [idMain, val[rowKey], item.attrcode];\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                errorInfo.key[tableId][tabId][index][item.attrcode] = item.label;\r\n                                errorInfo.label[tableLabel][tabLabel][cellLabel][item.label] = ' 为空';\r\n\r\n                                // 有就是有没有就是没有  给页签上判断用\r\n                                validateFailed[tableId][idMain][val[rowKey]] = validateFailed[tableId][idMain][val[rowKey]] || {};\r\n                                validateFailed[tableId][idMain][val[rowKey]][item.attrcode] = item.attrcode;\r\n                                if (!firstValidateFaild[tableId].length) {\r\n                                    firstValidateFaild[tableId] = [idMain, val[rowKey], item.attrcode];\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n    //console.log(errorInfo);\r\n    errorInfo.validateFailed = validateFailed;\r\n    errorInfo.firstValidateFaild = firstValidateFaild;\r\n    return errorInfo;\r\n}\r\n/**52\r\n * 返回手动选中过的的单元格信息\r\n * add by  zhangheng 18/07/22\r\n */\r\nexport function getTableItemData(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    // {\r\n    //     batchChangeIndex,\r\n    //     batchChangeKey,\r\n    //     batchChangeValue,\r\n    //     batchChangeDisplay,\r\n    // }\r\n\r\n    return store.getCache('oldBatchData');\r\n}\r\n\r\n/**53\r\n * add zhanghengh 18/7/30\r\n * 设置某些表格，某些列的精度\r\n * add by  zhangheng 18/07/22  这个结构是根据崔松杰的方法返回的，又问题可以问问他。。。\r\n * list数据结构   [{areacode: 'tableid', filedcode: 'colkey', scale: \"2\"}, ....]\r\n */\r\nexport function setColScale(list) {\r\n    list.forEach(eve => {\r\n        const { areacode, fieldcode, scale } = eve;\r\n        this.state.meta[areacode].items.forEach(item => {\r\n            if (item.attrcode === fieldcode) {\r\n                item.scale = scale;\r\n            }\r\n        });\r\n    });\r\n    /**重新设置模版精度*/\r\n    this.meta.setMeta(this.state.meta);\r\n}\r\n\r\n/**55\r\n * add zhanghengh 18/8/2\r\n * 判断哪列隐藏\r\n * tableId\r\n * colKey  所有检测的列字段\r\n */\r\nexport function checkVisible(tableId, colKey) {\r\n    let isVisible = false;\r\n    this.state.meta[tableId].items.forEach(eve => {\r\n        //获取合计行的列配置\r\n        const { visible, attrcode, children } = eve;\r\n        if (!isUndefined(children)) {\r\n            //判断和并列的情况\r\n            children.forEach(item => {\r\n                const { visible } = item;\r\n                if (colKey === attrcode && visible) {\r\n                    isVisible = true;\r\n                }\r\n            });\r\n        } else if (colKey === attrcode && visible) {\r\n            isVisible = true;\r\n        }\r\n    });\r\n    return isVisible;\r\n}\r\n\r\n// 校验孙表\r\n// tableId: {parentId: []}\r\nexport function getChildTableRequired(parentIds = {}, childRowKey = 'rowid') {\r\n\r\n    if (!parentIds) { console.log('not get tableId'); }\r\n\r\n    const json = this.cardTableDataSource._langJson || {};\r\n    const meta = this.state.meta;\r\n    const { gridrelation, containerrelation } = meta;\r\n\r\n    if (containerrelation) {\r\n        console.log('current meta include mutil containerrelation');\r\n    }\r\n\r\n    // 整表校验\r\n    const allErrorInfo = [];\r\n\r\n    // 可能会有效率问题\r\n    for (let parentId in parentIds) {\r\n        const childIds = parentIds[parentId] || [];\r\n        const parentStore = existenceCheck.call(this, parentId);\r\n        // 所有子表行\r\n        const parentData = parentStore && parentStore.getViewData('filter');\r\n\r\n        if (parentData) {\r\n            // 所有孙表数据\r\n            let grandTableDatas = parentStore.getStore('grandTable') || {};\r\n            // console.log(grandTableData, parentData);\r\n            const parentRowKey = parentStore.getTableProps('rowKey') || 'rowid';\r\n\r\n            // 当前表\r\n            const parentErrorInfo = [];\r\n            parentData.forEach((prow, pindex) => {\r\n                let grandTableData = grandTableDatas[prow[parentRowKey]] || {};\r\n                if (grandTableData) {\r\n                    // 校验缓存\r\n                    const errorInfo = {\r\n                        key: {},\r\n                        label: {},\r\n                        ids: [],\r\n                    };\r\n                    const validateFailed = {};\r\n                    const firstValidateFaild = {};\r\n\r\n                    childIds.forEach(tableId => {\r\n                        const idInfo = gridrelation[tableId] || {};\r\n                        errorInfo.key[tableId] = {};\r\n                        const tableName = meta[tableId]['name'] || json['table0010'];\r\n\r\n                        //  校验\r\n                        validateFailed[tableId] = validateFailed[tableId] || {};\r\n                        firstValidateFaild[tableId] = firstValidateFaild[tableId] || {};\r\n\r\n                        // 获取孙表的rowKey\r\n                        let store = existenceCheck.call(this, tableId);\r\n                        const childRowKey = store ? store.getTableProps('rowKey') : childRowKey;\r\n\r\n                        errorInfo.ids.push(tableName);\r\n\r\n                        const tableLabel = `${json['table007']}_` + tableName + ' > ';\r\n                        errorInfo.label[tableLabel] = {};\r\n                        // 筛选之前的代码\r\n                        const rows = (grandTableData[tableId] || {}).rows || [];\r\n\r\n                        const tableDataRows = rows.filter(item => item.status != ROW_STATUS.delete);\r\n\r\n                        // destEditAreaCode是侧拉项  tabRelation为页签项\r\n                        const { tabRelation = [tableId] } = idInfo;\r\n\r\n                        // 共享页签\r\n                        if (tabRelation.length) {\r\n                            tabRelation.forEach(idMain => {\r\n                                const tabId = idMain + '_TAB';\r\n                                const tabName = meta[idMain]['name'] || json['table009'];\r\n                                const tabLabel = `${tabName}(${json['table008']})` + ' ： ';\r\n                                errorInfo.key[tableId][tabId] = {};\r\n                                errorInfo.label[tableLabel][tabLabel] = {};\r\n\r\n                                validateFailed[tableId][idMain] = {};\r\n\r\n                                // idMain 为主表内的不同页签  itemsMain可能会多表头\r\n                                let itemsMain = isObject(meta[idMain]) ? meta[idMain].items : [];\r\n\r\n                                itemsMain = itemsMain.getArrayData ? itemsMain.getArrayData() : _getAllItem(itemsMain); // 处理侧拉多表头\r\n\r\n                                // itemsMain  兼容\r\n                                itemsMain = itemsMain.getArrayData ? itemsMain.getArrayData() : itemsMain;\r\n\r\n                                itemsMain.forEach(item => {\r\n                                    if (!!item.required && !!item.visible && tableDataRows.length > 0) {\r\n                                        tableDataRows.forEach((val, index) => {\r\n                                            const cellLabel = `${json['table_first']}${index + 1}${json['table_row']}：`;\r\n                                            errorInfo.key[tableId][tabId][index] = errorInfo.key[tableId][tabId][index] || {};\r\n                                            errorInfo.label[tableLabel][tabLabel][cellLabel] = errorInfo.label[tableLabel][tabLabel][cellLabel] || {};\r\n\r\n                                            if (val.values[item.attrcode]) {\r\n                                                const checkedValue = val.values[item.attrcode].value;\r\n                                                if (isWrong(checkedValue)) {\r\n                                                    errorInfo.key[tableId][tabId][index][item.attrcode] = item.label;\r\n                                                    errorInfo.label[tableLabel][tabLabel][cellLabel][item.label] = ' 为空';\r\n\r\n                                                    // 有就是有没有就是没有  给页签上判断用\r\n                                                    validateFailed[tableId][idMain][val[childRowKey]] = validateFailed[tableId][idMain][val[childRowKey]] || {};\r\n                                                    validateFailed[tableId][idMain][val[childRowKey]][item.attrcode] = item.attrcode;\r\n                                                    if (!Object.keys(firstValidateFaild[tableId]).length) {\r\n                                                        firstValidateFaild[tableId][idMain] = {};\r\n                                                        firstValidateFaild[tableId][idMain][val[childRowKey]] = item.attrcode;\r\n                                                    }\r\n                                                }\r\n                                            } else {\r\n                                                errorInfo.key[tableId][tabId][index][item.attrcode] = item.label;\r\n                                                errorInfo.label[tableLabel][tabLabel][cellLabel][item.label] = ' 为空';\r\n\r\n                                                // 有就是有没有就是没有  给页签上判断用\r\n                                                validateFailed[tableId][idMain][val[childRowKey]] = validateFailed[tableId][idMain][val[childRowKey]] || {};\r\n                                                validateFailed[tableId][idMain][val[childRowKey]][item.attrcode] = item.attrcode;\r\n                                                if (!Object.keys(firstValidateFaild[tableId]).length) {\r\n                                                    firstValidateFaild[tableId][idMain] = {};\r\n                                                    firstValidateFaild[tableId][idMain][val[childRowKey]] = item.attrcode;\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    errorInfo.validateFailed = validateFailed;\r\n                    errorInfo.firstValidateFaild = firstValidateFaild;\r\n\r\n                    // 行信息\r\n                    parentErrorInfo.push({\r\n                        index: pindex,\r\n                        rowKeyValue: prow[parentRowKey],\r\n                        info: `${json['table_first']}${pindex + 1}${json['table_row']}：`,\r\n                        errorInfo,\r\n                    });\r\n                }\r\n            });\r\n\r\n            // 表信息\r\n            allErrorInfo.push({\r\n                id: parentId,\r\n                info: meta[parentId]['name'] || json['table0010'],\r\n                row: parentErrorInfo,\r\n            });\r\n        }\r\n    }\r\n\r\n    return allErrorInfo;\r\n}\r\n\r\nexport function checkChildTableRequired(parentIds = {}, isReturnBool = true, childRowKey = 'rowid') {\r\n    let allErrorInfo = getChildTableRequired.call(this, parentIds, childRowKey);\r\n\r\n    // console.log(allErrorInfo, 'allErrorInfoallErrorInfoallErrorInfo');\r\n    const json = this.cardTableDataSource._langJson || {};\r\n    let isRequired = false;\r\n    // 校验信息\r\n    let toastMessage = [];\r\n\r\n    // 被检验住的行\r\n    const requiredRows = { isNoRequired: false };\r\n    // 校验信息\r\n    allErrorInfo.forEach(pinfo => {\r\n        requiredRows[pinfo.id] = {};\r\n        if (pinfo.row) {\r\n            // 缓存记录\r\n            let grandValidateFailed = {};\r\n            pinfo.row.forEach(rowInfo => {\r\n                const parentLabel = pinfo.info + rowInfo.info;\r\n\r\n                // 父表\r\n                toastMessage.push('>>> ' + parentLabel);\r\n\r\n                const { label, ids, validateFailed = {}, firstValidateFaild = {} } = rowInfo.errorInfo;\r\n                // 记录\r\n                grandValidateFailed[rowInfo.rowKeyValue] = validateFailed;\r\n                // 被检验住的行\r\n                const childRequiredRows = { isNoRequired: false };\r\n                let messageWrong = []; //需要校验的表格\r\n                messageWrong = Object.keys(label).filter(item =>\r\n                    ids.some(item1 => item.startsWith(`${json['table007']}_${item1}`)),\r\n                );\r\n                messageWrong.forEach(eve => {\r\n                    const labelItem = label[eve];\r\n                    childRequiredRows[eve] = {};\r\n                    Object.keys(labelItem).forEach(key => {\r\n                        childRequiredRows[eve][key] = { childRequiredRows: [] };\r\n                        const labelItemChild = labelItem[key];\r\n                        let pagelabel = '';\r\n                        if (\r\n                            Object.keys(labelItemChild).length > 0 &&\r\n                            Object.keys(labelItemChild).filter(key => {\r\n                                return Object.keys(labelItemChild[key]).length;\r\n                            }).length\r\n                        ) {\r\n                            pagelabel = key;\r\n                        }\r\n                        toastMessage.push(pagelabel);\r\n                        Object.keys(labelItemChild).forEach((cont, index) => {\r\n                            if (Object.keys(labelItemChild[cont]).length > 0) {\r\n                                childRequiredRows[eve][key]['childRequiredRows'].push(index);\r\n                                isRequired = true;\r\n                                //对输出的校验内容进行格式转化\r\n                                let str =\r\n                                    cont +\r\n                                    `${Object.keys(labelItemChild[cont])\r\n                                        .map(ele => {\r\n                                            return `[${ele}]`;\r\n                                        })\r\n                                        .join('，')}；`;\r\n                                toastMessage.push(str);\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n\r\n                // 记录结果\r\n                requiredRows[pinfo.id][rowInfo.index] = childRequiredRows;\r\n            });\r\n            if (isRequired) {\r\n                // console.log(pinfo.id, grandValidateFailed);\r\n                const store = existenceCheck.call(this, pinfo.id);\r\n                store && store.setCache('grandValidateFailed', grandValidateFailed);\r\n            }\r\n\r\n        }\r\n    })\r\n\r\n    // 如果没通过\r\n    if (isRequired) {\r\n        toast({\r\n            content: json['table_no_empty'] + '：',\r\n            color: 'danger',\r\n            groupOperation: true,\r\n            isNode: true,\r\n            TextArr: [json['table0022'], json['table0023'], json['table0024']],\r\n            groupOperationMsg: toastMessage.filter(message => {\r\n                return message;\r\n            }),\r\n            mark: 'card-table-toastx',\r\n        });\r\n        return isReturnBool ? !isReturnBool : requiredRows;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * TODO\r\n * 59、根据id检测必输性\r\n * 要考虑 多表头 和 侧拉分组 和 多页签 这极端情况。\r\n * mofify by zhanghengh  增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n */\r\nexport function checkTableRequired(tableIds, flag = false, isReturnBool = true, autoFocus = true) {\r\n    const json = this.cardTableDataSource._langJson || {};\r\n    const { label, ids, validateFailed = {}, firstValidateFaild = {} } = getAllTableRequire.call(this, tableIds, flag);\r\n    let messageWrong = []; //需要校验的表格\r\n    let isRequired = false;\r\n    let toastMessage = [];\r\n\r\n    // 被检验住的行\r\n    const requiredRows = { isNoRequired: false };\r\n    messageWrong = Object.keys(label).filter(item =>\r\n        ids.some(item1 => item.startsWith(`${json['table007']}_${item1}`)),\r\n    );\r\n    messageWrong.forEach(eve => {\r\n        const labelItem = label[eve];\r\n        requiredRows[eve] = {};\r\n        Object.keys(labelItem).forEach(key => {\r\n            requiredRows[eve][key] = { requiredRows: [] };\r\n            const labelItemChild = labelItem[key];\r\n            let pagelabel = '';\r\n            if (\r\n                Object.keys(labelItemChild).length > 0 &&\r\n                Object.keys(labelItemChild).filter(key => {\r\n                    return Object.keys(labelItemChild[key]).length;\r\n                }).length\r\n            ) {\r\n                pagelabel = key;\r\n            }\r\n            toastMessage.push(pagelabel);\r\n            Object.keys(labelItemChild).forEach((cont, index) => {\r\n                if (Object.keys(labelItemChild[cont]).length > 0) {\r\n                    requiredRows[eve][key]['requiredRows'].push(index);\r\n                    isRequired = true;\r\n                    //对输出的校验内容进行格式转化\r\n                    let str =\r\n                        cont +\r\n                        `${Object.keys(labelItemChild[cont])\r\n                            .map(ele => {\r\n                                return `[${ele}]`;\r\n                            })\r\n                            .join('，')}；`;\r\n                    toastMessage.push(str);\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    if (isRequired) {\r\n        // validateFailed, firstValidateFaild // 四层数据\r\n        console.log(validateFailed);\r\n        for (let tableId in validateFailed) {\r\n            const store = existenceCheck.call(this, tableId);\r\n            const table = validateFailed[tableId];\r\n            let isRefresh = false;\r\n            if (store && table) {\r\n                // 缓存状态\r\n                store.setCache('validateFailed', validateFailed);\r\n                store.setCache('firstValidateFaild', firstValidateFaild);\r\n                for (let tabId in table) {\r\n                    const rows = table[tabId];\r\n                    if (rows) {\r\n                        for (let rowKeyValue in rows) {\r\n                            if (rowKeyValue) {\r\n                                let row = rows[rowKeyValue];\r\n                                if (row) {\r\n                                    for (let attrcode in row) {\r\n                                        store.setCellProps(rowKeyValue, attrcode, { validated: false }, false);\r\n                                    }\r\n                                }\r\n                                isRefresh = true;\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                isRefresh && store.refresh();\r\n            }\r\n        }\r\n\r\n        // 自动聚焦到首个\r\n        if (firstValidateFaild && autoFocus) {\r\n            const tableIdList = tableIds ? (isArray(tableIds) ? tableIds : [tableIds]) : tableIds || this.orderOfHotKey;\r\n\r\n            let tabSelector = null,\r\n                cellSelector = null;\r\n            // 找到第一个\r\n            tableIdList.some(tableId => {\r\n                let cellInfo = firstValidateFaild[tableId];\r\n                if (cellInfo && cellInfo.length > 0) {\r\n                    tabSelector = `#js_lightTabs_header_${tableId} [name=\"${cellInfo[0]}\"] a`;\r\n                    cellSelector = `.table-cell-wrapper[cellselectorkey=\"${cellInfo[1]}@${cellInfo[2]}\"] [tabindex=\"0\"]`;\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            const tabElement = document.querySelector(tabSelector);\r\n\r\n            tabElement && tabElement.click();\r\n\r\n            setTimeout(() => {\r\n                const cellElement = document.querySelector(cellSelector);\r\n                if (cellElement) {\r\n                    cellElement.ncExecuteFocus = true;\r\n                    cellElement.focus();\r\n                    cellElement.ncExecuteFocus = false;\r\n                }\r\n            }, 300)\r\n\r\n            console.log(tableIdList, firstValidateFaild, tabSelector, cellSelector);\r\n        }\r\n\r\n        toast({\r\n            content: json['table_no_empty'] + '：',\r\n            color: 'danger',\r\n            groupOperation: true,\r\n            isNode: true,\r\n            TextArr: [json['table0022'], json['table0023'], json['table0024']],\r\n            groupOperationMsg: toastMessage.filter(message => {\r\n                return message;\r\n            }),\r\n            mark: 'card-table-toastx',\r\n        });\r\n        return isReturnBool ? !isReturnBool : requiredRows;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * bbq\r\n * add by zhanghengh @18/09/01  到时候让业务组试一下有问题在改\r\n * 61、给表格所用单元格设值\r\n * 通过传入的数据给单元格重新设值\r\n * rows 就是正常表格数据的格式  [{ status:v '1', rowid: '111111', values: { name: { value: 1, dispaly: 1, scale: '1' } }}]\r\n */\r\nexport function setAllKeysVal(tableId, rows) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    return store.setRowsCellValue({\r\n        rows,\r\n        shouldForceUpdate: !this.isUpdatePage,\r\n    });\r\n}\r\n\r\n/**62\r\n * bbq\r\n * 设置当前点击行\r\n * add by  zhangheng 18/07/04\r\n * @param {*} tableId 表格id\r\n * index  索引\r\n */\r\nexport function setClickRowIndex(tableId, data) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    store.setTableProps(\"currentInfo\", data, false);\r\n}\r\n\r\n/**63\r\n * bbq\r\n * 获取当前点击行\r\n * add by  zhangheng 18/07/04\r\n * @param {*} tableId 表格id\r\n */\r\nexport function getClickRowIndex(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    return store.getTableProps(\"currentInfo\");\r\n}\r\n\r\n/**\r\n * bbq\r\n * add by zhanghengh @18/09/12  到时候让业务组试一下有问题在改\r\n * 64、给表格所用单元格设值\r\n * 通过传入的数据给单元格重新设值\r\n * rows 就是正常表格数据的格式  [{ status:v '1', rowid: '111111', values: { name: { value: 1, dispaly: 1, scale: '1' } }}]\r\n */\r\nexport function setSaveData(tableId, data) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    store.setRowsCellValue({\r\n        rows: data.rows,\r\n        shouldForceUpdate: !this.isUpdatePage,\r\n    });\r\n    store.setCache(['base'], { rows: data.rows });\r\n    store.setCache(['all'], null); // TODO 缓存表格初始全数据 zh\r\n}\r\n\r\n/**\r\n * bbq\r\n * 65、根据index获取某行数据\r\n */\r\n//\r\nexport function getDataByIndex(tableId, index) {\r\n    if (!tableId || typeof index == 'undefined') {\r\n        return;\r\n    }\r\n    let arrRows = getAllRows.call(this, tableId);\r\n    // TODO 这里也可以用index取找真实index  然后再取值\r\n    return arrRows[index];\r\n}\r\n\r\n/**\r\n * 66、根据传入数据更新表格数据  后台返回差异的结果的时候使用，配套使用，其他场景不能使用\r\n * data 格式{rows：[{ status:v '1', rowid: '111111', values: { name: { value: 1, dispaly: 1, scale: '1' } }}]}\r\n */\r\n//\r\nexport function updateDataByRowId(tableId, data, isDel = false, isCache = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n\r\n    store.updateTableDataByRowId(data, isCache, !this.isUpdatePage, isDel);\r\n\r\n    store.clearValidated();\r\n\r\n    return {\r\n        // ...this.myTable[tableId].state.table, // TODO\r\n        rows: store.getData(),\r\n    };\r\n}\r\n\r\n/**67\r\n * 获取行的状态\r\n * add by  zhangheng 18/06/21\r\n * @param {*} tableId 表格id\r\n * @param {*} index 行索引   数组或者数字\r\n */\r\nexport function getRowStatus(tableId, index) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    return store.getRowProps({ rowIndex: index }, 'status');\r\n}\r\n\r\n/****70 获得当前行****/\r\nexport function getCurrentIndex(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n    return store.getTableProps('currentIndex');\r\n}\r\n\r\n/****\r\n * TODO\r\n * 71 差异更新Rowid 郭祉祺加  （各业务组后台返回数据应该相同，如果有需要应该可以暴露给业务组）   这个方法是基于后台数据完整的情况下，进行差异更新，与updatebyrowid 的逻辑相反，需要后台配合，谨慎使用\r\n * 在筛选模式下,调这个api直接更新总数据,然后取消掉筛选状态,先这样处理,如有问题在进行调整\r\n */\r\nexport function updateDiffDataByRowId(tableId, data, isCache = false, isDel = true, isAddStatus = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n\r\n    let rowKey = store.getTableProps('rowKey');\r\n\r\n    if (Array.isArray(data.rows)) {\r\n        // let rows = table.rows;\r\n        let rows = getAllRows.call(this, tableId);\r\n        let rowidMap = {};\r\n        let deleteRow = [];\r\n        rows.map(row => {\r\n            rowidMap[row[rowKey]] = row;\r\n            if (row.status == ROW_STATUS.delete) {\r\n                deleteRow.push(row);\r\n            }\r\n        });\r\n        data.rows.map((record, index) => {\r\n            let row = data.rows[index];\r\n            let values = row.values;\r\n            let rowid = record[rowKey];\r\n            if (rowid && rowidMap[rowid]) {\r\n                let rowStatus = row.status;\r\n                let status =\r\n                    typeof rowStatus == 'undefined' || rowStatus == ROW_STATUS.origin ? ROW_STATUS.edit : rowStatus;\r\n                Object.keys(values).forEach(key => {\r\n                    values[key] = {\r\n                        ...rowidMap[rowid].values[key],\r\n                        ...{ display: null, value: null, scale: -1 },\r\n                        ...values[key],\r\n                    };\r\n                });\r\n                data.rows[index] = { ...rowidMap[rowid], ...row };\r\n                data.rows[index].values = {\r\n                    ...rowidMap[rowid].values,\r\n                    ...values,\r\n                };\r\n                data.rows[index].status = status;\r\n            } else {\r\n                row.rowid = store.generateRowKey();\r\n                if (isAddStatus) {\r\n                    row.status = ROW_STATUS.add;\r\n                    // 模版上设置了默认值时,给这里没有值的新增行设置上默认值\r\n                    // let sumItems = _sumItemsCode.call(this, tableId, false);\r\n                    let sumItems = store.getArrayMeta(tableId);\r\n                    sumItems.forEach(item => {\r\n                        const { initialvalue, attrcode } = item;\r\n                        const hasInit = isObject(initialvalue);\r\n                        const cellValue = row.values[attrcode];\r\n                        if (cellValue && hasInit) {\r\n                            const { display, scale, value } = cellValue;\r\n                            const initialCellValue = {\r\n                                display: display || initialvalue.display,\r\n                                scale: scale || initialvalue.scale,\r\n                                value: value || initialvalue.value,\r\n                            };\r\n                            Object.assign(cellValue, initialCellValue);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        // 如果是更新，需要就删除行留下来，保存则不需要\r\n        if (isDel) {\r\n            data.rows = data.rows.concat(deleteRow);\r\n        }\r\n\r\n        store.setTableData(data, {\r\n            isCache: false,\r\n            isDel: true,\r\n            shouldForceUpdate: !this.isUpdatePage,\r\n        });\r\n        // 清理一下数据  如果有问题  再和业务对一下\r\n        let storeData = store.getStore();\r\n        // 郭祉祺让加的\r\n        return {\r\n            rows: storeData.data,\r\n            checkInfo: storeData.checkInfo,\r\n        };\r\n    }\r\n}\r\n\r\n/**72\r\n * TODO\r\n * 移动行的方法\r\n * add by  zhangheng 19/03/5\r\n * @param {*} tableId 表格id\r\n * @param {*} indexStart 开始索引位置\r\n * @param {*} indexEnd 结束索引位置\r\n */\r\nexport function moveRow(tableId, indexStart, indexEnd) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.moveRow(indexStart, indexEnd);\r\n}\r\n\r\n/**73\r\n * TODO\r\n * 王策加\r\n * 通过Index设置表格某些行的编辑性\r\n * @param  tableId   meta的id号\r\n * @param  index     行序号-1 （数字数组或者数字）\r\n * @param  flag      开关true/false\r\n */\r\nexport function setRowEditByIndex({ tableId, index, flag }) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setRowsCellPropsByIndex(index, { disabled: !flag });\r\n}\r\n\r\n/**\r\n *   //任亚军整理\r\n *      69      setModelEdit            设置行侧拉编辑性\r\n *      68      setColVisibleByKey      设置列显示隐藏\r\n *      67      setColsValue            设置列数据\r\n * *    16      openModel               打开侧拉窗\r\n *      17      closeModel              关闭侧拉窗\r\n * *    20      hideColByKey            隐藏列(根据key)\r\n * \t\t21      showColByKey            显示列(根据key)\r\n * *    25\t\t  getColValue             获取列数据\r\n *      26\t\t  setColValue             设置列数据\r\n * *    39      closeExpandedRow        关闭任何的展开视图\r\n * *    43      openListView            最大化多表中表体卡片列表\r\n * \t\t44 \t\t  openMaxTable            最大化多表体表格\r\n * * \t48      getMetaValByKey         根据key键获取模板中数据\r\n * \t\t49      setColEditableByKey     设置某一列的编辑性\r\n * *    54\t\t  getModalDataByIndex     获取侧拉数据(根据index)\r\n * \t\t55\t\t  showEditAreaKey \t\t    设置侧拉某控件显隐\r\n * \t\t56      toggleCardTable         控制主表的收起展开\r\n * *    60      setQueryCondition       统一给表体和侧拉添加参照顾虑\r\n */\r\n\r\n/**\r\n *  设置行侧拉编辑性\r\n * @author renyjk\r\n * @param  {string} tableId   meta的id号\r\n * @param  {string || array} key    字段编码\r\n * @param  {boolean}  flag      是否可编辑\r\n */\r\nexport function setModelEdit(tableId, key, flag) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    if (isString(key)) key = [key];\r\n\r\n    let meta = store.getMeta();\r\n    if (meta && meta.gridrelation && meta.gridrelation[tableId]) {\r\n        let destEditAreaCode = meta.gridrelation[tableId].destEditAreaCode;\r\n        if (isArray(destEditAreaCode)) {\r\n            destEditAreaCode.forEach(editcode => {\r\n                isArray(key) &&\r\n                    key.forEach(code => {\r\n                        meta = setDestBrowseProps.call(this, editcode, meta, code, { disabled: !flag });\r\n                    });\r\n            });\r\n        }\r\n    }\r\n\r\n    store.setStore(['meta'], meta);\r\n}\r\n\r\nfunction setDestBrowseProps(destBrowseAreaCode, meta, code, props) {\r\n    let items = meta[destBrowseAreaCode] && meta[destBrowseAreaCode].items;\r\n    if (isArray(items)) {\r\n        let itemIndex = items.findIndex(ele => ele.attrcode === code);\r\n        if (itemIndex !== -1) {\r\n            items[itemIndex] = {\r\n                ...items[itemIndex],\r\n                ...props,\r\n            };\r\n        }\r\n    }\r\n    return meta;\r\n}\r\n/**\r\n * 设置列的显示性\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {object} data\r\n */\r\nexport function setColVisibleByKey(tableId, data) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n\r\n    if (isObject(data)) {\r\n        let hideKeys = data.hideKeys;\r\n        let showKeys = data.showKeys;\r\n\r\n        let meta = store.getMeta();\r\n        //let mainAreaMeta = meta[tableId];\r\n        let destBrowseAreaCode = '';\r\n        let destEditAreaCode = [];\r\n        if (meta.gridrelation && meta.gridrelation[tableId]) {\r\n            //下拉模板\r\n            destBrowseAreaCode = meta.gridrelation[tableId].destBrowseAreaCode;\r\n            //侧拉模板\r\n            destEditAreaCode = meta.gridrelation[tableId].destEditAreaCode;\r\n        }\r\n\r\n        //设置隐藏\r\n        if (isArray(hideKeys) && hideKeys.length) {\r\n            hideKeys.forEach(code => {\r\n                store.setColumn(tableId, { [code]: { visible: false } }, false);\r\n                if (destBrowseAreaCode) {\r\n                    meta = setDestBrowseProps.call(this, destBrowseAreaCode, meta, code, { visible: false });\r\n                }\r\n                if (isArray(destEditAreaCode) && destEditAreaCode.length) {\r\n                    destEditAreaCode.forEach(editcode => {\r\n                        meta = setDestBrowseProps.call(this, editcode, meta, code, { visible: false });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        //设置显示\r\n        if (isArray(showKeys) && showKeys.length > 0) {\r\n            showKeys.forEach(code => {\r\n                store.setColumn(tableId, { [code]: { visible: true } }, false);\r\n                if (destBrowseAreaCode) {\r\n                    meta = setDestBrowseProps.call(this, destBrowseAreaCode, meta, code, { visible: true });\r\n                }\r\n                if (isArray(destEditAreaCode) && destEditAreaCode.length > 0) {\r\n                    destEditAreaCode.forEach(editcode => {\r\n                        meta = setDestBrowseProps.call(this, editcode, meta, code, { visible: true });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        // 统一更新表格\r\n        store.setStore(['meta'], meta);\r\n    }\r\n}\r\n\r\n/**\r\n * 批量修改某列数据\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {array} colArr\r\n */\r\nexport function setColsValue(tableId, colArr) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    let rows = getAllRows.call(this, tableId);\r\n    if (rows.length) {\r\n        rows = rows.map(item => {\r\n            if (item.status === ROW_STATUS.origin) item.status = ROW_STATUS.edit;\r\n            return item;\r\n        });\r\n        if (isArray(colArr) && colArr.length) {\r\n            colArr.forEach(item => {\r\n                let { key, data = {} } = item;\r\n                store.setColumn(tableId, { [key]: data }, false);\r\n            });\r\n        }\r\n    }\r\n\r\n    store.refresh();\r\n}\r\n\r\n/**\r\n * 打开侧拉\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string} type\r\n * @param {object} record\r\n * @param {number} index\r\n * @param {function} callback\r\n * @param {boolean} flag\r\n */\r\nexport function openModel(tableId, type = 'browse', record, index, callback, flag = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    let meta = store.getMeta();\r\n    let destEditAreaCode = [];\r\n    if (meta.gridrelation && meta.gridrelation[tableId]) {\r\n        destEditAreaCode = meta.gridrelation[tableId].destEditAreaCode;\r\n    }\r\n    let hideModel = destEditAreaCode.every(editAreaCode => !meta[editAreaCode].areaVisible);\r\n    if (hideModel) {\r\n        //TODO\r\n        toast({\r\n            color: 'danger',\r\n            groupOperation: true,\r\n            isNode: true,\r\n            //TextArr: [json['table0022'], json['table0023'], json['table0024']],\r\n            // 无内容，模板中该内容已被隐藏\r\n            // groupOperationMsg: [json['table0032']],\r\n            mark: 'card-table-toastx',\r\n        });\r\n        return;\r\n    }\r\n    store.showSideBox(type, record, index);\r\n    isFunction(callback) && callback();\r\n\r\n    //定位到当前编辑行\r\n    //focusRowByIndex(tableId, index)\r\n}\r\n\r\n/**\r\n * 关闭侧拉\r\n * @author renyjk\r\n * @param {string} tableId\r\n */\r\nexport function closeModel(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    store.closeSideBox();\r\n}\r\n\r\n/**隐藏列\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string || array} key\r\n */\r\nexport function hideColByKey(tableId, key) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    if (isString(key)) key = [key];\r\n    key.forEach(code => {\r\n        store.setColumn(tableId, { [code]: { visible: false } }, false);\r\n    });\r\n\r\n    // 统一更新一次\r\n    store.refresh();\r\n}\r\n\r\n/**设置列属性\r\n * @author renyjk\r\n * @param {string} tableId\r\n */\r\nexport function setColumn(tableId, value, isShouldUpdate) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n\r\n    store.setColumn(tableId, value, isShouldUpdate);\r\n    // store.setColumn(tableId, { [code]: { visible: false } }, false);\r\n}\r\n\r\n/**显示列\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string || array} key\r\n */\r\nexport function showColByKey(tableId, key) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    if (isString(key)) key = [key];\r\n    key.forEach(code => {\r\n        store.setColumn(tableId, { [code]: { visible: true } }, false);\r\n    });\r\n\r\n    // 统一更新一次\r\n    store.refresh();\r\n}\r\n\r\n/**获取表格某列数据\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string} key\r\n * @param {boolean} flag  增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n *\r\n * flag参数好像没有用 ?? TODO\r\n *\r\n * @param {boolean} isDel  是否获得删除行的数据\r\n */\r\nexport function getColValue(tableId, key, flag = false, isDel = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    let rows = getAllRows.call(this, tableId);\r\n    let newData = [];\r\n    rows.forEach(item => {\r\n        if (!isDel) {\r\n            if (item.status !== ROW_STATUS.delete) {\r\n                newData.push(item.values[key]);\r\n            }\r\n        } else {\r\n            newData.push(item.values[key]);\r\n        }\r\n    });\r\n    return JSON.parse(JSON.stringify(newData));\r\n}\r\n\r\n/**\r\n * 设置表格某列为同一个数据\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string} key\r\n * @param {object} obj\r\n */\r\nexport function setColValue(tableId, key, { display, value, scale }) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    let rows = getAllRows.call(this, tableId);\r\n\r\n    rows = rows.map(item => {\r\n        const { rowid, status } = item;\r\n        // 已经被删除的行不处理\r\n        if (status == ROW_STATUS.delete) {\r\n            return item;\r\n        }\r\n        if (status == ROW_STATUS.origin) {\r\n            item.status = ROW_STATUS.edit;\r\n        }\r\n        if (!isObject(item.values[key])) {\r\n            item.values[key] = {};\r\n        }\r\n        if (!isUndefined(value)) {\r\n            item.values[key].value = value;\r\n            // 给新复制的行存旧值\r\n            saveChangedRowsOldValue.call(this, tableId, rowid, key, value);\r\n        }\r\n        !isUndefined(display) && (item.values[key].display = display);\r\n        !isUndefined(scale) && (item.values[key].scale = scale);\r\n        return item;\r\n    });\r\n\r\n    store.setData({ data: rows });\r\n}\r\n\r\n/**\r\n * TODO expandedRowKeys待处理\r\n * 最大化多表中表体卡片列表\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {boolean} flag\r\n * @param {array} expandedRowKeys\r\n */\r\nexport function openListView(tableId, flag, expandedRowKeys) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    store.openListView(flag);\r\n}\r\n\r\n/**\r\n * 最大化多表中表格\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {boolean} flag\r\n */\r\nexport function openMaxTable(tableId, flag) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    store.openMaxView(flag);\r\n}\r\n\r\n/**\r\n * 获取表格的最大化状态\r\n * @author renyjk\r\n * @param {string} tableId\r\n */\r\nexport function isMaxView(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    return store.isMaxView();\r\n}\r\n\r\n/**\r\n  根据key键获取模板中数据\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string} key\r\n * @param {boolean} flag 增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n */\r\nexport function getMetaValByKey(tableId, key, flag = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    let items = store.getMeta()[tableId].items;\r\n    if (isArray(items)) {\r\n        let temp = [];\r\n        if (flag) {\r\n            temp = _getAllItem(items).filter(item => item.attrcode === key);\r\n        } else {\r\n            temp = items.filter(item => item.attrcode === key);\r\n        }\r\n        return temp.length > 0 ? temp[0] : null;\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n  根据key键获取模板中数据\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string} key\r\n * @param {boolean} flag 增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n */\r\nexport function setColEditableByKey(tableId, key, flag = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    let meta = store.getMeta();\r\n    let items = meta && meta[tableId] && meta[tableId].items;\r\n    let destEditAreaCode =\r\n        meta.gridrelation && meta.gridrelation[tableId] && meta.gridrelation[tableId].destEditAreaCode;\r\n    if (isArray(items)) {\r\n        // 处理多表头\r\n        let fn = (items, key) => {\r\n            items.map(item => {\r\n                if (item.children) {\r\n                    fn(item.children, key);\r\n                }\r\n                if (item.attrcode === key || key.includes(item.attrcode)) {\r\n                    item.disabled = flag;\r\n                    /*兼容设置侧拉框同字段的编辑性start 米明天试试，看看好使不 之后在来完善先注释掉*/\r\n                    if (destEditAreaCode) {\r\n                        destEditAreaCode.forEach(eve => {\r\n                            //便利侧拉模版数组里的每项，所对应的模版\r\n                            meta[eve].items.forEach(formItem => {\r\n                                if (formItem.attrcode === item.attrcode) {\r\n                                    formItem.disabled = flag;\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                    /*兼容设置侧拉框同字段的编辑性end*/\r\n                }\r\n            });\r\n        };\r\n        fn(items, key);\r\n        store.setMeta(meta);\r\n    }\r\n}\r\n/**32\r\n * 共享  郭扬让加的，他们现在再用\r\n * 刷新表格高度  这是特殊场景使用，一般是表格上方部分，高度变化，表格需要不断适应时使用\r\n */\r\nexport function updateTableHeight() {\r\n    PubSub.publish(OTHERCOMPLETE, true);\r\n}\r\n\r\n/**\r\n * 根据index获取侧拉数据\r\n * @param  tableId   meta的id号\r\n * @param  index     行序号-1，从0开始\r\n */\r\nexport function getModalDataByIndex(tableId, index) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    let allRows = getAllRows.call(this, tableId);\r\n    const editRows = _getEditRows(store, tableId);\r\n    const editRowsCode = editRows.map(item => item.attrcode);\r\n    let result = {};\r\n    if (allRows[index] && allRows[index].values) {\r\n        let values = allRows[index].values;\r\n        for (let key in values) {\r\n            if (editRowsCode.includes(key)) {\r\n                result[key] = values[key];\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * 设置侧拉某控件显隐\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string} key\r\n * @param {boolean} flag\r\n */\r\nexport function showEditAreaKey(tableId, key, flag = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    let meta = store.getMeta();\r\n    const editRows = _getEditRows(store, tableId);\r\n\r\n    let [isStr, isArr] = [typeof key === 'string', isArray(key)];\r\n    if (editRows && (isStr || isArr)) {\r\n        editRows.map(elem => {\r\n            if (isStr && elem.attrcode === key) {\r\n                elem.visible = flag;\r\n            }\r\n            if (isArr && key.includes(elem.attrcode)) {\r\n                elem.visible = flag;\r\n            }\r\n        });\r\n        store.setMeta(meta);\r\n    }\r\n}\r\n\r\n/**\r\n * 控制主表的收起展开\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {boolean} flag\r\n */\r\nexport function toggleCardTable(tableId, flag = false) {\r\n    tableId = isArray(tableId) ? tableId : [tableId];\r\n    tableId.forEach(item => {\r\n        let store = existenceCheck.call(this, item);\r\n        if (store) {\r\n            let tableVisible = store.getStore(\"tableSwitch\").tableVisible;\r\n            store.toggleTableShow(flag);\r\n            if (tableVisible !== flag) {\r\n                isFunction(store.onHeadAngleToggle) &&\r\n                    store.onHeadAngleToggle({ ...this.props, ...this.output }, item, flag);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n   统一给表体和侧拉添加参照顾虑\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {object} data\r\n * data 就是要添加参照过滤的字段和对应参照过滤的数据格式 { name: QueryCondition, age: QueryCondition }\r\n */\r\nexport function setQueryCondition(tableId, data, shouldForceUpdate = true) {\r\n    const keys = Object.keys(data); //所要设置参照过滤的字段数组\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    let meta = store.getMeta();\r\n    let gridrelation = meta.gridrelation[tableId]; //模版配置项\r\n    gridrelation.tabRelation.forEach(tabItem => {\r\n        //遍历tab页的每个表体的对应字段的参照过滤\r\n        meta[tabItem].items.forEach(item => {\r\n            keys.forEach(key => {\r\n                const { attrcode, children } = item;\r\n                if (!isUndefined(children)) {\r\n                    //判断和并列的情况\r\n                    children.forEach(child => {\r\n                        const { attrcode } = child;\r\n                        if (key === attrcode) {\r\n                            item.queryCondition = data[key];\r\n                        }\r\n                    });\r\n                } else {\r\n                    if (key === attrcode) {\r\n                        item.queryCondition = data[key];\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    });\r\n    if (isArray(gridrelation.destEditAreaCode)) {\r\n        gridrelation.destEditAreaCode.forEach(formItem => {\r\n            //遍历侧拉的每个部分的对应字段的参照过滤\r\n            meta[formItem].items.forEach(item => {\r\n                keys.forEach(key => {\r\n                    if (key === item.attrcode) {\r\n                        item.queryCondition = data[key];\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    store.setMeta(meta, tableId, shouldForceUpdate && !this.isUpdatePage);\r\n}\r\n\r\n//---------------- 孙表API ----------------//\r\n/**\r\n * 设置孙表数据\r\n * @author renyjk\r\n */\r\nexport function setGrandTableData({ rowid, parentId, tableId, data, shouldForceUpdate, callback, isCache = true, isTop = false, isDiffUpdate = false }) {\r\n    let childStore = existenceCheck.call(this, tableId);\r\n    if (!childStore) return;\r\n\r\n    let parentStore = existenceCheck.call(this, parentId);\r\n    if (!parentStore) return;\r\n    parentStore.setGrandTableData({ tableId, rowid, data, isCache, shouldForceUpdate, isDiffUpdate });\r\n    isFunction(callback) && callback({ ...this.props, ...this.output }, tableId);\r\n}\r\n\r\n/**\r\n * 获取全部孙表数据\r\n * @author renyjk\r\n */\r\nexport function getAllGrandData({ parentId, isDeepCopy }) {\r\n    let parentStore = existenceCheck.call(this, parentId);\r\n    if (!parentStore) return;\r\n    return parentStore.getAllGrandData(isDeepCopy);\r\n}\r\n\r\nexport function getViewGrandData({ parentId, view }) {\r\n    let parentStore = existenceCheck.call(this, parentId);\r\n    if (!parentStore) return;\r\n    return parentStore.getViewGrandData(view);\r\n}\r\n\r\n/**\r\n * 删除完整的孙表数据中的数据\r\n * @author renyjk\r\n * parentId 父表id\r\n * rowidList rowid数组\r\n * delAll 是否全部删除\r\n */\r\nexport function delCacheGrandData({ parentId, rowidList = [], delAll = false }) {\r\n    let parentStore = existenceCheck.call(this, parentId);\r\n    if (!parentStore) return;\r\n    parentStore.deleteGrandData({ rowidList, delAll });\r\n}\r\n\r\n/**\r\n * 通过pkcode获取子表对应的rowid\r\n * @author renyjk\r\n */\r\nexport function getRowIdFromPkcode({ parentId, plcodeValue }) {\r\n    let parentStore = existenceCheck.call(this, parentId);\r\n    if (!parentStore) return;\r\n    let pkcode = parentStore.getStore('cardTable_pkcode');\r\n\r\n    let data = getAllRows.call(this, parentId);\r\n    let rowid = '';\r\n    if (data) {\r\n        data.forEach(row => {\r\n            if (row.values[pkcode] && row.values[pkcode].value === plcodeValue) {\r\n                rowid = row.rowid;\r\n            }\r\n        });\r\n    }\r\n    return rowid;\r\n}\r\n\r\n//-------------------- 内部方法--------------------//\r\n/**\r\n * 拆解item项中有children的元素\r\n * @param  {Array}  items  传入的meta中items数组\r\n */\r\nfunction _getAllItem(items) {\r\n    if (!isArray(items)) return [];\r\n    let list = [];\r\n    let process = tree => {\r\n        tree.forEach(item => {\r\n            let { children, title, ...temp } = item;\r\n            if (!children) {\r\n                list.push(temp);\r\n            }\r\n            children && process(children);\r\n        });\r\n    };\r\n    process(items);\r\n    return list;\r\n}\r\n\r\n/**\r\n * 侧拉表单分组获取所有相关的items\r\n */\r\nfunction _getEditRows(store, tableId) {\r\n    let meta = store.getMeta();\r\n    let editTableId = meta.gridrelation.hasOwnProperty(tableId)\r\n        ? meta.gridrelation[tableId].destEditAreaCode ? meta.gridrelation[tableId].destEditAreaCode : []\r\n        : [];\r\n\r\n    // wangyang 强转数组\r\n    if (Object.prototype.toString.call(editTableId) !== '[object Array]') {\r\n        editTableId = Array(editTableId);\r\n    }\r\n\r\n    return editTableId.reduce((prev, editId) => {\r\n        const item = meta[editId] ? meta[editId].items : [];\r\n        prev = [...prev, ...item];\r\n        return prev;\r\n    }, []);\r\n}\r\n\r\n/**\r\n * 存储自定义的数据, 用于自定义列的筛选\r\n */\r\n\r\nexport function saveFilterCustomColData(tableId, { attrcode, rowId, value }) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setCache(['customColData', attrcode, rowId], value);\r\n}\r\n\r\n/****74 获得当前行****/\r\nexport function getSideParentCurrentIndex(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    return store.getStore(['tableSideBox', 'index']);\r\n}\r\n\r\n/**68\r\n * 获取行的状态\r\n * add by  zhangheng 18/06/21\r\n * @param {*} tableId 表格id\r\n * @param {*} index 行索引   数组或者数字\r\n */\r\nexport function updateTable(tableIds, autoFocus) {\r\n    tableIds = Array.isArray(tableIds) ? tableIds : [tableIds];\r\n    tableIds.forEach(tableId => {\r\n        //   let cell = autoFocus && getCellDom(tableId);\r\n        //   let cellIdentity = cell && getCellIdentity(cell);\r\n\r\n        let store = existenceCheck.call(this, tableId);\r\n        if (!store) {\r\n            return;\r\n        }\r\n        //store.setTableProps('focusIndex', -1, false);\r\n        let data = store.getData();\r\n        store.saveRowsOldValue({ rows: data });\r\n        let activeTableCode = store.getStore('activeTableCode');\r\n        //若是多页签表格 只更新当前激活页签对应table 组件\r\n        if (activeTableCode === tableId) {\r\n            store.refresh();\r\n        }\r\n\r\n\r\n        // lastCellItemFocus(cellIdentity);\r\n    });\r\n}\r\n\r\n// liuming excel 新方法\r\nexport function updateAfterBatchChange(param) {\r\n    let { areaCode } = param;\r\n    let store = existenceCheck.call(this, areaCode);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.updateAfterBatchChange(this, param);\r\n}\r\n//内部使用，不让业务组用\r\nexport function updateAndAddRows(param) {\r\n    let { tableId } = param;\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store._updateAndAddRows(param);\r\n}\r\n\r\n\r\n/**\r\n *  根据wensocket推送值，更新表格数据\r\n * refreshData\r\n */\r\n\r\nexport function updateDataByRefresh(tableId, pkname, refreshData, saga_errormesg) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    if (Array.isArray(refreshData)) {\r\n        let data = getAllRows.call(this, tableId, false);\r\n        let refreshLen = refreshData.length;\r\n        data.map((item, index) => {\r\n            let values = item.values;\r\n            for (let i = 0; i < refreshLen; i++) {\r\n                //找到相应行,更新对应字段的value\r\n                if (values[pkname] && values[pkname].value === refreshData[i][pkname]) {\r\n                    for (let pop in refreshData[i]) {\r\n                        if (values[pop]) {\r\n                            values[pop].value = refreshData[i][pop];\r\n                        } else {\r\n                            values[pop] = { value: refreshData[i][pop] };\r\n                        }\r\n\r\n                        //有错误信息时，将错误信息数据放表格行\r\n                        if (pop === 'saga_status' && refreshData[i][pop] === '1' && saga_errormesg) {\r\n                            values.saga_errormesg = saga_errormesg;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            return item;\r\n        });\r\n        store.setData({ data });\r\n    }\r\n}\r\n\r\nexport function refresh(tableId) {\r\n    const store = existenceCheck.call(this, tableId);\r\n    if (store) {\r\n        store.anoterTable()\r\n    }\r\n\r\n}","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-07-15 20:27:32\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2020-08-01 15:29:29\r\n */\r\nimport CardTable from \"@platform/card-table\";\r\nimport * as cardTableAPI from \"./compatible\";\r\n\r\n//console.log('CardTable----------------:', CardTable)\r\n\r\n//const useCardTable = CardTable.useCardTable;\r\n\r\n/**\r\n * 兼容旧版本创建表格方法\r\n * @param {string} mainCode 表格主区域编码\r\n * @param {object} config 表格业务配置\r\n */\r\n\r\nexport default function cardTableCompatible() {\r\n    this.register(\"cardTable\"); // 生成 this.cardTableDataSource[id]\r\n    return {\r\n        //store: useCardTable,\r\n        ...apiBindPage.call(this, cardTableAPI),\r\n    };\r\n}\r\n\r\nfunction apiBindPage(cardTableAPI) {\r\n    let res = {}\r\n    for (let pop of Object.keys(cardTableAPI)) {\r\n        res[pop] = cardTableAPI[pop].bind(this);\r\n    }\r\n    return res;\r\n}\r\n\r\ncardTableCompatible.component = CardTable;\r\ncardTableCompatible.displayName = \"CardTable\";\r\ncardTableCompatible.unfinished = [\"updateTable\", \"getTableItemData\", \"checkTableRequired\"];\r\n","import React from 'react';\r\nimport SimpleTable from '@platform/simple-table';\r\nimport { utils } from '@platform/table-core';\r\nimport { ViewModel, linkTo, PubSub, getSafeRandom } from '@platform/api';\r\nconst { useSimpleTable } = SimpleTable;\r\n\r\nconst { isObject, warningOnce, isUndefined, isWrong, getPageSizeStorage } = utils;\r\n\r\n// 页面其他区域变化表格重新计算标识\r\nconst OTHERCOMPLETE = 'otherComplete';\r\nconst BEFORECOMPLETE = 'beforeAreaChangeComplete';\r\n\r\n/** 3   getTablePageInfo    获取分页信息**/\r\n/** 4   openModel    显示录入表单**/\r\n/** 5   closeModel    关闭录入表单**/\r\n/** 6   setTableRender    设置某一列的render**/\r\n/**7    setColScale 设置列精度******************\r\n这个结构是根据崔松杰的方法返回的，又问题可以问问他。。。\r\n list数据结构   [{areacode: 'tableid', filedcode: 'colkey', scale: \"2\"}, ....]**/\r\n/**8    checkVisible 检查显示******************/\r\n/** 9   getAllTableData    获取表格全数据方法**/\r\n/** 10   setTableValueByKeyAndRecord    设置表格数据**/\r\n/** 11   hideColByKey    隐藏列**/\r\n/** 12   showColByKey    显示列**/\r\n/** 13   getCheckedRows    获取选中行**/\r\n/** 14   selectAllRows    选中所有行**/\r\n/** 15   reverseSelected    反转所有行的选中状态**/\r\n/** 16   deleteTableRowsByIndex    通过行index删除行**/\r\n/** 17   deleteTableRowsByRowId    通过行RowId删除行**/\r\n/** 18   addTableRow    通过index新增行**/\r\n/** 19   setTableValueBykey    通过key设置单元格的值**/\r\n/** 20   setTableValueDisabled    通过key设置表格列的编辑性**/\r\n/** 21   setTableValueRequired    通过key设置列是否必输**/\r\n/** 22   focusTableRowByIndex    通过index聚焦行**/\r\n/** 23   updateDataByIndexs    通过index更新多行的数据**/\r\n/** 24   setValByKeyAndRowId    根据rowid设置表格某行某个字段值**/\r\n/** 25   selectTableRows    设置某些行的选中状态**/\r\n/** 26   getPks    获取某页的pks**/\r\n/** 27   hasCacheData    判断列表是否有缓存数据**/\r\n/** 28   deleteCacheId    删除 allpks**/\r\n/** 29   addCacheId    新增 allpks**/\r\n/** 30   updateTableData     通过rowid更新表格行数据**/\r\n/** 31   setClickRowIndex     设置当前点击行**/\r\n/** 32   getClickRowIndex     获取当前点击行**/\r\n/** 33   setValByKeyAndIndex     根据index设置表格某行某个字段值**/\r\n/** 34   updateDiffDataByIndex     差异更新（王策）**/\r\n/** 35   updateTableHeight      共享  郭扬让加的，他们现在再用\r\n * 刷新表格高度  这是特殊场景使用，一般是表格上方部分，高度变化，表格需要不断适应时使用）**/\r\n/** 36   getSortParam     获取当前表格,排序信息包括当前是多列还是单列排序, 排序的字段,和排序顺序\r\n * 这是产品李聪慧让加的, 为了解决单据打印时，列表对中字段排序产生的问题**/\r\n/** 37   updateDataByRefresh      根据wensocket推送值，更新表格数据**/\r\n\r\nfunction existenceCheck(id) {\r\n    let metaStore = this.tableDataSource[id];\r\n    if (!metaStore) {\r\n        warningOnce(false, `所操作的表格中无ID为${id}的数据`);\r\n        return;\r\n    }\r\n    return metaStore;\r\n}\r\n/** 1   createsimpleTable    创建表格**/\r\nexport function createSimpleTable(moduleId, config = {}) {\r\n    let pageScope = this,\r\n        store = pageScope.tableDataSource[moduleId];\r\n    if (!store) {\r\n        store = useSimpleTable();\r\n        // 如果有缓存值 则做一下  Store 的赋值操作  把setTableData里的else操作提到这里了\r\n        if (pageScope.myTableData[moduleId]) {\r\n            // store.setTableData(pageScope.myTableData[moduleId]); // TODO Check\r\n            store.setTableProps('focusIndex', -1, false);\r\n            delete pageScope.myTableData[moduleId];\r\n        }\r\n    }\r\n    let { onRowClick, onRowDoubleClick, selectedChange, onSelected, onSelectedAll, handlePageInfoChange, onBatchSelected, tableModelConfirm, ...others } = config;\r\n\r\n    others.onBatchSelected = !onBatchSelected ? false : rows => {\r\n        return onBatchSelected && onBatchSelected({\r\n            ...pageScope.props,\r\n            ...pageScope.output,\r\n        }, moduleId, rows);\r\n    };\r\n    //modelDatas\r\n    let meta = store.getMeta(moduleId);\r\n    if (meta) {\r\n        store.setStore(['modelDatas', 'modelColumn'], meta);\r\n    }\r\n\r\n    others.high_filter = others.high_filter || { alloweFilter: others.alloweFilter };\r\n    // console.log(config);\r\n\r\n    return (\r\n        <SimpleTable\r\n            store={store}\r\n            name={moduleId}\r\n            output={pageScope.output}\r\n            afterLangload={json => {\r\n                // console.log(this, json);\r\n                pageScope.tableDataSource._langJson = json || {};\r\n            }}\r\n            onRowClick={(record, outputIndex, e) => {\r\n                if (onRowClick) {\r\n                    return onRowClick.call(\r\n                        pageScope,\r\n                        { ...pageScope.props, ...pageScope.output },\r\n                        moduleId,\r\n                        record,\r\n                        outputIndex,\r\n                        e,\r\n                    );\r\n                }\r\n            }}\r\n            onRowDoubleClick={(record, outputIndex, e) => {\r\n                if (onRowDoubleClick) {\r\n                    return onRowDoubleClick.call(\r\n                        pageScope,\r\n                        record,\r\n                        outputIndex,\r\n                        { ...pageScope.props, ...pageScope.output },\r\n                        e,\r\n                    );\r\n                }\r\n            }}\r\n            onSelected={(tableId, record, outputIndex, selected) => {\r\n                if (onSelected) {\r\n                    onSelected.call(\r\n                        pageScope,\r\n                        { ...pageScope.props, ...pageScope.output },\r\n                        tableId,\r\n                        record,\r\n                        outputIndex, //outputIndex\r\n                        selected,\r\n                    );\r\n                }\r\n            }}\r\n            selectedChange={(tableId, newLen, oldLen) => {\r\n                if (selectedChange) {\r\n                    selectedChange.call(\r\n                        pageScope,\r\n                        { ...pageScope.props, ...pageScope.output },\r\n                        tableId,\r\n                        newLen,\r\n                        oldLen,\r\n                    );\r\n                }\r\n            }}\r\n            onSelectedAll={(tableId, checkedAll, len) => {\r\n                if (onSelectedAll) {\r\n                    onSelectedAll.call(\r\n                        pageScope,\r\n                        { ...pageScope.props, ...pageScope.output },\r\n                        tableId,\r\n                        checkedAll,\r\n                        len,\r\n                    );\r\n                }\r\n            }}\r\n            onPageInfoChange={(pks, total) => {\r\n                if (handlePageInfoChange) {\r\n                    handlePageInfoChange({ ...pageScope.props, ...pageScope.output }, config, pks, total);\r\n                }\r\n            }}\r\n            tableModelConfirm={(data, type) => {\r\n                if (tableModelConfirm) {\r\n                    tableModelConfirm({ ...pageScope.props, ...pageScope.output }, data, type);\r\n                }\r\n            }}\r\n            onCellHyperlinkTo={(record, attrcode, value, tableId) => {\r\n                linkTo(pageScope.state.meta.pageid, tableId, attrcode, value.value);\r\n            }}\r\n            config={others}\r\n        />\r\n    );\r\n}\r\n/** 2   setAllTableData    给表格设置所有数据**/\r\nexport function setAllTableData(moduleId, data, isTop = true) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    let prePageSize = getPageSizeStorage(this.state.meta, moduleId);\r\n    if (!store) {\r\n        this.myTableData[moduleId] = data;\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 处理筛选状态下的情况\r\n     * 清空的表格筛选标志\r\n     * 清空筛选状态下的表格全数据\r\n     * 退出筛选状态\r\n     */\r\n    // TODO 筛选\r\n    store.setStore('filterReset', true, false, () => {\r\n        store.setStore('filterReset', false, false);\r\n    });\r\n    store.resetFilter(moduleId, false);\r\n\r\n    let allpks = store.getStore(['allpks']),\r\n        alltss = store.getStore(['alltss']),\r\n        rows = [],\r\n        pageInfo = store.getStore(['pageInfo']);\r\n    //pageinfo\r\n    if (data.hasOwnProperty('pageInfo') && !isWrong(data.pageInfo)) {\r\n        // 前端重置后端返回的页码，初次为0，应该改为1，有问题在看看\r\n        pageInfo = data.pageInfo;\r\n        pageInfo.pageIndex = Number(data.pageInfo.pageIndex) + 1;\r\n    } else if (data.rows && data.rows.length == 0) {\r\n        pageInfo = {\r\n            pageSize: prePageSize,\r\n            pageIndex: 1,\r\n            total: 0,\r\n            totalPage: 1,\r\n        };\r\n    } else if (!(allpks.length > 0)) {\r\n        pageInfo = {\r\n            pageSize: prePageSize,\r\n            pageIndex: 1,\r\n        };\r\n    }\r\n    store.setStore('pageInfo', pageInfo, false);\r\n    //allpks\r\n    if (data.allpks) {\r\n        allpks = data.allpks;\r\n    } else if (data.rows && data.rows.length == 0) {\r\n        allpks = []\r\n    }\r\n    store.setStore('allpks', allpks, false);\r\n    //alltss\r\n    if (data.alltss) {\r\n        alltss = data.alltss;\r\n    }\r\n    store.setStore('alltss', alltss, false);\r\n    //props\r\n    if (isTop) {\r\n        let props = store.getStore('props');\r\n        props.focusIndex = 0;\r\n        store.setStore('props', props, false);\r\n    }\r\n    //   checkinfo \r\n    let crossPageSelectIndex = store.getStore(['checkInfo', 'crossPageSelectIndex'])\r\n    let checkedAllpage = store.getStore(['checkInfo', 'checkedAllpage'])\r\n    if (crossPageSelectIndex.size) {\r\n        let selectPk = new Set(crossPageSelectIndex);\r\n        let newIndex = new Set()\r\n        selectPk.forEach(pk => {\r\n            if (allpks.indexOf(pk) !== -1) {\r\n                newIndex.add(pk)\r\n            }\r\n        })\r\n        crossPageSelectIndex = newIndex\r\n    }\r\n    let checkInfo = {\r\n        checkedAll: false, //当前页全选标志\r\n        indeterminate: false, //半选标志\r\n        selectIndex: new Set(), //选中行\r\n        disabledAll: false,\r\n        checkedAllpage, //所有页全选\r\n        crossPageSelectIndex,\r\n    }\r\n    store.setStore(['checkInfo'], checkInfo, false);\r\n\r\n    //排序待写 清空排序\r\n    let arrayColumns = store.getArrayMeta(moduleId);\r\n    arrayColumns && store.clearSortStatus({ columns: arrayColumns });\r\n\r\n    //筛选待写\r\n    //rows\r\n    rows = data.rows.map(e => {\r\n        e.rowId = e.rowId || String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12);\r\n        return e;\r\n    });\r\n\r\n    store.setData(rows, true, () => {\r\n        // 聚焦完成之后重置 避免一更新  直接跳到第一行\r\n        store.setTableProps('focusIndex', -1, false);\r\n        store.setStore('filterReset', false, false);\r\n    });\r\n\r\n    // 跨页全选\r\n    let config = store.getConfig()\r\n    let { crossPageSelect, pkname } = config\r\n    if (crossPageSelect && pkname) {\r\n        if (checkedAllpage) {\r\n            store.setSelect(undefined, 'allpage')\r\n        } else {\r\n            let rows = store.getData()\r\n            let rowIdArr = []\r\n            rows.forEach(row => {\r\n                if (!row.values[pkname]) {\r\n                    console.error(`行数据中没有pkname为${pkname}的value`)\r\n                    console.log(row)\r\n                    return\r\n                }\r\n                let pk = row.values[pkname].value\r\n                if (crossPageSelectIndex.has(pk)) {\r\n                    rowIdArr.push(row['rowId'])\r\n                }\r\n            })\r\n\r\n            store.setSelect(rowIdArr, 'set')\r\n        }\r\n\r\n    }\r\n}\r\n/** 3   getTablePageInfo    获取分页信息**/\r\nexport function getTablePageInfo(moduleId) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    let prePageSize = getPageSizeStorage(this.state.meta, moduleId);\r\n    if (!store) {\r\n        return { pageIndex: 0, pageSize: prePageSize };\r\n    }\r\n    let pageInfo = store.getStore('pageInfo');\r\n\r\n    let { pageIndex = 0, pageSize = prePageSize } = pageInfo;\r\n    pageSize = Number(pageSize);\r\n    return {\r\n        pageIndex: pageIndex > 0 ? pageIndex - 1 : 0,\r\n        pageSize,\r\n    };\r\n}\r\n\r\n/** 4   openModel    显示录入表单**/\r\nexport function openModel(moduleId, type, record, index) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.openModal(type, record, index);\r\n}\r\n\r\n/** 5   closeModel    关闭录入表单**/\r\nexport function closeModal(moduleId) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.closeModel();\r\n}\r\n\r\n/** 6   setTableRender    设置某一列的render**/\r\nexport function setTableRender(moduleId, key, render) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setColumn(moduleId, key, { render });\r\n}\r\n/**7    setColScale 设置列精度******************\r\n这个结构是根据崔松杰的方法返回的，又问题可以问问他。。。\r\n list数据结构   [{areacode: 'tableid', filedcode: 'colkey', scale: \"2\"}, ....]**/\r\nexport function setColScale(list) {\r\n    list.forEach(eve => {\r\n        const { areacode, fieldcode, scale } = eve;\r\n\r\n        let store = existenceCheck.call(this, areacode);\r\n        if (!store) {\r\n            return;\r\n        }\r\n        let meta = store.getMeta();\r\n        meta[areacode].items.forEach(item => {\r\n            if (item.attrcode === fieldcode) {\r\n                item.scale = scale;\r\n            }\r\n        });\r\n        store.setMeta(meta);\r\n    });\r\n}\r\n/**8    checkVisible 检查显示******************/\r\nexport function checkVisible(moduleId, colKey) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let isVisible = false;\r\n    let items = store.getMeta(moduleId);\r\n    items.forEach(eve => {\r\n        //获取合计行的列配置\r\n        const { visible, attrcode, children } = eve;\r\n        if (!isUndefined(children)) {\r\n            //判断和并列的情况\r\n            children.forEach(item => {\r\n                const { visible } = item;\r\n                if (colKey === attrcode && visible) {\r\n                    isVisible = true;\r\n                }\r\n            });\r\n        } else if (colKey === attrcode && visible) {\r\n            isVisible = true;\r\n        }\r\n    });\r\n    return isVisible;\r\n}\r\n/** 9   getAllTableData    获取表格全数据方法**/\r\nexport function getAllTableData(moduleId, flag = true) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let data = {\r\n        pageInfo: store.getStore('pageInfo'),\r\n        rows: store.getStore('rows'),\r\n        model: store.getStore('modelDatas', 'showModal'),\r\n        operType: store.getStore('modelDatas', 'operType'),\r\n        checkedAll: store.getStore('checkInfo', 'checkedAll'),\r\n        allpks: store.getStore('allpks'),\r\n    };\r\n    return flag ? JSON.parse(JSON.stringify(data)) : data;\r\n}\r\n/** 10   setTableValueByKeyAndRecord    设置表格数据**/\r\n//这个方法好像没有暴露出去，不知道有什么用，报错再说\r\nexport function setTableValueByKeyAndRecord(moduleId, record, dist) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let newRecord = { ...record, ...dist };\r\n    let id = record.attrcode.value;\r\n    let rows = store.getStore('rows');\r\n    rows.map(item => {\r\n        if (item.values.attrcode && id == item.values.attrcode.value) {\r\n            item.values = { ...newRecord };\r\n        }\r\n    });\r\n\r\n    store.setData(rows);\r\n}\r\n/** 11   hideColByKey    隐藏列**/\r\nexport function hideColByKey(moduleId, key) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.showColumn(moduleId, key, false);\r\n}\r\n/** 12   showColByKey    显示列**/\r\nexport function showColByKey(moduleId, key) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.showColumn(moduleId, key, true);\r\n}\r\n/** 13   getCheckedRows    获取选中行**/\r\nexport function getCheckedRows(moduleId) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let selectIndex = store.getStore(['checkInfo', 'selectIndex']);\r\n    let rows = store.getStore(['rows']);\r\n    //兼容修改数据selected true的情况\r\n    if (selectIndex.size === 0 && rows.length) {\r\n        rows.forEach(row => {\r\n            if (row.selected) {\r\n                selectIndex.add(row.rowId)\r\n            }\r\n        })\r\n    }\r\n    let checkRows = [];\r\n    let config = store.getConfig();\r\n    let { crossPageSelect, pkname } = config;\r\n    if (crossPageSelect && pkname) {\r\n        let crossPageSelectIndex = store.getStore(['checkInfo', 'crossPageSelectIndex']);\r\n        let pageInfo = store.getStore(['pageInfo']);\r\n        let { pageSize } = pageInfo;\r\n        pageSize = Number(pageSize);\r\n        // pageIndex = Number(pageIndex);\r\n        // let currentPageStartIndex = pageSize * pageIndex - pageSize;\r\n        // let currentPageEndIndex = pageSize * pageIndex - 1;\r\n        let allpks = store.getStore(['allpks']);\r\n        let alltss = store.getStore(['alltss']);\r\n\r\n        let currentPagePkArr = []\r\n        rows.forEach(row => {\r\n            let pk = row.values[pkname].value\r\n            currentPagePkArr.push(pk)\r\n        })\r\n\r\n        crossPageSelectIndex.forEach(item => {\r\n            let row\r\n            let rowIndex = currentPagePkArr.indexOf(item)\r\n            if (rowIndex !== -1) {\r\n                let pkIndex = allpks.indexOf(item)\r\n                row = {\r\n                    data: rows[rowIndex],\r\n                    index: pkIndex % pageSize,\r\n                    pageIndex: Math.floor(pkIndex / pageSize),\r\n                }\r\n            } else {\r\n                let pkIndex = allpks.indexOf(item)\r\n                if (pkIndex !== -1) {\r\n                    row = {\r\n                        data: { pk: allpks[pkIndex], ts: alltss[pkIndex] },\r\n                        index: pkIndex % pageSize,\r\n                        pageIndex: Math.floor(pkIndex / pageSize),\r\n                    }\r\n                }\r\n            }\r\n            checkRows.push(row);\r\n\r\n        });\r\n    } else {\r\n        // 取过滤之后视图的数据来做操作\r\n        let data = store.getFilterData();\r\n        data.forEach((row, index) => {\r\n            if (selectIndex.has(row.rowId)) {\r\n                let checkRow = {\r\n                    data: row,\r\n                    index,\r\n                };\r\n                checkRows.push(checkRow);\r\n            }\r\n        });\r\n    }\r\n    return checkRows;\r\n}\r\n/** 14   selectAllRows    选中所有行**/\r\nexport function selectAllRows(moduleId, checked) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    //跨页全选\r\n    let config = store.getConfig();\r\n    let { crossPageSelect, pkname } = config;\r\n    if (crossPageSelect && pkname) {\r\n        if (checked) {\r\n            let allpks = store.getStore('allpks')\r\n            store.setStore(['checkInfo', 'crossPageSelectIndex'], new Set(allpks), false)\r\n        } else {\r\n            store.setStore(['checkInfo', 'crossPageSelectIndex'], new Set(), false)\r\n        }\r\n    }\r\n\r\n    if (checked) {\r\n        store.setSelect(undefined, 'all');\r\n    } else {\r\n        store.setSelect(undefined, 'clear');\r\n    }\r\n}\r\n/** 15   reverseSelected    反转所有行的选中状态**/\r\nexport function reverseSelected(moduleId) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setSelect(undefined, 'reverse');\r\n}\r\n/** 16   deleteTableRowsByIndex    通过行index删除行**/\r\nexport function deleteTableRowsByIndex(moduleId, index) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.deleteTableRows(index);\r\n}\r\n/** 17   deleteTableRowsByRowId    通过行RowId删除行**/\r\nexport function deleteTableRowsByRowId(moduleId, rowId) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.deleteTableRows(rowId, 'rowId');\r\n}\r\n/** 18   addRow    通过index新增行**/\r\nexport function addRow(moduleId, data, index) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.addTableRows(data.rows, index);\r\n}\r\n/** 19   setTableValueBykey    通过key设置单元格的值**/\r\nexport function setTableValueBykey(moduleId, key, data, type) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    if (type == 'refer') {\r\n        store.setStore(\r\n            ['modelDatas', 'record', key],\r\n            {\r\n                display: data.refname,\r\n                value: data.refpk,\r\n            },\r\n            true,\r\n        );\r\n    } else {\r\n        store.setStore(\r\n            ['modelDatas', 'record', key],\r\n            {\r\n                value: data,\r\n                display: null,\r\n            },\r\n            true,\r\n        );\r\n    }\r\n}\r\n\r\n/** 20   setTableValueDisabled    通过key设置表格列的编辑性**/\r\nexport function setTableValueDisabled(moduleId, key, flag) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setColumn(moduleId, key, { disabled: flag });\r\n}\r\n/** 21   setTableValueRequired    通过key设置列是否必输**/\r\nexport function setTableValueRequired(moduleId, key, flag) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setColumn(moduleId, key, { required: flag });\r\n}\r\n/** 22   focusRowByIndex    通过index聚焦行**/\r\nexport function focusRowByIndex(moduleId, index) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setTableProps('focusIndex', index, false);\r\n    store.setTableProps('currentIndex', index, true, () => {\r\n        store.setTableProps('focusIndex', -1, false);\r\n    });\r\n}\r\n/** 23   updateDataByIndexs    通过index更新多行的数据**/\r\nexport function updateDataByIndexs(moduleId, record) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let testDataType = Array.isArray(record);\r\n    if (testDataType) {\r\n        let tableData = store.getData();\r\n        let rowidArr = []\r\n        record.forEach(item => {\r\n            let { index, data } = item;\r\n            if (index < 0) {\r\n                console.error(`index =${index},小于0`)\r\n                return\r\n            }\r\n            if (isObject(data)) {\r\n                let row = tableData[index];\r\n                tableData[index] = Object.assign(row, data);\r\n                rowidArr.push(tableData[index].rowId)\r\n            }\r\n        });\r\n        //判断勾选\r\n        store.setData(tableData, false);\r\n        store.setSelect(rowidArr, 'delete') //解决NCC-41690\r\n        return false;\r\n    }\r\n}\r\n/** 24   setValByKeyAndRowId    根据rowid设置表格某行某个字段值**/\r\nexport function setValByKeyAndRowId(moduleId, rowid, key, value) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setCellValue({ value, rowId: rowid, attrcode: key });\r\n    return false;\r\n}\r\n/** 25   selectTableRows    设置某些行的选中状态**/\r\nexport function selectTableRows(moduleId, index, flag, isCallBack = false, param = {}) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let indexArr = Array.isArray(index) ? index : [index];\r\n    let rowIdArr = _getRowIdByIndex.call(this, moduleId, indexArr);\r\n\r\n    let { pattern } = param\r\n    if (flag) {\r\n        store.setSelect(rowIdArr, pattern ? pattern : 'set');\r\n    } else {\r\n        store.setSelect(rowIdArr, 'delete');\r\n    }\r\n    // let config = store.getConfig()\r\n    isCallBack && warningOnce(false, `还没写`);\r\n}\r\n/** 26   getPks    获取某页的pks**/\r\nexport function getPks(moduleId, pageIndex, pageSize) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let pageInfo = store.getStore(['pageInfo']);\r\n    let allpks = store.getStore(['allpks']);\r\n    let { pageIndex: currentPageIndex, pageSize: currentPageSize } = pageInfo;\r\n    let pks = [];\r\n    let index = Number(isUndefined(pageIndex) ? currentPageIndex : pageIndex);\r\n    let size = Number(isUndefined(pageSize) ? currentPageSize : pageSize);\r\n    let start = (index - 1) * size;\r\n    for (let i = start; i < start + size; i++) {\r\n        if (allpks[i]) {\r\n            pks.push(allpks[i]);\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return pks;\r\n}\r\n/** 27   hasCacheData    判断列表是否有缓存数据**/\r\nexport function hasCacheData(dataSource) {\r\n    if (dataSource) {\r\n        let mcData = ViewModel.getData(dataSource);\r\n        if (mcData && mcData.simpleTable && mcData.simpleTable.rows && mcData.simpleTable.rows.length) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/** 28   deleteCacheId    删除 allpks**/\r\nexport function deleteCacheId(moduleId, pkvalue) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let allpks = store.getStore(['allpks']);\r\n    if (Array.isArray(allpks) && allpks.length) {\r\n        if (typeof pkvalue === 'string') {\r\n            allpks = allpks.filter(item => {\r\n                return item != pkvalue;\r\n            });\r\n        }\r\n        if (Array.isArray(pkvalue) && pkvalue.length) {\r\n            allpks = allpks.filter(item => {\r\n                return !pkvalue.includes(item);\r\n            });\r\n        }\r\n        store.setStore(['allpks'], allpks);\r\n    }\r\n}\r\n/** 29   addCacheId    新增 allpks**/\r\nexport function addCacheId(moduleId, pkvalue) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let allpks = store.getStore(['allpks']);\r\n    if (Array.isArray(allpks)) {\r\n        if (!allpks.includes(pkvalue)) {\r\n            allpks.push(pkvalue);\r\n        }\r\n        store.setStore(['allpks'], allpks);\r\n    }\r\n}\r\n/** 30   updateTableData     通过rowid更新表格行数据**/\r\nexport function updateTableData(moduleId, data) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let checkData = isObject(data) && Array.isArray(data.rows);\r\n    if (checkData) {\r\n        // 处理rowId\r\n        let allRows = store.getData();\r\n        allRows.forEach(item => {\r\n            for (let row of data.rows) {\r\n                if (item.rowId == row.rowId) {\r\n                    // 状态为 1，2用返回的0代替\r\n                    Object.keys(item).forEach(key => {\r\n                        if (!isUndefined(row[key])) {\r\n                            item[key] = row[key];\r\n                        } else {\r\n                            delete item[key];\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        _setHeadCheckbox.call(this, moduleId, allRows, true);\r\n        store.setData(allRows, false);\r\n    }\r\n}\r\n/** 31   setClickRowIndex     设置当前点击行**/\r\nexport function setClickRowIndex(moduleId, data) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setTableProps(\"currentInfo\", data);\r\n}\r\n/** 32   getClickRowIndex     获取当前点击行**/\r\nexport function getClickRowIndex(moduleId) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.getTableProps(\"currentInfo\");\r\n}\r\n/** 33   setValByKeyAndIndex     根据index设置表格某行某个字段值**/\r\nexport function setValByKeyAndIndex(moduleId, index, key, value) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setCellValue({ value, index, attrcode: key });\r\n\r\n    return false;\r\n}\r\n\r\n/** 34   updateDiffDataByIndex     差异更新（王策）**/\r\nexport function updateDiffDataByIndex(moduleId, data) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let rows = store.getData();\r\n    let testDataType = Array.isArray(data);\r\n    if (testDataType) {\r\n        data.forEach(item => {\r\n            let { index, values } = item;\r\n            if (isObject(values)) {\r\n                Object.keys(values).forEach(key => {\r\n                    rows[index].values[key] = { ...rows[index].values[key], ...values[key] };\r\n                });\r\n            }\r\n        });\r\n        store.setData(rows);\r\n    }\r\n}\r\n/** 35   updateTableHeight      共享  郭扬让加的，他们现在再用\r\n * 刷新表格高度  这是特殊场景使用，一般是表格上方部分，高度变化，表格需要不断适应时使用）**/\r\nexport function updateTableHeight() {\r\n    PubSub.publish(OTHERCOMPLETE, true);\r\n}\r\nexport function beforeAreaChangeHeight() {\r\n    PubSub.publishSync(BEFORECOMPLETE, true);\r\n}\r\n/** 36   getSortParam     获取当前表格,排序信息包括当前是多列还是单列排序, 排序的字段,和排序顺序\r\n * 这是产品李聪慧让加的, 为了解决单据打印时，列表对中字段排序产生的问题**/\r\nexport function getSortParam(moduleId) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.getStore(['sortParam']);\r\n}\r\n/** 37   updateDataByRefresh      根据wensocket推送值，更新表格数据**/\r\nexport function updateDataByRefresh(moduleId, pkname, refreshData, saga_errormesg) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    if (Array.isArray(refreshData)) {\r\n        // let table = myTable.state.table;\r\n        let rows = store.getData();\r\n        let refreshLen = refreshData.length;\r\n        let data = rows.map(item => {\r\n            let values = item.values;\r\n            for (let i = 0; i < refreshLen; i++) {\r\n                //找到相应行,更新对应字段的value\r\n                if (values[pkname] && values[pkname].value === refreshData[i][pkname]) {\r\n                    //console.log(\"simpletable数据对比\")\r\n                    for (let pop in refreshData[i]) {\r\n                        if (values[pop]) {\r\n                            values[pop].value = refreshData[i][pop];\r\n                        } else {\r\n                            values[pop] = { value: refreshData[i][pop] };\r\n                        }\r\n                        //有错误信息时，将错误信息数据放表格行\r\n                        if (pop === 'saga_status' && refreshData[i][pop] === '1' && saga_errormesg) {\r\n                            values.saga_errormesg = saga_errormesg;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            return item;\r\n        });\r\n        store.setData({ data });\r\n    }\r\n}\r\n\r\n/** 38   saveFilterCustomColData       存储自定义的数据, 用于自定义列的筛选**/\r\nexport function saveFilterCustomColData(tableId, { attrcode, rowId, value }) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setCache(['customColData', attrcode, rowId], value);\r\n\r\n}\r\n\r\n//内部方法\r\n// 设置全选半选或者无状态\r\nfunction _setHeadCheckbox(moduleId, data, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    let selectArr = new Set();\r\n    let indeterminate = false,\r\n        checkedAll = false;\r\n    data.forEach((row, index) => {\r\n        if (row.selected) {\r\n            selectArr.add(index);\r\n        }\r\n    });\r\n\r\n    let selectArrLen = selectArr.size;\r\n    let dataLen = data.length;\r\n    if (selectArrLen) {\r\n        if (selectArrLen === dataLen) {\r\n            checkedAll = true;\r\n        } else if (selectArrLen < dataLen) {\r\n            indeterminate = true;\r\n        }\r\n    }\r\n    store.setStore(['checkInfo', 'indeterminate'], indeterminate, false);\r\n    store.setStore(['checkInfo', 'checkedAll'], checkedAll, shouldForceUpdate);\r\n}\r\n\r\n//通过index获得rowid\r\nfunction _getRowIdByIndex(moduleId, indexArr) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    let rows = store.getData();\r\n    let rowIdArr = [];\r\n    rows.forEach((row, index) => {\r\n        if (indexArr.includes(index)) {\r\n            rowIdArr.push(row.rowId);\r\n        }\r\n    });\r\n    return rowIdArr;\r\n}\r\n","\r\nimport simpleTable from \"@platform/simple-table\";\r\nimport * as simpleTableAPI from \"./compatible\";\r\n\r\n/**\r\n * 兼容旧版本创建表格方法\r\n * @param {string} mainCode 表格主区域编码\r\n * @param {object} config 表格业务配置\r\n */\r\n\r\nexport default function simpleTableCompatible() {\r\n    this.register(\"table\"); // 生成 this.cardTableDataSource[id]\r\n    return {\r\n        // store: useSimpleTable,\r\n        ...apiBindPage.call(this, simpleTableAPI),\r\n    };\r\n}\r\n\r\nfunction apiBindPage(simpleTableAPI) {\r\n    let res = {}\r\n    for (let pop of Object.keys(simpleTableAPI)) {\r\n        res[pop] = simpleTableAPI[pop].bind(this);\r\n    }\r\n    return res;\r\n}\r\n\r\nsimpleTableCompatible.component = simpleTable;\r\nsimpleTableCompatible.displayName = \"SimpleTable\";\r\nsimpleTableCompatible.unfinished = [\"simpleTableUnFinishedApi\"];\r\n","/*\r\n * @Descripttion: 兼容老的模式\r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-06-08 16:27:19\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-01-15 14:20:42\r\n */\r\nimport React from 'react';\r\nimport { utils, CONFIG } from '@platform/table-core';\r\n\r\nimport { clearOneTypeToast, getCookie, toast, linkTo, PubSub } from '@platform/api';\r\nimport { beforeAndAfter, getCheckedExtendMethod } from '../../../../FastExtend/utils';\r\n\r\nimport EditTable from '@platform/edit-table';\r\n\r\nconst useEditTable = EditTable.useEditTable;\r\n\r\nconst {\r\n    isFunction,\r\n    isArray,\r\n    isObject,\r\n    warningOnce,\r\n    isString,\r\n    isUndefined,\r\n    isPromise,\r\n    isWrong,\r\n    isNumber,\r\n    getPageSizeStorage\r\n} = utils;\r\n\r\nconst { ROW_STATUS } = CONFIG;\r\n// 页面其他区域变化表格重新计算标识\r\nconst OTHERCOMPLETE = 'otherComplete';\r\n\r\n/**\r\n *     ***********      方 法 目 录    ************\r\n *\r\n *     PS： 按习惯和常用性排序，新增方法请追加\r\n *\r\n *     序号      \t英文名称              \t 作用\r\n * \t\t1     \tdelRow       \t        根据index的删除行方法\r\n * \t\t2     \tgetNumberOfRows        根据id获取表格中所有的行的数量\r\n * \t\t3     \tgetAllRows             获取表格内所有行数据（包含删除项目）\r\n * \t\t4     \tgetAllData     \t \t   获取表格内全数据（包含删除项目）\r\n * \t\t5     \tgetAllRowsRemoveKeys   通过传入的键过滤不想要的数据\r\n * \t\t6     \taddRow     \t\t       通过index值新增行\r\n * \t\t7     \thideEditTableColByKey  根据id和column的key隐藏某列\r\n * \t\t8     \tshowEditTableColByKey  根据id和column的key显示某列\r\n *      9     \tsetValByKeyAndIndex    根据行序号设置表格某行某个字段值\r\n *      10      setTableData           设置表格数据，同时缓存数据，取消时调用\r\n * \t\t11    \tcancelEdit      \t   取消编辑\r\n * \t\t12   \tsetStatus     \t\t   设置表格状态\r\n *      14      getCurrentStatus       获取表格状态\r\n * \t\t16      getChangedRows         获取变化行信息\r\n *      17      pasteRow               复制粘贴行，默认粘贴到该行下方\r\n *      18      setValByKeyAndRowId    根据rowid设置表格某行某个字段值\r\n * \t\t19      getValByKeyAndIndex    根据index获取表格某行某个字段值  0代表第一行  行序号可有可没有\r\n * \t\t20      getValByKeyAndRowId    根据rowId设置获取某行某个字段值\r\n * \t\t21      setEditableByKey       通过rowid和键设置表格某行某个字段编辑性\r\n * \t\t22      getColValue            获取表格某列数据\r\n * \t\t23      setColValue            设置表格某列数据\r\n *      24      getEditTableCacheDataById     获取表格初始数据\r\n *      25      filterEmptyRows               保存时 移除没有输入内容 所有的空行\r\n *      26      getTableCheckedRows           获取表格选中行\r\n *      27      selectAllTableRows            选中表格所有行\r\n *      28      reverseTableSelected          反转表格选中\r\n *      29      deleteTableRowsByIndex             通过index删除行\r\n *      30      deleteRowsByRowId             通过rowid删除行\r\n *      31      openEditModel                 打开编辑弹窗回调\r\n *      32      closeModel                关闭编辑弹窗回调\r\n *      33      focusRowByIndex               保存选中的行index\r\n *      34      setRowByIndex                 设置一行数据通过index\r\n *      35      getFilterRows                 搜索表格中特定数据的方法，\r\n *      36      setFiltrateTableData          搜索设置搜索后表格数据的方法，\r\n *      37      batchChangeTableData          批量更改表格数据\r\n *      38      setEditableRowByRowId         通过rowId设置表格某些行的编辑性\r\n *      39      setEditableRowByIndex         通过Index设置表格某些行的编辑性\r\n *      40      setEditableRowKeyByRowId      通过rowId设置表格某些行的某些字段编辑性\r\n *      41       setCheckboxDisabled            设置每行第一个Checkbox是否禁用\r\n *      42       setAllCheckboxAble         设置设置所有多选框禁用和启用的方法\r\n *      43       selectTableRows                设置某些行的选中状态\r\n *      44       setEditableRowKeyByIndex        通过index设置表格某些行的某些字段编辑性\r\n *      45       moveRow                         移动行的方法\r\n *      46       setRowStatus                    设置行的状态\r\n *      47       getRowStatus                    获取行的状态\r\n *      48       getClickRowIndex                获取点击行\r\n *      49       setClickRowIndex                设置点击行\r\n *      50       updateTableData                 通过rowid更新表格数据\r\n *      51       setRowPosition                  设置行位置\r\n *      52       getTableItemData                获得手动选中过的单元格信息\r\n *      53       setColScale                     设置某些表格某些列的精度\r\n *      54       checkRequired                   检验必输项的方法, 检验输入的行\r\n *      55       checkVisible                    检测某列是否隐藏的方法\r\n *      58       getTablePageInfo                获取分页信息包括pageindex  pagesize\r\n *      59       insertRowsAfterIndex            多行数据插入到index行后\r\n *      66       setEditableKeyEdit              批量设置表格的单元格的编辑性性\r\n */\r\n\r\n// 订阅查询区变化常量\r\nconst COMPLETE = 'areaChangeComplete';\r\n\r\n/**\r\n * 检测组件对象是否存在 bbq\r\n * @param {*} id \r\n */\r\nconst existenceCheck = function (id) {\r\n    let store = this.editTableDataSource[id]\r\n    if (!store) {\r\n        warningOnce(false, `所操作的表格中无ID为${id}的数据`);\r\n        return;\r\n    }\r\n    return store;\r\n}\r\n\r\n/**\r\n * 检测行的index是否存在 bbq\r\n * @param {*} id \r\n */\r\nconst indexCheck = function (id, index, rowid) {\r\n    let store = existenceCheck.call(this, id);\r\n    if (!store) { return; }\r\n    let viewData = store.getData([ROW_STATUS.delete, ROW_STATUS.filter]);\r\n    if (isNaN(index) || index > viewData.length || index < 0) {\r\n        warningOnce(index, '传入的第二个参数为行index值，须为大于等于0且小于等于总行数减一的整数');\r\n        return -1;\r\n    }\r\n    return index;\r\n}\r\n\r\n// 处理旧值函数  bbq\r\nexport function saveChangedRowsOldValue(moduleId, rowid, attrcode, value) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) { return; }\r\n    store.saveRowOldValue(rowid, attrcode, value);\r\n}\r\n\r\n/**\r\n * bbq\r\n * 对旧值处理的函数, 这原来是标识是index,但是增加筛选后,\r\n * 对筛选结果进行编辑,使用index作为标识存取新旧值,会导致存取值错误,\r\n * 所以改成现在rowid为标识, 但是对旧值处理的方法,已经对外暴露,如果出现问题,需要业务组配合修改,\r\n * 将对新旧值的处理换成rowid为标识\r\n * */\r\nexport function getChangedRowsOldValue(moduleId, rowid, attrcode) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) { return; }\r\n    return store.getRowOldValue(rowid, attrcode);\r\n}\r\n\r\n// 删除旧值函数 bbq\r\nexport function delChangedRowsOldValue(moduleId, rowid, attrcode) {\r\n    let store = existenceCheck.call(this, moduleId);\r\n    if (!store) { return; }\r\n    store.deleteRowOldValue(rowid, attrcode);\r\n}\r\n\r\n/**\r\n * bbq\r\n * @name:  创建表格\r\n * @test: test font\r\n * @msg: \r\n * @param {type} \r\n * @return: \r\n */\r\nexport function createEditTable(moduleId, config = {}) {\r\n    // return <EditTableContainer moduleId={moduleId} pageScope={this} config={config} />;\r\n    let pageScope = this,\r\n        store = pageScope.editTableDataSource[moduleId];\r\n    if (!store) {\r\n        store = useEditTable();\r\n        pageScope.editTableDataSource[moduleId] = store;\r\n        console.warn('没有store 请检查下  use方法');\r\n        // 如果有缓存值 则做一下  Store 的赋值操作  把setTableData里的else操作提到这里了\r\n        pageScope.editTableDataSource.myEditData = pageScope.editTableDataSource.myEditData || {};\r\n        if (pageScope.editTableDataSource.myEditData[moduleId]) {\r\n            store.setTableData(pageScope.editTableDataSource.myEditData[moduleId]); // TODO Check \r\n            store.setTableProps('focusIndex', -1, false);\r\n            delete pageScope.editTableDataSource.myEditData[moduleId];\r\n        }\r\n    }\r\n\r\n    // console.log('editTableStore', store);\r\n\r\n    // TODO config 转化  moduleId 转化\r\n    let {\r\n        onRowClick, onRowDoubleClick,\r\n        statusChange, onSelected, onSelectedAll, selectedChange,\r\n        onBeforeEvent, onAfterEvent, inputChange,\r\n        rowClassList,\r\n        isAddRow, addRowCallback, addRowDefaultValue,\r\n        showPagination,\r\n        handlePageInfoChange,\r\n        // 这是表格高度 不是行高\r\n        height,\r\n        adaptionHeight,\r\n        setCellClass,\r\n        onBatchSelected,\r\n        alloweFilter,\r\n        onCloseModel,\r\n        tableModelConfirm,\r\n        fieldid,\r\n        ...others\r\n    } = config;\r\n    store.setConfig(config)//把config放到store里\r\n    // 挂载方法  不一定bind\r\n    isFunction(statusChange) && (store.statusChange = config.statusChange = statusChange.bind(this));\r\n    isFunction(selectedChange) && (store.selectedChange = config.selectedChange = selectedChange.bind(this));\r\n    isFunction(onSelected) && (store.onSelected = config.onSelected = onSelected.bind(this));\r\n\r\n    // renderItem 适配\r\n    let renderItems = {};\r\n    if (pageScope.state.renderItem && pageScope.state.renderItem.table) {\r\n        renderItems = (pageScope.state.renderItem.table || {})[moduleId] || {};\r\n    }\r\n    // 表格是否自适应高度\r\n    let adaption = !!(isUndefined(height) && adaptionHeight);\r\n\r\n    return <EditTable\r\n        onCloseModel={data => {\r\n            isFunction(onCloseModel) && onCloseModel.call(\r\n                pageScope,\r\n                { ...pageScope.props, ...pageScope.output },\r\n                moduleId,\r\n                data,\r\n            );\r\n        }}\r\n        tableModelConfirm={data => {\r\n            isFunction(tableModelConfirm) && tableModelConfirm.call(\r\n                pageScope,\r\n                { ...pageScope.props, ...pageScope.output },\r\n                moduleId,\r\n                data,\r\n            );\r\n        }}\r\n        fieldid={fieldid}\r\n        cellClassName={({ record, rowIndex, attrcode }) => {\r\n            return isFunction(setCellClass) && setCellClass(rowIndex, record, attrcode);\r\n        }}\r\n        onRowClick={(record, outputIndex, e) => {\r\n            return isFunction(onRowClick) && onRowClick.call(\r\n                pageScope,\r\n                { ...pageScope.props, ...pageScope.output },\r\n                moduleId,\r\n                record,\r\n                outputIndex,\r\n                e,\r\n            )\r\n        }}\r\n        onRowDoubleClick={(record, outputIndex, e) => {\r\n            return isFunction(onRowDoubleClick) && onRowDoubleClick.call(\r\n                pageScope,\r\n                record,\r\n                outputIndex,\r\n                { ...pageScope.props, ...pageScope.output },\r\n                e,\r\n            )\r\n        }}\r\n        onSelected={(tableId, record, selected, outputIndex, isUnique) => {\r\n            isFunction(onSelected) && onSelected.call(\r\n                pageScope,\r\n                { ...pageScope.props, ...pageScope.output },\r\n                tableId,\r\n                record,\r\n                outputIndex,\r\n                selected,\r\n                isUnique,\r\n            )\r\n        }}\r\n        selectedChange={(tableId, newLen, oldLen) => {\r\n            isFunction(selectedChange) && selectedChange.call(pageScope, { ...pageScope.props, ...pageScope.output }, tableId, newLen, oldLen);\r\n        }}\r\n        onSelectedAll={(tableId, checkedAll, len) => {\r\n            isFunction(onSelectedAll) && onSelectedAll.call(pageScope, { ...pageScope.props, ...pageScope.output }, tableId, checkedAll, len);\r\n        }}\r\n        autoAddRow={{\r\n            enabled: isAddRow,\r\n            callback: newRow => {\r\n                addRowCallback && addRowCallback(moduleId, newRow);\r\n            },\r\n            defaultValue: addRowDefaultValue,\r\n        }}\r\n        onChange={({ rowKey, rowKeyValue, rowIndex, attrcode, value, column, e }) => {\r\n            // 为郭祉琪加的针对input类型时,这两个字段的特殊校验,换算率\r\n            if (column.itemtype === 'input' && ['vchangerate', 'vqtunitrate'].includes(column.attrcode)) {\r\n                // eslint-disable-next-line no-useless-escape\r\n                let reg = /^[0-9\\/\\.]+$/;\r\n                if (value && !reg.test(value)) { //只能输入数字和/\r\n                    return;\r\n                }\r\n            }\r\n            //胡杰李忠博加\r\n            if (isFunction(config.inputChange)) {\r\n                let callbackValue = config.inputChange({ index: rowIndex, item: column, valueChange: value.value });\r\n                if (!callbackValue) {\r\n                    return;\r\n                }\r\n            }\r\n        }}\r\n        onBeforeEvent={async params => {\r\n            let {\r\n                record, rowKey, rowKeyValue, rowIndex,\r\n                attrcode, column, value = {},\r\n                event,\r\n                triggerType = 'onChange', // onChange || onBlur\r\n                isTriggerModal = false,\r\n            } = params;\r\n\r\n            let fxParams = {\r\n                moduleId,\r\n                record,\r\n                attrcode: attrcode,\r\n                methods: pageScope.output,\r\n                column,\r\n                index: rowIndex,\r\n                val: record.values[attrcode],\r\n            };\r\n\r\n            return await beforeAndAfter(\r\n                pageScope,\r\n                { moduleId, attrcode: attrcode, fxType: 'onEditTableBeforeEvent', fxParams },\r\n                () => {\r\n                    // console.log('onBeforeEvent', 'ssssssssssss')\r\n                    return isFunction(onBeforeEvent) ? onBeforeEvent(\r\n                        { ...pageScope.props, ...pageScope.output },\r\n                        moduleId,\r\n                        column,\r\n                        rowIndex,\r\n                        value,\r\n                        record,\r\n                    ) : true;\r\n                }) !== false;\r\n        }}\r\n        onAfterEvent={params => {\r\n            let {\r\n                record, rowKey, rowKeyValue, rowIndex,\r\n                attrcode, column, value = {},\r\n                oldValue = {},\r\n                componentValue,\r\n                event,\r\n                triggerType = 'onChange', // onChange || onBlur\r\n                isTriggerModal = false,\r\n            } = params;\r\n\r\n            let val = value.value;\r\n\r\n            // 为郭祉祺加的针对input类型时,这两个字段的特殊校验,换算率\r\n            if (column.itemtype === 'input' && ['vchangerate', 'vqtunitrate'].includes(attrcode)) {\r\n                let reg = /^([1-9][0-9]*|0)(\\.\\d{1,})?(\\/)(([1-9][0-9]*)(\\.\\d{1,})?|(\\d\\.\\d{1,}))$/;\r\n                if (val && val.length < 1000 && !reg.test(val)) {\r\n                    if (!isTriggerModal) {\r\n                        store.setCellProps(rowKeyValue, attrcode, { isEdit: false });\r\n                    }\r\n                    store.setCellProps(rowKeyValue, attrcode, { value: null });\r\n                    // toast({\r\n                    //     content: `${json['table0025']}'1/2'!`,\r\n                    //     color: 'danger',\r\n                    //     groupOperation: true,\r\n                    //     isNode: true,\r\n                    //     TextArr: [json['table0022'], json['table0023'], json['table0024']]\r\n                    // });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let changedRows = [];\r\n\r\n            // editItem.props.hasOwnProperty('isMultiSelectedEnabled') && (isMul = editItem.props.isMultiSelectedEnabled);\r\n            let isMulti = column.isMultiSelectedEnabled;\r\n            if (column.refcode) {\r\n                let refcode = column.refcode.replace('.js', '');\r\n                if (refcode.startsWith('/')) refcode = refcode.substring(1);\r\n                let refer = window[refcode] && window[refcode].default();\r\n                if (refer && refer.props && refer.props.isMultiSelectedEnabled) {\r\n                    isMulti = refer.props.isMultiSelectedEnabled;\r\n                }\r\n            }\r\n            // 多选参照的判断\r\n            let valueArr = [];\r\n            if (isMulti && oldValue) {\r\n                let oldValArr = isString(oldValue.value) ? oldValue.value.split(',') :\r\n                    (isArray(oldValue.value) ? oldValue.value : [oldValue.value]);\r\n\r\n                valueArr = isString(value.value) ? value.value.split(',') :\r\n                    (isArray(value.value) ? value.value : [value.value]);\r\n\r\n                valueArr.forEach((val, i) => {\r\n                    changedRows.push({\r\n                        rowid: record.rowid,\r\n                        newvalue: { value: val || '' },\r\n                        oldvalue: { value: oldValArr[0] || '' },\r\n                    });\r\n                });\r\n\r\n            } else {\r\n                changedRows.push({\r\n                    rowid: record[rowKey],\r\n                    newvalue: { value: val || '' },\r\n                    oldvalue: { value: oldValue.value || '' },\r\n                });\r\n            }\r\n\r\n            store.saveRowOldValue(record[rowKey], attrcode, valueArr.length > 0 ? valueArr[0] : val);\r\n\r\n            if (column.editAfterFlag && pageScope.handleRelationItems) {\r\n                pageScope.handleRelationItems({\r\n                    type: 'table',\r\n                    areaCode: moduleId,\r\n                    key: attrcode,\r\n                    changedrows: changedRows,\r\n                    index: rowIndex,\r\n                    rowid: record[rowKey],\r\n                    record: record,\r\n                    column: column,\r\n                    callback: () => {\r\n                        let fxParams = {\r\n                            moduleId,\r\n                            record: record,\r\n                            attrcode: attrcode,\r\n                            methods: pageScope.output,\r\n                            val: column.itemtype === 'refer' || column.itemtype === 'residtxt' ? componentValue : value.value,\r\n                            changedRows,\r\n                            index: rowIndex,\r\n                            type: 'table',\r\n                            actionTag: triggerType === 'onBlur' ? 'blur' : 'change',\r\n                        };\r\n                        beforeAndAfter(\r\n                            pageScope,\r\n                            { moduleId, attrcode: attrcode, fxType: 'onEditTableAfterEvent', fxParams },\r\n                            () => {\r\n                                // 客开先不加了\r\n                                isFunction(onAfterEvent) && onAfterEvent(\r\n                                    {\r\n                                        ...pageScope.props,\r\n                                        ...pageScope.output,\r\n                                    },\r\n                                    moduleId,\r\n                                    attrcode,\r\n                                    // 特殊类型值的返回\r\n                                    column.itemtype === 'refer' || column.itemtype === 'residtxt' ? componentValue : value.value,\r\n                                    changedRows,\r\n                                    rowIndex,\r\n                                    record,\r\n                                    isTriggerModal ? 'modal' : 'line',\r\n                                    triggerType === 'onBlur' ? 'blur' : 'change',\r\n                                    event,\r\n                                );\r\n                            });\r\n                    },\r\n                });\r\n            } else {\r\n                let fxParams = {\r\n                    moduleId,\r\n                    record: record,\r\n                    attrcode: attrcode,\r\n                    methods: pageScope.output,\r\n                    val: column.itemtype === 'refer' || column.itemtype === 'residtxt' ? componentValue : value.value,\r\n                    changedRows,\r\n                    index: rowIndex,\r\n                    type: 'table',\r\n                    actionTag: triggerType === 'onBlur' ? 'blur' : 'change',\r\n                };\r\n                beforeAndAfter(\r\n                    pageScope,\r\n                    { moduleId, attrcode: attrcode, fxType: 'onEditTableAfterEvent', fxParams },\r\n                    () => {\r\n                        console.log('onAfterEvent', 'onAfterEventonAfterEventonAfterEventonAfterEventonAfterEvent');\r\n                        isFunction(onAfterEvent) && onAfterEvent(\r\n                            {\r\n                                ...pageScope.props,\r\n                                ...pageScope.output,\r\n                            },\r\n                            moduleId,\r\n                            attrcode,\r\n                            // 特殊类型值的返回\r\n                            column.itemtype === 'refer' || column.itemtype === 'residtxt' ? componentValue : value.value,\r\n                            changedRows,\r\n                            rowIndex,\r\n                            record,\r\n                            isTriggerModal ? 'modal' : 'line',\r\n                            triggerType === 'onBlur' ? 'blur' : 'change',\r\n                            event,\r\n                        );\r\n                    });\r\n            }\r\n        }}\r\n        rowClassName={rowClassList}\r\n        store={store}\r\n        editTableComponentUpdate={props => {\r\n            // console.log('editTableComponentUpdate', props);\r\n            getCheckedExtendMethod(pageScope, 'updateEditTable')({ pageScope, data: store.getViewData(), props, useOn: 'create' });\r\n        }}\r\n        afterLangload={(json, store) => {\r\n            // console.log(this, json);\r\n            pageScope.editTableDataSource._langJson = json || {};\r\n        }}\r\n        onBatchSelected={!onBatchSelected ? false : rows => {\r\n            return onBatchSelected && onBatchSelected({\r\n                ...pageScope.props,\r\n                ...pageScope.output,\r\n            }, moduleId, rows);\r\n        }}\r\n        showPagination={showPagination}\r\n        onPageInfoChange={(pks, total) => {\r\n            isFunction(handlePageInfoChange) && handlePageInfoChange({ ...pageScope.props, ...pageScope.output },\r\n                config,\r\n                pks,\r\n                total);\r\n        }}\r\n        tableId={moduleId}\r\n        bodyStyle={{ minHeight: config.height || 300 }}\r\n        useFixedHeader={true}\r\n        scroll={{\r\n            x: true,\r\n            y: config.height || 300,\r\n        }}\r\n        adaptionHeight={adaption}\r\n        onCellHyperlinkTo={(record, attrcode, value, tableId) => {\r\n            linkTo(pageScope.state.meta.pageid, tableId, attrcode, value.value);\r\n        }}\r\n        renderItems={renderItems}\r\n        high_filter={{ alloweFilter }}\r\n        // 快捷键 解耦\r\n        getHotKeyConfig={() => {\r\n            return {\r\n                autoFocusDeferred: this.autoFocusDeferred,\r\n                meta: this.state.meta,\r\n                withHotKeyChange: this.withHotKeyChange,\r\n                orderOfHotKey: this.orderOfHotKey,\r\n                onLastFormEnter: config.onLastFormEnter,\r\n            };\r\n        }}\r\n        {...others}\r\n    />\r\n}\r\n\r\n/*-------------------当前--------------------*/\r\n\r\n/*-------------------工具--------------------*/\r\n\r\n/*-------------------行--------------------*/\r\n\r\n/**\r\n * bbq\r\n * @description: \r\n * @param {type} \r\n * @return: \r\n */\r\nexport function delRow(tableId, index, isDeepDel) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return; }\r\n    store.deleteTableRows({ rowIndexs: index }, isDeepDel);\r\n}\r\n\r\n// bbq\r\nexport function deleteTableRowsByIndex(tableId, index, isDeepDel, callback) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return; }\r\n    store.deleteTableRows({ rowIndexs: index }, isDeepDel);\r\n    let newLen = store.getSelectedRows().length;\r\n    isFunction(store.selectedChange) && store.selectedChange({ ...this.props, ...this.output }, tableId, newLen);\r\n    isFunction(callback) && callback();\r\n}\r\n\r\n// bbq\r\nexport function deleteTableRowsByRowId(tableId, rowid, isDeepDel) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return; }\r\n    store.deleteTableRows({ rowKeyValues: rowid }, isDeepDel);\r\n    let newLen = store.getSelectedRows().length;\r\n    isFunction(store.selectedChange) && store.selectedChange({ ...this.props, ...this.output }, tableId, newLen);\r\n}\r\n\r\n// bbq\r\nexport function getAllRows(tableId, isDeepCopy = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return this.editTableDataSource.myEditData[tableId] ? this.editTableDataSource.myEditData[tableId].rows : []; }\r\n    return store.getAllRows(isDeepCopy);\r\n}\r\n\r\n// bbq\r\nexport function getVisibleRows(tableId, isDeepCopy = true, isFilter = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    return store.getVisibleRows(isDeepCopy, isFilter);\r\n}\r\n\r\n// bbq\r\nexport function getNumberOfRows(tableId, flag) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return 0;\r\n    }\r\n    return flag ? getAllRows.call(this, tableId, false).length : getVisibleRows.call(this, tableId, false).length;\r\n}\r\n\r\n// bbq\r\nexport function getAllData(tableId, flag = true) {\r\n    let rows = getAllRows.call(this, tableId, flag);\r\n    let data = {\r\n        areaType: 'table',\r\n        rows,\r\n        areacode: null,\r\n    };\r\n    return data;\r\n}\r\n\r\n// 获取某个视图的数据\r\nexport function getViewData(tableId, view = 'normal', isDeepCopy = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return 0;\r\n    }\r\n    let data = store.getViewData(view);\r\n    return data;\r\n}\r\n\r\n// bbq\r\nexport function getAllRowsRemoveKeys(tableId, keys) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    return store.getAllRowsRemoveKeys(keys);\r\n}\r\n\r\n// bbq\r\nexport function addRow(tableId, index, autoFocus = false, defaultValue, callback, isAutoAddRow, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    if (!defaultValue) defaultValue = {};\r\n    store.addTableRow(index, defaultValue, !this.isUpdatePage && shouldForceUpdate, {\r\n        autoFocus,\r\n        isAutoAddRow,\r\n        callback: () => {\r\n            callback && callback.call(this, tableId);\r\n        },\r\n    });\r\n\r\n    isFunction(store.statusChange) && store.statusChange(store.getTableProps('status'));\r\n}\r\n\r\n// bbq\r\nexport function filterEmptyRows(tableId, keys, rule = 'except', isDeepDel = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.removeEmptyRows({ keys, rule, shouldForceUpdate: !this.isUpdatePage });\r\n}\r\n\r\n// TODO\r\nexport function getCurrentRecord(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    const rows = getAllRows.call(this, tableId);\r\n    let currentIndex = store.getTableProps('currentIndex');\r\n    const currentRecord = rows[currentIndex];\r\n    return currentRecord;\r\n}\r\n\r\n// TODO\r\nexport function focusRowByIndex(tableId, index, callback) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n\r\n    // TODO setCurrnetInfo \r\n    // TODO 设置选中行 和 聚焦行\r\n    const rowKey = store.getTableProps('rowKey');\r\n    store.setSelectedIndex([], 'clear');\r\n    store.setSelectedIndex([{ rowKey, rowIndex: index, pattern: 'add' }]);\r\n\r\n    store.setTableProps('focusIndex', index, false);\r\n    index = store.getTrueRowIndex({ rowIndex: index });\r\n    store.setTableProps('currentIndex', index, true, () => {\r\n        store.setTableProps('focusIndex', -1, false);\r\n        isFunction(callback) && callback();\r\n    });\r\n\r\n}\r\n\r\n// bbq\r\nexport function setRowByIndex(tableId, record, index) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.updateTableDataByIndexs([{ index, data: record }]);\r\n}\r\n\r\n// bbq\r\nexport function setEditableRowByRowId(tableId, rowid, flag, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setRowsCellPropsByKey(rowid, { disabled: !flag }, !this.isUpdatePage && shouldForceUpdate);\r\n}\r\n\r\n// bbq\r\nexport function setEditableRowByIndex(tableId, index, flag, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setRowsCellPropsByIndex(index, { disabled: !flag }, !this.isUpdatePage && shouldForceUpdate);\r\n}\r\n\r\n// bbq\r\nexport function setEditableRowKeyByRowId(tableId, rowid, key, flag, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setCellsProps({ rowKeyValues: rowid, attrcodes: key, value: { disabled: !flag }, shouldForceUpdate: !this.isUpdatePage && shouldForceUpdate });\r\n}\r\n\r\n// bbq\r\nexport function getFilterRows(tableId, key, value) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let langCode = getCookie('langCode') || 'simpchn';\r\n\r\n    return store.getFilterRows(key, value, langCode);\r\n}\r\n\r\n// bbq\r\nexport function setFiltrateTableData(tableId, key, value, isShowAll) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    let langCode = getCookie('langCode') || 'simpchn';\r\n    return store.setFiltrateTableData(key, value, isShowAll, langCode, tableId);\r\n}\r\n\r\n// bbq\r\nexport function moveRow(tableId, indexStart, indexEnd) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return; }\r\n    store.moveRow(indexStart, indexEnd);\r\n}\r\n\r\n// bbq\r\nexport function setRowStatus(tableId, index, flag) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    store.setRowsProps({ rowIndexs: index }, { status: flag }, !this.isUpdatePage);\r\n}\r\n\r\n// bbq\r\nexport function getRowStatus(tableId, index) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    return store.getRowProps({ rowIndex: index }, 'status');\r\n}\r\n\r\n// bbq\r\nexport function getClickRowIndex(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    return store.getTableProps(\"currentInfo\");\r\n}\r\n\r\n// bbq\r\nexport function setClickRowIndex(tableId, data) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    return store.setTableProps(\"currentInfo\", data, false);\r\n}\r\n\r\n// TODO\r\nexport function setRowPosition(tableId, indexStart, position) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    return store.setRowPosition(indexStart, position);\r\n}\r\n\r\n// bbq\r\nexport function insertRowsAfterIndex(tableId, data, index) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    store.insertRowsAfterIndex(data, index);\r\n}\r\n\r\n// bbq\r\nexport function insertDataByIndexs(tableId, record) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    store.insertDataByIndexs(record, false, true);\r\n    // TODO\r\n    //     let cell = autoFocus && getCellDom(tableId);\r\n    //   let cellIdentity = cell && getCellIdentity(cell);\r\n    return {\r\n        // ...myCardScope.state.table,\r\n        rows: store.getData(),\r\n    }\r\n}\r\n\r\n// bbq\r\nexport function updateRows(tableId, data, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    store.updateRows(data, shouldForceUpdate);\r\n}\r\n\r\n// bbq\r\nexport function updateRowsProps(tableId, data, props = {}, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    store.updateRowsProps(data, props, shouldForceUpdate);\r\n}\r\n\r\n// bbq\r\nexport function resetTableCaches(tableId, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    store.resetTableCaches(shouldForceUpdate);\r\n}\r\n\r\n// bbq\r\nexport function updateDataByIndexs(tableId, record, flag = false, isDel = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    // if (isDel) {\r\n    //     // 过滤点当前删除状态的数据\r\n    //     !myEditScope.filterAllData && (myEditTable.rows = tableData.filter(item => {\r\n    //       return item.status !== '3';\r\n    //     }));\r\n    //     myEditScope.filterAllData && (myEditScope.filterAllData = tableData.filter(item => {\r\n    //       return item.status !== '3';\r\n    //     }));\r\n    //   }\r\n    store.updateTableDataByIndexs(record, flag, true);\r\n}\r\n\r\n/*-------------------列--------------------*/\r\n\r\n// bbq\r\nexport function getColValue(tableId, key) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let rows = store.getData();\r\n    // 因为筛选而加的代码\r\n    let newData = {\r\n        value: [],\r\n        display: [],\r\n    };\r\n    rows.find(item => {\r\n        newData.value.push(item.values[key].value);\r\n        if (item.values[key].display) {\r\n            newData.display.push(item.values[key].display);\r\n        }\r\n    });\r\n    return newData;\r\n}\r\n\r\n// bbq\r\nexport function setColValue(tableId, key, { display, value, scale }, isSetEdit = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let rows = store.getData();\r\n    rows.find(item => {\r\n        const { status, rowid } = item;\r\n        // 已经被删除的行不处理\r\n        if (status == ROW_STATUS.delete) {\r\n            return;\r\n        }\r\n        if (status == ROW_STATUS.origin && isSetEdit) {\r\n            item.status = ROW_STATUS.edit;\r\n        }\r\n        if (!isObject(item.values[key])) {\r\n            item.values[key] = {};\r\n        }\r\n        if (!isUndefined(value)) {\r\n            item.values[key].value = value;\r\n            // 给新复制的行存旧值\r\n            saveChangedRowsOldValue.call(this, tableId, rowid, key, value);\r\n        }\r\n        !isUndefined(display) && (item.values[key].display = display);\r\n        !isUndefined(scale) && (item.values[key].scale = scale);\r\n    });\r\n    store.setData({ data: rows });\r\n}\r\n\r\n// TODO  这个方法态暴力\r\nexport function setColScale(list) {\r\n    list.forEach(eve => {\r\n        const { areacode, fieldcode, scale } = eve;\r\n        this.state.meta[areacode].items.forEach(item => {\r\n            if (item.attrcode === fieldcode) {\r\n                item.scale = scale;\r\n            }\r\n        });\r\n    });\r\n    /**重新设置模版精度*/\r\n    this.meta.setMeta(this.state.meta);\r\n}\r\n\r\n/**隐藏列\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string || array} key\r\n */\r\nexport function hideColByKey(tableId, key) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    if (isString(key)) key = [key];\r\n    key.forEach(code => {\r\n        store.setColumn(tableId, { [code]: { visible: false } }, false);\r\n    });\r\n\r\n    // 统一更新一次\r\n    store.refresh();\r\n}\r\n\r\n/**显示列\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string || array} key\r\n */\r\nexport function showColByKey(tableId, key) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    if (isString(key)) key = [key];\r\n    key.forEach(code => {\r\n        store.setColumn(tableId, { [code]: { visible: true } }, false);\r\n    });\r\n\r\n    // 统一更新一次\r\n    store.refresh();\r\n}\r\n\r\n/*-------------------单元格--------------------*/\r\n// bbq\r\nexport function setValByKeyAndIndex(tableId, index, key, cellValue, isSetEdit = true, isUpdateBatch = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setValByKeyAndIndex(index, key, cellValue, { isSetEdit, isUpdateBatch, shouldForceUpdate: !this.isUpdatePage })\r\n}\r\n\r\n// bbq\r\nexport function setValByKeyAndRowId(tableId, rowid, key, cellValue, isSetEdit = true, isUpdateBatch = false) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    if (!rowid) {\r\n        return;\r\n    }\r\n    const row = store.getRows({ rowKeyValues: rowid })[0];\r\n    if (!row) {\r\n        return;\r\n    }\r\n    store.setValByKeyAndRowId(rowid, key, cellValue, { isSetEdit, isUpdateBatch, shouldForceUpdate: !this.isUpdatePage })\r\n}\r\n\r\n// bbq\r\nexport function getValByKeyAndIndex(tableId, index, key) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let len = store.getData().length;\r\n    if (len === 0) {\r\n        console.log('无数据');\r\n        return;\r\n    }\r\n\r\n    index = indexCheck.call(this, tableId, index);\r\n    if (index === -1) { return; }\r\n\r\n    return store.getValByKeyAndIndex(index, key);\r\n}\r\n\r\n// bbq\r\nexport function getValByKeyAndRowId(tableId, rowid, key) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    if (!rowid) {\r\n        return;\r\n    }\r\n    return store.getValByKeyAndRowKey(rowid, key);\r\n}\r\n\r\n// bbq\r\nexport function setEditableByKey(tableId, rowid, key, flag) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setCellProps(rowid, key, { disabled: !flag }, !this.isUpdatePage);\r\n}\r\n\r\n// bbq\r\nexport function setEditableRowKeyByIndex(tableId, index, key, flag, shouldForceUpdate = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setCellsProps({\r\n        rowIndexs: index,\r\n        attrcodes: key,\r\n        value: { disabled: !flag },\r\n        shouldForceUpdate: !this.isUpdatePage && shouldForceUpdate,\r\n    });\r\n}\r\n\r\n// TODO  父级禁用  子集是否禁用\r\nexport function checkVisible(tableId, colKey) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let column = store.getColumn(tableId, colKey) || {};\r\n    return column.visible;\r\n}\r\n\r\n/*-------------------表格--------------------*/\r\n// bbq\r\nexport function setTableData(tableId, data, isCache = true, isTop = false) {\r\n    if (!data || !data.rows || !Array.isArray(data.rows)) {\r\n        warningOnce(data, '传入的第二个参数为所设置的数据，数据格式是对象，且有个rows属性，rows的内容是数组');\r\n        return;\r\n    }\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        this.editTableDataSource.myEditData = this.editTableDataSource.myEditData || {};\r\n        this.editTableDataSource.myEditData[tableId] = data;\r\n        // 设置值的逻辑  迁移到 createEditTable 方法里\r\n        return;\r\n    }\r\n    // 设置表格数据\r\n    data = store.setTableData(data, { isCache, isTop });\r\n\r\n    // 解决组件销毁后，再次赋值，赋到了原来缓存的组件上，导致新的组件没有值的问题\r\n    this.editTableDataSource.myEditData = this.editTableDataSource.myEditData || {};\r\n    this.editTableDataSource.myEditData[tableId] = data;\r\n\r\n    // 调用selectedChange事件\r\n    isFunction(store.selectedChange) && store.selectedChange({ ...this.props, ...this.output }, tableId, 0);\r\n}\r\n\r\n// bbq\r\nexport function cancelEdit(tableId, callback) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    store.setTableProps('status', 'browse', false);\r\n    clearOneTypeToast('danger');\r\n    clearRequiredStatus.call(this, tableId);\r\n\r\n    setTableData.call(\r\n        this,\r\n        tableId,\r\n        JSON.parse(JSON.stringify(store.getCache(['afterDel']) || (store.getCache(['base']) || { rows: [] }))),\r\n    );\r\n    // 重新计算表格高度\r\n    PubSub.publish(COMPLETE, true);\r\n    callback && callback.call(this);\r\n}\r\n\r\n//  清除校验状态\r\nexport function clearRequiredStatus(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let validateFailed = store.getCache('validateFailed') || {};\r\n\r\n    for (let rowKeyValue in validateFailed) {\r\n        (validateFailed[rowKeyValue] || []).forEach(attrcode => {\r\n            store.setCellProps(rowKeyValue, attrcode, { validated: true }, false);\r\n        })\r\n    }\r\n\r\n    // 去除校验状态\r\n    store.setCache('validateFailed', null);\r\n    store.setCache('firstValidateFaild', null);\r\n}\r\n\r\n// bbq\r\nexport function setStatus(tableId, status, callback) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let oldStatus = store.getTableProps('status') || 'browse';\r\n    // 切换成浏览态的时候把所有的toast清掉\r\n    if (oldStatus !== 'browse' && status == 'browse') {\r\n        clearOneTypeToast('danger');\r\n        clearRequiredStatus.call(this, tableId);\r\n    }\r\n\r\n    store.setTableStatus(status, { shouldForceUpdate: !this.isUpdatePage });\r\n\r\n    isFunction(store.statusChange) && store.statusChange(status);\r\n\r\n\r\n    isFunction(callback) && callback.call(\r\n        this,\r\n        tableId,\r\n        status,\r\n        JSON.parse(JSON.stringify(store.getCache(['base']))),\r\n        store,\r\n        // this.editTableDataSource[tableId].state.table,  // 这个不知道业务有没有用过\r\n    );\r\n}\r\n\r\n// bbq\r\nexport function getStatus(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.getTableProps('status') || 'browse';\r\n}\r\n\r\n// bbq\r\nexport function getChangedRows(tableId) {\r\n    //判断修改的行，值是否和改之前一样，如果一样，把status设为0\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) { return []; }\r\n    return store.getChangedRows();\r\n}\r\n\r\n// bbq\r\nexport function pasteRow(tableId, data, index) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    index = index === undefined ? 0 : index + 1;\r\n    store.pasteRow({ copyRow: data, index });\r\n}\r\n\r\n// bbq\r\nexport function getCacheDataById(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let data = store.getCache(['base']) || {};\r\n    return JSON.parse(JSON.stringify(data));\r\n}\r\n\r\n// bbq\r\nexport function getCacheForEditModal(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let data = store.getCache(['beforeEdit']) || {};\r\n    return JSON.parse(JSON.stringify(data));\r\n}\r\n\r\n/**\r\n  根据key键获取模板中数据\r\n * @author renyjk\r\n * @param {string} tableId\r\n * @param {string} key\r\n * @param {boolean} flag 增加flag标识位，判断是否为多表头，默认是false，不是多表头\r\n */\r\nexport function setColEditableByKey(tableId, key, flag = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) return;\r\n    let meta = store.getMeta();\r\n    let items = meta && meta[tableId] && meta[tableId].items;\r\n    let destEditAreaCode =\r\n        meta.gridrelation &&\r\n        meta.gridrelation[tableId] &&\r\n        meta.gridrelation[tableId].destEditAreaCode;\r\n    if (isArray(items)) {\r\n        // 处理多表头\r\n        let fn = (items, key) => {\r\n            items.map(item => {\r\n                if (item.children) {\r\n                    fn(item.children, key);\r\n                }\r\n                if (item.attrcode === key || key.includes(item.attrcode)) {\r\n                    item.disabled = flag;\r\n                    /*兼容设置侧拉框同字段的编辑性start 米明天试试，看看好使不 之后在来完善先注释掉*/\r\n                    if (destEditAreaCode) {\r\n                        destEditAreaCode.forEach(eve => {\r\n                            //便利侧拉模版数组里的每项，所对应的模版\r\n                            meta[eve].items.forEach(formItem => {\r\n                                if (formItem.attrcode === item.attrcode) {\r\n                                    formItem.disabled = flag;\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                    /*兼容设置侧拉框同字段的编辑性end*/\r\n                }\r\n            });\r\n        };\r\n        fn(items, key);\r\n        store.setMeta(meta);\r\n    }\r\n}\r\n\r\n// bbq\r\nexport function updateTableData(tableId, data, callback, isCache = true) {\r\n    if (!isObject(data) || !isArray(data.rows)) {\r\n        warningOnce(data, '传入的第二个参数为所设置的数据，数据格式是对象，且有个rows属性，rows的内容是数组');\r\n        return;\r\n    }\r\n\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.updateTableData(data, isCache);\r\n\r\n    isFunction(callback) && callback();\r\n}\r\n\r\n/**\r\n * bbq\r\n * @description: 表格校验\r\n * @param {type} \r\n * @return: \r\n */\r\nexport function checkRequired(tableId, rows, autoFocus = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let json = store.getCache('langJson');\r\n\r\n    let metaItems = store.getArrayMeta(tableId);\r\n\r\n    if (!metaItems) {\r\n        warningOnce(false, `所操作的表格中无ID为${tableId}的meta`);\r\n        return false;\r\n    }\r\n\r\n    if (isArray(rows)) {\r\n        const allToast = {}; //保存所有检验提示信息\r\n\r\n        // 校验\r\n        const validateFailed = {};\r\n        let firstValidateFaild = null;\r\n        const rowKey = store.getTableProps('rowKey');\r\n\r\n        // 过滤不可见\r\n        metaItems = metaItems.filter(e => e.visible);\r\n\r\n        metaItems.forEach(item => {\r\n            //将数据中没有的列附上空对象，保证校验的准确性\r\n            const { attrcode, required, label } = item;\r\n            if (required) {\r\n                rows.forEach((row, index) => {\r\n                    let { status, values = {} } = row;\r\n                    if (status !== ROW_STATUS.delete) { // 去除假删除的\r\n                        if (isUndefined(values[attrcode])) {\r\n                            values[attrcode] = {};\r\n                        }\r\n                        let value = values[attrcode].value;\r\n                        if (isWrong(value) || (isArray(value) && value.length === 0)) {\r\n                            // 记录需要提示的值\r\n                            allToast[index] = allToast[index] || [];\r\n                            allToast[index].push(`[${label}]`);\r\n\r\n                            if (!firstValidateFaild) {\r\n                                firstValidateFaild = [row[rowKey], attrcode];\r\n                            }\r\n\r\n                            // 设置校验状态\r\n                            validateFailed[row[rowKey]] = validateFailed[row[rowKey]] || [];\r\n                            validateFailed[row[rowKey]].push(attrcode);\r\n                            store.setCache('validateFailed', validateFailed);\r\n                            store.setCellProps(row[rowKey], attrcode, { validated: false }, false);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        if (Object.keys(allToast).length > 0) {\r\n            let finalContent = ''; //最后展示的content\r\n            console.log(store, validateFailed, firstValidateFaild, 'validateFailed');\r\n            validateFailed && store.refresh();\r\n\r\n            // 聚焦到首个\r\n            if (firstValidateFaild && autoFocus) {\r\n                // cellselectorkey=\"hhghg-34343m43-434343wws@single1\"\r\n                let cellFocusElement = document.querySelector(`.table-cell-wrapper[cellselectorkey=\"${firstValidateFaild[0]}@${firstValidateFaild[1]}\"] [tabindex=\"0\"]`);\r\n\r\n                if (cellFocusElement) {\r\n                    cellFocusElement.ncExecuteFocus = true;\r\n                    cellFocusElement.focus();\r\n                    cellFocusElement.ncExecuteFocus = false;\r\n                }\r\n            }\r\n\r\n            Object.keys(allToast).forEach(item => {\r\n                //对输出的校验内容进行格式转化\r\n                finalContent += `${json && json['table_first']}${+item + 1} ${json && json['table_row']}: ${allToast[item].join(\r\n                    '，'\r\n                )}；`;\r\n            });\r\n            toast({\r\n                content: `${json && json['table_no_empty']}：`,\r\n                color: 'danger',\r\n                TextArr: [json['table0022'], json['table0023'], json['table0024']],\r\n                groupOperation: true,\r\n                groupOperationMsg: finalContent.split('；').map(item => (item ? item + '；' : item)),\r\n                mark: 'edit-table-toastx'\r\n            });\r\n            return false;\r\n        } else {\r\n            // 清理错误消息\r\n            // let validateFailed = store.getCache('validateFailed');\r\n            // if (validateFailed) {\r\n            //     for (let rowKeyValue in validateFailed) {\r\n            //         if (validateFailed[rowKeyValue]) {\r\n            //             validateFailed[rowKeyValue].forEach(attrcode => {\r\n            //                 store.setCellProps(rowKeyValue, attrcode, { validated: true }, false);\r\n            //             })\r\n            //         }\r\n            //     }\r\n            //     store.refresh();\r\n            // }\r\n            return true;\r\n        }\r\n    } else {\r\n        warningOnce(false, '所传入的第二个参数rows应是数组，请传入数组');\r\n        return false;\r\n    }\r\n}\r\n\r\n// TODO 未检验\r\nexport function updateDifference(tableId, data) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let testDataType = Array.isArray(data.rows);\r\n    if (testDataType) {\r\n        let tableData = getAllRows.call(this, tableId, false);\r\n        data.rows.map(item => {\r\n            let { rowid, values, status: rowStatus } = item;\r\n            if (isObject(values)) {\r\n                // 此处同时修改了数据状态为 ‘1’\r\n                let status =\r\n                    typeof rowStatus == 'undefined' || rowStatus == ROW_STATUS.origin ? ROW_STATUS.edit : rowStatus;\r\n                tableData.map(i => {\r\n                    if (i.rowid == rowid) {\r\n                        i.status = status;\r\n                        Object.keys(values).forEach(key => {\r\n                            i.values[key] = values[key];\r\n                        });\r\n                        // 优化存旧值\r\n                        const { values: vals, rowid } = i;\r\n                        for (let keys in vals) {\r\n                            const OldVal = vals[keys] ? vals[keys].value : null;\r\n                            saveChangedRowsOldValue.call(this, tableId, rowid, keys, OldVal);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        // 更新\r\n        store.refresh();\r\n    }\r\n}\r\n\r\n// bbq\r\nexport function updateTable(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setTableProps('focusIndex', -1, false);\r\n    let data = store.getData();\r\n    store.saveRowsOldValue({ rows: data });\r\n\r\n    store.refresh();\r\n}\r\n\r\n// bbq\r\nexport function setEditableKeyEdit(tableId, data) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    let rows = store.getData();\r\n    if (!rows.length || !data.length) {\r\n        return console.log('empty data');\r\n    }\r\n    let rowKey = store.getTableProps('rowKey');\r\n\r\n    rows.forEach((item, rowsIndex) => {\r\n        data.forEach(eve => {\r\n            const { index, keys } = eve;\r\n            // 改为 rowKey 来判断\r\n            if (eve[rowKey] === item[rowKey]) {\r\n                const { values } = item;\r\n                Object.keys(keys).forEach(key => {\r\n                    let _isObj = isObject(values[key]);\r\n                    if (!_isObj) {\r\n                        values[key] = {};\r\n                    }\r\n                    const disabledValue = !keys[key] ? 'on' : 'off'; //获得编辑状态\r\n                    values[key].disabled = disabledValue;\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    store.setData({ data: rows, shouldForceUpdate: !this.isUpdatePage });\r\n}\r\n\r\n/**32\r\n * bbq\r\n * 共享  郭扬让加的，他们现在再用\r\n * 刷新表格高度  这是特殊场景使用，一般是表格上方部分，高度变化，表格需要不断适应时使用\r\n */\r\nexport function updateTableHeight() {\r\n    PubSub.publish(OTHERCOMPLETE, true);\r\n}\r\n\r\n// bbq\r\nexport function updateDataByRowId(tableId, data, isCache = false, isDel = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return [];\r\n    }\r\n\r\n    store.updateTableDataByRowId(data, isCache, !this.isUpdatePage, isDel);\r\n}\r\n\r\n/*-------------------高阶组件--------------------*/\r\n\r\n// bbq\r\nexport function getCheckedRows(tableId, isDeepCopy = true) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return [];\r\n    }\r\n\r\n    return store.getSelectedRows(isDeepCopy);\r\n}\r\n\r\n// bbq\r\nexport function selectAllRows(tableId, checked) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return [];\r\n    }\r\n\r\n    let config = store.getConfig();\r\n    let { crossPageSelect, pkname } = config;\r\n    if (crossPageSelect && pkname) {\r\n        if (checked) {\r\n            let allpks = store.getStore('allpks')\r\n            store.setStore(['checkInfo', 'crossPageSelectIndex'], new Set(allpks), false)\r\n            store.setStore(['checkInfo', 'checkedAllpage'], true, false)\r\n        } else {\r\n            store.setStore(['checkInfo', 'crossPageSelectIndex'], new Set(), false)\r\n            store.setStore(['checkInfo', 'checkedAllpage'], false, false)\r\n        }\r\n    }\r\n    return store.setAllRowsSelected(checked, !this.isUpdatePage, () => {\r\n        let newLen = store.getSelectedRows().length;\r\n        isFunction(store.selectedChange) && store.selectedChange({ ...this.props, ...this.output }, tableId, newLen);\r\n    });\r\n}\r\n\r\n// bbq\r\nexport function reverseSelected(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return [];\r\n    }\r\n\r\n    store.reverseRowsSelected(!this.isUpdatePage)\r\n\r\n    let newLen = store.getSelectedRows().length;\r\n    isFunction(store.selectedChange) && store.selectedChange({ ...this.props, ...this.output }, tableId, newLen);\r\n}\r\n\r\n// TODO  弹窗\r\nexport function openModel(tableId, type, record = {}, index, autoFocus = true) {\r\n\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let sideBoxConfig = store.getStore('sideBoxConfig') || {};\r\n    sideBoxConfig = { ...sideBoxConfig, show: true };\r\n\r\n    //弹出之后，禁止后面的滚动事件\r\n    let html = document.getElementsByTagName('html');\r\n    html[0].style.overflow = 'hidden';\r\n\r\n    if (type == 'edit') {\r\n        sideBoxConfig.record = record;\r\n        sideBoxConfig.index = index;\r\n        sideBoxConfig.operateType = type;\r\n        sideBoxConfig.status = 'open';\r\n        let data = store.getViewData();\r\n        store.setCache(['beforeEdit'], JSON.parse(JSON.stringify({ rows: data })));\r\n    } else if (type == 'add') {\r\n        sideBoxConfig.operateType = type;\r\n        sideBoxConfig.status = 'open';\r\n        let addIndex = getVisibleRows.call(this, tableId, false, false).length;\r\n        let record = store.addTableRow(addIndex, {}, false, { autoFocus });\r\n        sideBoxConfig.record = record;\r\n        // 自动聚焦\r\n        // if (autoFocus) {\r\n        //     let items = store.getArrayMeta(tableId);\r\n        //     for (let i = 0; i < items.length; i++) {\r\n        //         if (\r\n        //             items[i].attrcode != 'numberindex' &&\r\n        //             (typeof items[i].disabled == 'undefined' || items[i].disabled == false) &&\r\n        //             (typeof items[i].visible != 'undefined' && items[i].visible == true)\r\n        //         ) {\r\n        //             rows[addIndex].values[items[i].attrcode].isEdit = true;\r\n        //             break;\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    store.setStore('sideBoxConfig', sideBoxConfig);\r\n}\r\n\r\n// TODO 弹窗\r\nexport function closeModel(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let sideBoxConfig = store.getStore('sideBoxConfig') || {};\r\n    sideBoxConfig = { ...sideBoxConfig, show: false, status: 'close' };\r\n    store.setStore('sideBoxConfig', sideBoxConfig);\r\n    //弹出之后，禁止后面的滚动事件\r\n    let html = document.getElementsByTagName('html');\r\n    html[0].style.overflow = '';\r\n\r\n    return false;\r\n}\r\n\r\n//  批改\r\nexport function batchChangeTableData(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return null;\r\n    }\r\n\r\n    return store.batchChangeTableData();\r\n}\r\n\r\n// bbq\r\nexport function setCheckboxDisabled(tableId, index, flag) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    // let rows = getAllRows.call(this, tableId, false);\r\n    // 不包含假删除的数据\r\n    let visibleRows = store.getViewData('filter');\r\n\r\n    if (Array.isArray(index)) {\r\n        let isFlag = true;\r\n        index.forEach(eve => {\r\n            if (visibleRows.length - 1 >= eve && eve >= 0) {\r\n                // rows[eve].disabled = !flag;\r\n                store.setRowProps({ rowIndex: eve }, { disabled: !flag }, false);\r\n            } else {\r\n                isFlag = false;\r\n                warningOnce(false, '所传入的数组中，数值不符合要求');\r\n            }\r\n        });\r\n        if (isFlag) {\r\n            if ([...new Set(index)].length === visibleRows.length) {\r\n                let checkInfo = store.getCheckInfo();\r\n                checkInfo.disabledAll = !flag;\r\n                store.setCheckInfo({ checkInfo, shouldForceUpdate: false });\r\n            }\r\n            store.refresh();\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    } else if (visibleRows.length - 1 >= index && index >= 0) {\r\n        // rows[index].disabled = !flag;\r\n        store.setRowProps({ rowIndex: index }, { disabled: !flag }, true);\r\n        return true;\r\n    }\r\n}\r\n\r\n// bbq\r\nexport function setAllCheckboxAble(tableId, flag) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let checkInfo = store.getCheckInfo();\r\n    checkInfo.disabledAll = !flag;\r\n    store.setCheckInfo({ checkInfo, shouldForceUpdate: false });\r\n\r\n    let data = store.getData();\r\n    let rowKey = store.getTableProps('rowKey');\r\n\r\n    data.forEach(item => {\r\n        store.setRowProps({ rowKeyValue: item[rowKey] }, { disabled: !flag }, false);\r\n    });\r\n\r\n    //  更新\r\n    store.refresh();\r\n}\r\n\r\n// TODO\r\nexport function selectTableRows(tableId, index, flag) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setRowsSelected({ rowIndexs: index }, flag);\r\n}\r\n\r\n// TODO  批改\r\nexport function getTableItemData(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    // {\r\n    //     batchChangeIndex,\r\n    //     batchChangeKey,\r\n    //     batchChangeValue,\r\n    //     batchChangeDisplay,\r\n    // }\r\n\r\n    return store.getCache('oldBatchData');\r\n}\r\n\r\n// bbq\r\nexport function getTablePageInfo(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    let prePageSize = getPageSizeStorage(this.state.meta, tableId);\r\n\r\n    let { pageIndex = 0, pageSize = prePageSize } = store.getPageInfo();\r\n\r\n    return {\r\n        pageIndex: pageIndex > 0 ? pageIndex - 1 : 0,\r\n        pageSize,\r\n    };\r\n}\r\n\r\n// TODO 不明用途的api\r\n// 这个要找刘铭 确认下如何处理\r\nexport function setCheckboxFix(tableId, flag) {\r\n    let store = existenceCheck.call(this, tableId);\r\n\r\n    if (!store) {\r\n        return;\r\n    }\r\n    // myEditTable.checkboxFix = flag;\r\n\r\n    store.refresh();\r\n}\r\n\r\n// TODO 排序\r\nexport function getSortParam(tableId) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store.getStore(['sortParam']);\r\n}\r\n\r\n// TODO  云原生\r\nexport function updateDataByRefresh(tableId, pkname, refreshData, saga_errormesg) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    if (Array.isArray(refreshData)) {\r\n        let data = getAllRows.call(this, tableId, false);\r\n        let refreshLen = refreshData.length;\r\n        data.map((item, index) => {\r\n            let values = item.values;\r\n            for (let i = 0; i < refreshLen; i++) {\r\n                //找到相应行,更新对应字段的value\r\n                if (values[pkname] && values[pkname].value === refreshData[i][pkname]) {\r\n                    for (let pop in refreshData[i]) {\r\n                        if (values[pop]) {\r\n                            values[pop].value = refreshData[i][pop];\r\n                        } else {\r\n                            values[pop] = { value: refreshData[i][pop] };\r\n                        }\r\n\r\n                        //有错误信息时，将错误信息数据放表格行\r\n                        if (pop === 'saga_status' && refreshData[i][pop] === '1' && saga_errormesg) {\r\n                            values.saga_errormesg = saga_errormesg;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            return item;\r\n        });\r\n        store.setData({ data });\r\n    }\r\n}\r\n\r\n// TODO 过滤\r\nexport function saveFilterCustomColData(tableId, { attrcode, rowId, value }) {\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n\r\n    store.setCache(['customColData', attrcode, rowId], value);\r\n\r\n    // const tableScope = this.editTableDataSource[tableId];\r\n    // if (!tableScope) {\r\n    //     warningOnce(false, '当前操作表格实例不存在');\r\n    // }\r\n    // let { filterCustomColData } = tableScope;\r\n    // if (filterCustomColData) {\r\n    //     if (filterCustomColData[attrcode]) {\r\n    //         if (filterCustomColData[attrcode][rowId] !== value) {\r\n    //             // 相同的值不重复赋值\r\n    //             filterCustomColData[attrcode][rowId] = value;\r\n    //         }\r\n    //     } else {\r\n    //         filterCustomColData[attrcode] = {};\r\n    //         filterCustomColData[attrcode][rowId] = value;\r\n    //     }\r\n    // } else {\r\n    //     tableScope['filterCustomColData'] = {};\r\n    //     tableScope['filterCustomColData'][attrcode] = {};\r\n    //     tableScope['filterCustomColData'][attrcode][rowId] = value;\r\n    // }\r\n}\r\n\r\n// liuming excel 新方法\r\nexport function updateAfterBatchChange(param) {\r\n    let { areaCode } = param\r\n    let store = existenceCheck.call(this, areaCode);\r\n    if (!store) { return; }\r\n    return store.updateAfterBatchChange(this, param)\r\n}\r\n//liuming excel 内部使用，不让业务组用\r\nexport function updateAndAddRows(param) {\r\n    let { tableId } = param;\r\n    let store = existenceCheck.call(this, tableId);\r\n    if (!store) {\r\n        return;\r\n    }\r\n    return store._updateAndAddRows(param);\r\n}\r\n\r\n","\r\nimport EditTable from '@platform/edit-table';\r\nimport * as editTableAPI from './compatible';\r\n\r\n//const useEditTable = EditTable.useEditTable;\r\n\r\n// TODO\r\nexport default function editTableCompatible() {\r\n    this.register('editTable'); // 生成 this.editTableDataSource[id]\r\n    return {\r\n        //store: useEditTable,\r\n        ...apiBindPage.call(this, editTableAPI),\r\n    };\r\n}\r\n\r\nfunction apiBindPage(editTableAPI) {\r\n    let res = {};\r\n    for (let key in editTableAPI) {\r\n        res[key] = editTableAPI[key].bind(this);\r\n    }\r\n    return res;\r\n}\r\n\r\neditTableCompatible.component = EditTable;\r\neditTableCompatible.displayName = 'EditTable';\r\neditTableCompatible.unfinished = ['editTableUnFinishedApi'];","// 使用方法回调的方式进行扩展\r\nimport { ViewModel, pageTo, getAppUrl } from '@platform/api'\r\nimport * as feConfig from './const';\r\n\r\n// 这个东西呢  有三种做法  i.变量（get set）  ii.静态变量（static）  iii.全局变量\r\nconst ExtendModuleName = 'NCCExtend';\r\n\r\nconst srcriptAlreadyExist = src => {\r\n    let allScript = document.getElementsByTagName('script');\r\n    let srcriptUrl = Array.from(allScript).map(element => {\r\n        return element.getAttribute('src');\r\n    });\r\n    let index = srcriptUrl.findIndex(val => val === src);\r\n    return index !== -1;\r\n};\r\n//liuming CONFIG引用修改\r\nconst isPageModal = true\r\n/**\r\n * 查找resources加载的文件路径里某一层级的文件名\r\n * n:Number 在resources的第几层\r\n */\r\nfunction getUrlPathName(n) {\r\n    // hash 示例\r\n    // \"ifr=/nccloud/resources/price/price/adjustprice/main/index.html#/list&c=403000800&p=403000800_list&ar=0001Z81000000003QAX4&n=价格调整单&b1=供应链&b2=销售价格&b3=销售调价\"\r\n    let hash = '';\r\n    if (isPageModal) {\r\n        let pageStore = getAppUrl().pageurl;\r\n        hash = decodeURIComponent(decodeURIComponent(pageStore));\r\n    } else {\r\n        hash = decodeURIComponent(decodeURIComponent(window.top.location.hash));\r\n    }\r\n    let matchStr = hash.match(/ifr=\\/nccloud\\/resources\\/(\\S*).html/) || hash.match(/ifr=\\/(\\S*).html/);\r\n    let urlPathArr = matchStr && matchStr[1] && matchStr[1].split('/') || ['none+', 'none+'];\r\n    return urlPathArr[n];\r\n}\r\n\r\n/**\r\n * 获取扩展路径\r\n */\r\nfunction getExtendUrl(billinfo = {}) {\r\n    console.log(billinfo, '页面基础信息');\r\n    let domainCode = getUrlPathName(0),\r\n        moduleCode = getUrlPathName(1),\r\n        appcode = billinfo.appcode || pageTo.getAppCode(),\r\n        pagecode = billinfo.pagecode || pageTo.getPageCode();\r\n    // console.log(domainCode, moduleCode, appcode, pagecode);\r\n    return domainCode && moduleCode && appcode && pagecode ? `extend_${domainCode}/${moduleCode}/${appcode}/${pagecode}` : null;\r\n}\r\n\r\nclass MethodsModel {\r\n    constructor() {\r\n        // TODO  暂不处理\r\n    }\r\n\r\n    // 加载文件 mutativeLoadScrip\r\n    install(callback, { billinfo }) {\r\n        if (!feConfig.enable) {\r\n            console.log('本页面禁止加载二开文件~');\r\n            return false;\r\n        }\r\n        // 缓存数据\r\n        this.billinfo = billinfo;\r\n        //加载二开的文件--liuxis\r\n        let extendUrl = getExtendUrl(billinfo);\r\n        if (extendUrl) {\r\n            let src = `../../../../${ExtendModuleName}/${extendUrl}/index.js`;\r\n            let extendPath = `${ExtendModuleName}/${extendUrl}/index`;\r\n            console.log(src);\r\n            let NCCExtendAlreadyExist = srcriptAlreadyExist(src);\r\n            if (!NCCExtendAlreadyExist) { //如果一个页面使用多个createPage，只加载一次二开文件\r\n                let script = document.createElement('script');\r\n                script.type = 'text/javascript';\r\n                script.src = src;\r\n                /**readyStaprefer/refer.te:\r\n                 *  uninitialized: 默认状态\r\n                    loading: 开始加载\r\n                    loaded: 加载完成\r\n                    interactive: 加载完成但尚不可用\r\n                    complete: 所有数据已经准备好\r\n                 */\r\n                if (script.readyState) {\r\n                    script.addEventListener('readstatechange', readStateChange);\r\n                } else {\r\n                    script.addEventListener('load', saveMethods);\r\n                }\r\n                script.addEventListener('error', onError);\r\n                function readStateChange() {\r\n                    if (script.readyState === 'loaded' || script.readyState === 'complete') {\r\n                        script.removeEventListener('readstatechange', readStateChange);\r\n                    }\r\n                }\r\n                function onError() {\r\n                    // document.body.removeChild(script);\r\n                    console.log('file load error NCCExtend ' + src);\r\n                }\r\n                function saveMethods() {\r\n                    let allMethods = null;\r\n                    // 二开注册对象 export default 输出\r\n                    if (window[extendPath] instanceof Object && window[extendPath].default instanceof Object) {\r\n                        allMethods = window[extendPath].default;\r\n                    } else if (window[ExtendModuleName] instanceof Object) { //二开注册对象挂在 window.NCCExtend\r\n                        allMethods = window[ExtendModuleName];\r\n                    }\r\n                    // if (window[ExtendModuleName] instanceof Object) {\r\n                    if (allMethods) {\r\n                        // 提供两个方法给  模板加载和数据加载使用\r\n                        if (allMethods.dataAlreadyLoaded && typeof allMethods.dataAlreadyLoaded === 'function') {\r\n                            ViewModel.dataAlreadyLoaded = allMethods.dataAlreadyLoaded;\r\n                        }\r\n                        if (allMethods.templateAlreadyLoaded && typeof allMethods.templateAlreadyLoaded === 'function') {\r\n                            ViewModel.templateAlreadyLoaded = allMethods.templateAlreadyLoaded;\r\n                        }\r\n                        if (allMethods.beforeAjaxSend && typeof allMethods.beforeAjaxSend === 'function') {\r\n                            ViewModel.beforeAjaxSend = allMethods.beforeAjaxSend;\r\n                        }\r\n\r\n                        if (allMethods.localExtendRouter && typeof allMethods.localExtendRouter === 'function') {\r\n                            ViewModel.localExtendRouter = allMethods.localExtendRouter;\r\n                        }\r\n                        callback(allMethods);\r\n                    }\r\n                }\r\n                try {\r\n                    document.body && document.body.appendChild(script);\r\n                    // script = null;\r\n                } catch (e) {\r\n                    console.log('script load error , not found src');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // 移除文件\r\n    removeScript(src) {\r\n        let $script = document.querySelector(`[src=\"${src}\"]`);\r\n        $script && document.body.removeChild($script);\r\n    }\r\n\r\n    // 卸载文件\r\n    unstall() {\r\n        // TODO 卸载二开文件\r\n        //销毁二开绑定在window上的事件\r\n        let extendUrl = getExtendUrl(this.billinfo);\r\n        if (extendUrl) {\r\n            // let name = `NCCExtend${appcode}_${pagecode}`;\r\n            if (window[ExtendModuleName]) window[ExtendModuleName] = null;\r\n            this.removeScript(`../../../../${ExtendModuleName}/${extendUrl}/index.js`);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MethodsModel;","// 用于二次开发的快速扩展封装\r\n\r\nimport MethodsModel from './methodsModel';\r\n\r\nlet fastExtend = new MethodsModel();\r\n\r\nexport default fastExtend;\r\n\r\n// demo 在价格调整单","import React, { Component } from 'react';\r\n\r\nimport formCompatible from './Form/output';\r\nimport cardTableCompatible from './Table/appTable/CardTable/output';\r\nimport simpleTableCompatible from './Table/appTable/SimpleTable/output';\r\nimport editTableCompatible from './Table/appTable/EditTable/output';\r\nimport TransferTable from '@platform/transfer-table';\r\nimport treeTableCompatible from '@platform/tree-table';\r\n// import searchCompatible from './Search/output';\r\n\r\nimport {\r\n    pageTo,\r\n    isObj,\r\n    isUndefined,\r\n    isFunction,\r\n    isIE,\r\n    ViewModel,\r\n    delEmptyData,\r\n    getMetaKey,\r\n    gzip as Gzip,\r\n    ajax,\r\n    getMultiLang,\r\n    findFocusModuleId,\r\n    executeAutoFocus,\r\n    controlAutoFocus,\r\n    getFocusRowIndex,\r\n    getAuthorityOfNotification,\r\n    noticeToUser,\r\n    setGlobalStorage,\r\n    getGlobalStorage,\r\n    getAppReqParam,\r\n    formDownload,\r\n    PubSub,\r\n    sum,\r\n} from '@platform/api';\r\n\r\nimport fastExtend from '../FastExtend';\r\nimport { getCheckedExtendMethod, feConfigName, getCheckedMethod } from '../FastExtend/utils';\r\n\r\nimport {\r\n    Socket,\r\n    CrossServiceBtns,\r\n    Button,\r\n    ButtonApp,\r\n    CardPagination,\r\n    BillHeadInfo,\r\n    InsertTable,\r\n    AsyncTree,\r\n    SyncTree,\r\n    CreateModal,\r\n    CreateNCModal,\r\n    DragWidthCom,\r\n    CreateSearch,\r\n    mutiInit,\r\n    promptBox,\r\n} from '@platform/components';\r\n\r\nimport Qs from 'qs';\r\n\r\nfunction outputWrapper(name, EXPORTS) {\r\n    let output = {};\r\n    !Array.isArray(EXPORTS) && (EXPORTS = [EXPORTS]);\r\n    EXPORTS.forEach(EXPORT => {\r\n        if (EXPORT) {\r\n            Object.keys(EXPORT).forEach(key => {\r\n                output[key] = EXPORT[key].bind(this);\r\n            })\r\n        } else {\r\n            console.warn(`${name}组件没有加载`)\r\n        }\r\n    })\r\n    return output;\r\n}\r\n\r\nexport default ({\r\n    initTemplate,\r\n    mutiLangCode,\r\n    billinfo, //界面同时存在一个billtype类型object;或者多个billtype  array\r\n    domainName,\r\n    hashChangeCallBack,\r\n    relationAfterEventCallBack,\r\n    orderOfHotKey,\r\n    appAutoFocus,\r\n    historyBack,\r\n} = {}) => App => {\r\n    class Page extends Component {\r\n        use = { search() { } }\r\n\r\n        componentNames = [];\r\n\r\n        register = (name, store) => {\r\n            this.componentNames.push(name);\r\n            this.use[name] = this.use[name] || ((...ids) => {\r\n                ids.forEach(id => {\r\n                    this[name + 'DataSource'] = this[name + 'DataSource'] || {};\r\n                    this[name + 'DataSource'][id] = this[name + 'DataSource'][id] || (store || this[name]._store)();\r\n                })\r\n            })\r\n        }\r\n\r\n        // 数据\r\n        formDataSource = {};\r\n        simpleTableDataSource = {};\r\n        editTableDataSource = {};\r\n        cardTableDataSource = {};\r\n        searchDataSource = {};\r\n        treeTableDataSource = {};\r\n        metaData = {}\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.myState = {\r\n                oprationIndex: -1, // 存注册后的按钮数据\r\n                buttonsComponent: {},\r\n                buttonsLangJson: {\r\n                    lang: null,\r\n                    intl: null,\r\n                },\r\n                stopOprationBtnsRenderAreas: {}, // 存放禁止操作列render的区域\r\n                oprationButtons: {},\r\n                appButtons: {},\r\n                buttons: [], // 存注册后的按钮数据\r\n                btnInfo: {}, // 存放按钮的显示隐藏，禁用状态，主要次要，弹窗提示等信息\r\n                transferTable: {\r\n                    totalTemplateKeys: {\r\n                        columns: [],\r\n                        bodyColumn: [],\r\n                        fullColumns: [],\r\n                    },\r\n                },\r\n                status: {\r\n                    totalStatusOfTransferTable: false,\r\n                    headTotalStatusOfTransferTable: false,\r\n                    fullTotalStatusOfTransferTable: false,\r\n                    bodyTotalStatusOfTransferTable: false,\r\n                    traversalStatus: false, // 遍历状态\r\n                },\r\n                intl: {}, // 放置多语\r\n                jsonIntl: {}, // 放置多语\r\n                transferList: {}, // 下游转单\r\n                search: { keySessionS: [] },\r\n            };\r\n            //存储表单组件this\r\n            this.myForm = {};\r\n\r\n            //云原生--出错时渲染按钮区\r\n            this.myCrossServiceBtn = {};\r\n            //云原生--暂时按钮状态值\r\n            this.myCrossServiceState = {};\r\n            //云原生--错误单据交互，存单据整体信息\r\n            this.nativeSocketBillInfo = {};\r\n            this.syncTreeDataSource = {};\r\n            this.asyncTreeDataSource = {};\r\n\r\n            //全局的pagecode参数\r\n            this.globalPageCode = '';\r\n            if (billinfo && billinfo.pagecode) {\r\n                this.globalPageCode = billinfo.pagecode;\r\n            }\r\n\r\n            // 业务组在进行页面跳转时候传递的hash参数\r\n            this.hashChangeCallBack = hashChangeCallBack;\r\n\r\n            //注册平台编辑后回调\r\n            this.relationAfterEventCallBack = relationAfterEventCallBack;\r\n\r\n            //存储翻页组件this\r\n            this.myCardPagination;\r\n\r\n            this.myTable = { myEditTable: {}, myMulTable: {} }; //用来存储表格中，tableId 对应的 表格组件 \r\n            this.myTableData = { myEditData: {}, myMulData: {} }; //用来存储表格当没有获取ref时的表格数据的\r\n\r\n            // 多组件间的信息交流控制器\r\n            this.infoExchangeController = {\r\n                // 这个方法无用了  嗯 别问我为什么不删  大概是回忆吧\r\n                // 里面存放一些组件之间的通信信息  这个目前用于  查询区组件和表格之类的组件进行沟通\r\n                onHeightChange: area => {\r\n                    if (!area) {\r\n                        // area 包括 'search' 'page' table 等\r\n                        return false;\r\n                    }\r\n                },\r\n                // 把 PubSub 挂进来更好\r\n                ...PubSub,\r\n            };\r\n\r\n            /**\r\n                 *\r\n                 * @type {{\r\n                 *  orderOfHotKey: type Array, 用于排列tabChange的顺序\r\n                 *  withHotKeyChange: type Boolean 是否使用hotKey的开关\r\n                 *  }}\r\n                 */\r\n            this.orderOfHotKey = orderOfHotKey || [];\r\n            this.withHotKeyChange = this.orderOfHotKey.length > 0;\r\n            // add by bbqin 当前页面是否自动聚焦\r\n            this.appAutoFocus = appAutoFocus !== false;\r\n\r\n            //业务组控制执行自动聚焦的时机 false -> 平台控制， true -> 业务组控制\r\n            this.autoFocusDeferred = false;\r\n\r\n            this.state = {\r\n                status,\r\n                meta: {},\r\n                form: {},\r\n                cardPagination: {},\r\n                formBack: {},\r\n                formGroupData: {},\r\n                showFormIcon: {},\r\n                groupsId: [],\r\n                button: {}, // 存createButton 创建的按钮\r\n                buttons: [], // 存注册后的按钮数据\r\n                btnInfo: {}, // 存放按钮的显示隐藏，禁用状态，主要次要，弹窗提示等信息\r\n                table: {},\r\n                anchorNav: {},\r\n                dragDown: {},\r\n                insertTable: {}, //嵌套类型表格\r\n                transferTable: {}, //转单表格\r\n                transferList: {}, //转单列表\r\n\r\n                renderItem: {},\r\n                treeData: {},\r\n                modal: {},\r\n                tableModeldata: {},\r\n                treeTableCol: {},\r\n                referItem: {},\r\n                intl: {},\r\n\r\n                formItemWidth: {},\r\n                autoFocusFormItem: {},\r\n                // uploader: {}, // 上传组件\r\n                tabOrder: [],\r\n                tab: '',\r\n                tabData: {},\r\n            };\r\n\r\n            this.billinfo = billinfo;\r\n            this.currentBill = {};\r\n            this.context = {};\r\n            this.formItemAttrFlag = {};\r\n\r\n            //以下是提供给业务组的方法\r\n            this.meta = {\r\n                getMeta: () => {\r\n                    // 兼容一下数据被引用导致的错误  by bbqin\r\n                    let meta = this.state.meta,\r\n                        res = {};\r\n                    for (let key of Object.keys(meta)) {\r\n                        // res[key] = JSON.parse(JSON.stringify(meta[key]));\r\n                        res[key] = meta[key];\r\n                        if (meta[key] && meta[key].items) {\r\n                            if (meta[key].moduletype === 'table') {\r\n                                res[key].items = meta[key].items.get ? meta[key].items.get() : meta[key].items; // getArrayData\r\n                            }\r\n                            // 表单处理 因为区分主子表 所以 逻辑有问题 暂时先不处理\r\n                            if (meta[key].moduletype === 'form') {\r\n                                let DataSource = this['formDataSource'] || {},\r\n                                    currentSource = {};\r\n                                // 当前store是否存在 是否为主表ID \r\n                                if (DataSource[key]) {\r\n                                    currentSource = DataSource[key]\r\n                                } else {\r\n                                    // 不存在时 判断是否为子表ID, 找到子表ID对应的主表ID;\r\n                                    let formrelation = (meta && meta.formrelation) || {};\r\n                                    Object.keys(formrelation).forEach(item => {\r\n                                        if (Array.isArray(formrelation[item]) && formrelation[item].includes(key) && DataSource[item]) {\r\n                                            currentSource = DataSource[item]\r\n                                        } else {\r\n                                            // 暂时先移除 页签字段 todo\r\n                                            // 多页签数据处理 假如不是子表时  需进行判断是否为多页签子表 \r\n                                            let formassociatedrelation = (meta && meta.formassociatedrelation) || {};\r\n                                            Object.keys(formassociatedrelation).forEach(tabsID => {\r\n                                                if (Array.isArray(formassociatedrelation[tabsID].formtabs) && formassociatedrelation[tabsID].formtabs.includes(item)) {\r\n                                                    currentSource = DataSource[tabsID]\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                }\r\n                                // 初始化之后才进行 根据store 取值 为初始化  还是根据meta 自身状态\r\n                                if (currentSource && typeof currentSource.getMetaItems == 'function') {\r\n                                    let currentItems = currentSource.getMetaItems(key) || [];\r\n                                    if (currentItems.length !== 0) {\r\n                                        // 能取到items 再把items复值给items 取不到就使用原有meta数据\r\n                                        res[key].items = currentItems\r\n                                    }\r\n                                } else {\r\n                                    res[key].items = meta[key].items;\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    return res;\r\n                },\r\n                setMeta: (meta, callback) => {\r\n\r\n                    Object.keys(meta).forEach(id => {\r\n                        if (meta[id] && meta[id].moduletype) {\r\n                            this.componentNames.find(name => {\r\n                                let dataSources = this[name + 'DataSource'];\r\n                                if (dataSources && dataSources[id]) {\r\n                                    // 使用use方法注册过的话，会有dataSource[id]\r\n                                    // TODO:meta的格式\r\n                                    dataSources[id].setMeta(meta, id, false, this.app_context);\r\n                                    return true;\r\n                                }\r\n                            })\r\n                        }\r\n                    });\r\n                    this.setState({ meta }, () => {\r\n                        callback && callback();\r\n                    });\r\n                },\r\n                addMeta: (meta, callback) => {\r\n                    // 如果是属性 gridrelation / formrelation 要合并而不是覆盖\r\n                    if (meta.gridrelation && this.state.meta.gridrelation) {\r\n                        for (let pop in this.state.meta.gridrelation) {\r\n                            if (!meta.gridrelation[pop]) {\r\n                                meta.gridrelation[pop] = this.state.meta.gridrelation[pop];\r\n                            }\r\n                        }\r\n                    }\r\n                    if (meta.formrelation && this.state.meta.formrelation) {\r\n                        for (let pop in this.state.meta.formrelation) {\r\n                            if (!meta.formrelation[pop]) {\r\n                                meta.formrelation[pop] = this.state.meta.formrelation[pop];\r\n                            }\r\n                        }\r\n                    }\r\n                    if (meta.containerrelation && this.state.meta.containerrelation) {\r\n                        for (let pop in this.state.meta.containerrelation) {\r\n                            if (!meta.containerrelation[pop]) {\r\n                                meta.containerrelation[pop] = this.state.meta.containerrelation[pop];\r\n                            }\r\n                        }\r\n                    }\r\n                    // 表单多页签关联关系  要合并而不是覆盖\r\n                    if (meta.formassociatedrelation && this.state.meta.formassociatedrelation) {\r\n                        for (let pop in this.state.meta.formassociatedrelation) {\r\n                            if (!meta.formassociatedrelation[pop]) {\r\n                                meta.formassociatedrelation[pop] = this.state.meta.formassociatedrelation[pop];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this.meta.setMeta(Object.assign(this.state.meta, meta), callback)\r\n                },\r\n                removeMeta: meta => {\r\n                    if (this.state.meta.hasOwnProperty(meta)) {\r\n                        delete this.state.meta[meta];\r\n                        this.setState({ meta: this.state.meta });\r\n                    }\r\n                },\r\n                // 上面这个预留 多表头将来会写到meta中使用\r\n                multipleMeta: data => {\r\n                    let gridMultiple = data.gridMultiple;\r\n                    if (gridMultiple) {\r\n                        let tempArr = Object.keys(gridMultiple);\r\n                        if (tempArr.length) {\r\n                            tempArr.forEach(item => {\r\n                                // item为每个键id  如 revecont_b\r\n                                let mulArrItem = data.gridMultiple[item];\r\n                                mulArrItem.map(one => {\r\n                                    let d = {\r\n                                        label: one.name,\r\n                                        attrcode: one.code,\r\n                                        visible: true,\r\n                                        children: [],\r\n                                    };\r\n                                    let flag = {};\r\n                                    one.children.map(everyOne => {\r\n                                        // everyOne 为数组的每个元素\r\n                                        data[item].items.map((meta, index) => {\r\n                                            if (meta.attrcode == everyOne) {\r\n                                                d.children.push(meta);\r\n                                                if (!flag[item]) {\r\n                                                    data[item].items.splice(index, 1, d);\r\n                                                } else {\r\n                                                    data[item].items.splice(index, 1);\r\n                                                }\r\n                                                flag[item] = true;\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                    return data;\r\n                },\r\n                // 多表头结构处理\r\n                handleMultiple: (data, relation) => {\r\n                    if (relation) {\r\n                        let tempArr = Object.keys(relation);\r\n                        if (tempArr.length) {\r\n                            tempArr.forEach(item => {\r\n                                // item为每个键id  如 revecont_b\r\n                                let mulArrItem = relation[item];\r\n                                mulArrItem.map(one => {\r\n                                    this.meta.handleChildMultiple(data, item, one);\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                    return data;\r\n                },\r\n                // 多表头递归处理多级表头 zhanghengh\r\n                handleChildMultiple: (data, item, one, first = true) => {\r\n                    const visible = isUndefined(one.visible) ? true : !!one.visible;\r\n                    let d = {\r\n                        label: one.name,\r\n                        attrcode: one.code,\r\n                        visible,\r\n                        children: [],\r\n                    };\r\n                    let flag = {};\r\n                    one.children.map(everyOne => {\r\n                        data[item].items.map((meta, index) => {\r\n                            if (meta.attrcode == everyOne) {\r\n                                d.children.push(meta);\r\n                                if (first && !flag[item]) {\r\n                                    data[item].items.splice(index, 1, d);\r\n                                } else {\r\n                                    data[item].items.splice(index, 1);\r\n                                }\r\n                                flag[item] = true;\r\n                            } else if (isObj(everyOne) && everyOne.hasOwnProperty('children')) {\r\n                                let multipleItem = this.meta.handleChildMultiple(data, item, everyOne, false);\r\n                                if (multipleItem.children.length > 0) {\r\n                                    d.children.push(multipleItem);\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                    return d;\r\n                },\r\n                // 以下是wangtaos为司库云-C添加，误删\r\n                renderTabs: (meta, tabOrder, showTab, callback) => {\r\n                    showTab = showTab && Array.isArray(showTab) ? showTab : tabOrder;\r\n                    meta.gridrelation[(tabOrder && tabOrder[0]) || 'tab'].tabRelation = [...showTab];\r\n                    meta.gridrelation['extra_&&&'] = { ...meta.gridrelation[(tabOrder && tabOrder[0]) || 'tab'] };\r\n                    meta['extra_&&&'] = { items: [] };\r\n                    this.setState(\r\n                        {\r\n                            meta,\r\n                            tabOrder,\r\n                            tab: showTab[0],\r\n                        },\r\n                        () => {\r\n                            callback && callback();\r\n                        },\r\n                    );\r\n                },\r\n            };\r\n            this.primordialTable = {}; //用来存储通过ref获取到的原生table\r\n            this.batchData = {}; //用来存储批量修改的每个表格的数据\r\n            this.editTableInitValue = {};\r\n            this.tableChangedRowsOldValue = {}; // 以id划分对象\r\n            this.formOldValues = {};\r\n            this.formItemAttrFlag = {};\r\n            this.formStatusFlag = {};\r\n            this.formSetFormValues = {};\r\n            this.formsetFormVisible = {};\r\n            this.setFormVisibleByForm = {};\r\n\r\n            this.copyMetaBeforePkorg = {};\r\n\r\n            // 方法\r\n            this.form = getCompatibleApi.call(this, formCompatible);\r\n            this.table = getCompatibleApi.call(this, simpleTableCompatible)\r\n            this.editTable = getCompatibleApi.call(this, editTableCompatible)\r\n            this.cardTable = getCompatibleApi.call(this, cardTableCompatible)\r\n            // this.search = getCompatibleApi.call(this, searchCompatible)\r\n\r\n            //\t树状表组件\r\n            // this.treeTableManyCol = outputWrapper.call(this, 'treeTableManyCol', treeTableCompatible);\r\n            this.treeTableManyCol = getCompatibleApi.call(this, treeTableCompatible);\r\n\r\n            this.search = outputWrapper.call(this, 'search', CreateSearch)\r\n\r\n            this.cardPagination = outputWrapper.call(this, 'cardPagination', CardPagination)\r\n\r\n            this.BillHeadInfo = outputWrapper.call(this, 'BillHeadInfo', BillHeadInfo);\r\n\r\n            this.socket = outputWrapper.call(this, 'socket', Socket);\r\n\r\n            this.button = outputWrapper.call(this, 'button', [CrossServiceBtns, Button, ButtonApp])\r\n\r\n            // 上传下载\r\n            // this.Uploader = Uploader.bind(this);\r\n\r\n            // 可拖拽宽度的dom盒子组件\r\n            this.DragWidthCom = DragWidthCom;\r\n\r\n            //简单搜索\r\n            //内置新增，refer及其他条件查询\r\n\r\n            //嵌套类型表格\r\n            this.insertTable = outputWrapper.call(this, 'insertTable', InsertTable);\r\n\r\n            //拉单-已选列表\r\n            this.transferTable = outputWrapper.call(this, 'transferTable', TransferTable);\r\n\r\n            //创建异步树组件\r\n            this.asyncTree = outputWrapper.call(this, 'asyncTree', AsyncTree)\r\n\r\n            //创建同步树组件\r\n            this.syncTree = outputWrapper.call(this, 'syncTree', SyncTree);\r\n\r\n            // 下载组件\r\n            this.downLoad = ({ data, url }) => {\r\n                formDownload({ params: data, url, enctype: 1 })\r\n            };\r\n\r\n            // 审批流程图组件\r\n            // this.approveDetail = { create: approveDetail.bind(this) };\r\n\r\n            //简单提示框组件\r\n            this.modal = outputWrapper.call(this, 'modal', CreateModal);\r\n\r\n            // 带四种提示符框组件\r\n            this.NCmodal = outputWrapper.call(this, 'NCmodal', CreateNCModal)\r\n\r\n            // 用自定义组件替换表单组件\r\n            this.renderItem = (moduletype, moduleId, id, newItem) => {\r\n                // 暂时先处理表单\r\n                if (moduletype === 'form') {\r\n                    let DataSource = this[moduletype + 'DataSource'] || {},\r\n                        currentSource = {};\r\n                    // 当前store是否存在 是否为主表ID \r\n                    if (DataSource[moduleId]) {\r\n                        currentSource = DataSource[moduleId]\r\n                    } else {\r\n                        // 不存在时 判断是否为子表ID, 找到子表ID对应的主表ID;\r\n                        let formrelation = this.state.meta && this.state.meta.formrelation;\r\n                        formrelation && Object.keys(formrelation || {}).forEach(item => {\r\n                            if (Array.isArray(formrelation[item]) && formrelation[item].includes(moduleId) && DataSource[item]) {\r\n                                currentSource = DataSource[item]\r\n                            }\r\n                        })\r\n                    }\r\n                    // let dataSources = this[moduletype + 'DataSource'][moduleId] || { replaceItem: () => { } };\r\n                    typeof currentSource.replaceItem == 'function' && currentSource.replaceItem(id, newItem)\r\n                } else {\r\n                    let { renderItem } = this.state;\r\n                    this.state.renderItem[moduletype] = this.state.renderItem[moduletype] || {};\r\n                    this.state.renderItem[moduletype][moduleId] = this.state.renderItem[moduletype][moduleId] || {};\r\n                    this.state.renderItem[moduletype][moduleId][id] = newItem;\r\n                    this.setState({ renderItem });\r\n                }\r\n            };\r\n\r\n            //得到页面所有数据\r\n            this.getPageDataByMeta = () => {\r\n                let metaObj = this.meta.getMeta();\r\n                let saveData = {};\r\n                for (let id in metaObj) {\r\n                    if (metaObj[id].moduletype && metaObj[id].moduletype === 'form') {\r\n                        saveData[id] = this.form.getAllFormValue(id);\r\n                    } else if (metaObj[id].moduletype && metaObj[id].moduletype === 'table') {\r\n                        saveData[id] = this.editTable.getAllRows(id);\r\n                    }\r\n                }\r\n                return saveData;\r\n            };\r\n\r\n            //创建主子表数据\r\n            this.createMasterChildData = (pageid, head_code, body_code, tabletype, rows) => {\r\n                let saveData = {\r\n                    pageid,\r\n                    head: {},\r\n                    body: {},\r\n                };\r\n                let metaObj = this.meta.getMeta();\r\n                //saveData.templetid = metaObj.pageid && metaObj.pageid;\r\n                if (this.currentBill && this.currentBill.templetid) {\r\n                    saveData.templetid = this.currentBill.templetid;\r\n                } else {\r\n                    saveData.templetid = metaObj.pageid && metaObj.pageid;\r\n                }\r\n                if (metaObj[head_code] && metaObj[head_code].moduletype && metaObj[head_code].moduletype === 'form') {\r\n                    saveData.head[head_code] = this.form.getAllFormValue(head_code);\r\n                    saveData.head[head_code].areacode = head_code;\r\n                }\r\n                if (metaObj[body_code] && metaObj[body_code].moduletype && metaObj[body_code].moduletype === 'table') {\r\n                    if (rows) {\r\n                        saveData.body[body_code] = {\r\n                            areaType: 'table',\r\n                            rows,\r\n                            areacode: null,\r\n                        };\r\n                    } else {\r\n                        if (tabletype && tabletype === 'editTable') {\r\n                            saveData.body[body_code] = this.editTable.getAllData(body_code);\r\n                        } else {\r\n                            saveData.body[body_code] = this.cardTable.getAllData(body_code);\r\n                        }\r\n                    }\r\n                    saveData.body[body_code].areacode = body_code;\r\n                }\r\n                return saveData;\r\n            };\r\n\r\n            //sikuyun创建主子表数据,wangtaos添加\r\n            this.createTabsMasterChildData = (pageid, head_code, body_code) => {\r\n                let saveData = {\r\n                    pageid,\r\n                    head: {},\r\n                    body: {},\r\n                };\r\n                let metaObj = this.meta.getMeta();\r\n                saveData.templetid = metaObj.pageid && metaObj.pageid;\r\n                if (metaObj[head_code] && metaObj[head_code].moduletype && metaObj[head_code].moduletype === 'form') {\r\n                    saveData.head[head_code] = this.form.getAllFormValue(head_code);\r\n                    saveData.head[head_code].areacode = head_code;\r\n                }\r\n                if (metaObj[body_code] && metaObj[body_code].moduletype && metaObj[body_code].moduletype === 'table') {\r\n                    saveData.body[body_code] = this.cardTable.getAllTabsData(body_code);\r\n\r\n                    saveData.body[body_code].areacode = body_code;\r\n                }\r\n                return saveData;\r\n            };\r\n\r\n            //创建主子表简化数据\r\n            this.createMasterChildDataSimple = (pageid, head_code, body_code, tabletype, isDeleteEmptyItem=false) => {\r\n                let saveData = {\r\n                    pageid,\r\n                    head: {},\r\n                    body: {},\r\n                };\r\n                let metaObj = this.meta.getMeta();\r\n                //saveData.templetid = metaObj.pageid && metaObj.pageid;\r\n                if (this.currentBill && this.currentBill.templetid) {\r\n                    saveData.templetid = this.currentBill.templetid;\r\n                } else {\r\n                    saveData.templetid = metaObj.pageid && metaObj.pageid;\r\n                }\r\n                if (metaObj[head_code] && metaObj[head_code].moduletype && metaObj[head_code].moduletype === 'form') {\r\n                    //saveData.head[head_code] = deleteEmptyData(this.form.getAllFormValue(head_code));\r\n                    saveData.head[head_code] = this.form.getAllFormValueSimple(head_code);\r\n                    saveData.head[head_code].areacode = head_code;\r\n                }\r\n\r\n                if (metaObj[body_code] && metaObj[body_code].moduletype && metaObj[body_code].moduletype === 'table') {\r\n                    if (tabletype && tabletype === 'editTable') {\r\n                        // inner_use 为平台内部使用方案，否则为资产使用方案(叶勋)\r\n                        saveData.body[body_code] = delEmptyData(this.editTable.getAllData(body_code), 'inner_use', isDeleteEmptyItem);\r\n                    } else {\r\n                        saveData.body[body_code] = delEmptyData(this.cardTable.getAllData(body_code), 'inner_use', isDeleteEmptyItem);\r\n                    }\r\n\r\n                    saveData.body[body_code].areacode = body_code;\r\n                }\r\n                return saveData;\r\n            };\r\n\r\n            this.requestMeta = (data, appcode, pagecode, callback, ssc_templetid, isCache = true, urlAppcode) => {\r\n                //更新pagecode，createUIDOM传过来的pagecode优先级高于billinfo\r\n                this.globalPageCode = pagecode;\r\n\r\n                let reqData = [\r\n                    {\r\n                        rqUrl: '/platform/templet/querypage.do',\r\n                        rqJson: `{\\n  \\\"pagecode\\\": \\\"${pagecode}\\\",\\n  \\\"appcode\\\": \\\"${appcode}\\\"\\n}`,\r\n                        rqCode: 'template',\r\n                    },\r\n                    {\r\n                        rqUrl: '/platform/appregister/queryallbtns.do',\r\n                        rqJson: `{\\n  \\\"pagecode\\\": \\\"${pagecode}\\\",\\n  \\\"appcode\\\": \\\"${appcode}\\\"\\n}`,\r\n                        rqCode: 'button',\r\n                    },\r\n                    {\r\n                        rqUrl: '/platform/appregister/queryappcontext.do',\r\n                        rqJson: `{\\n  \\\"appcode\\\": \\\"${urlAppcode || appcode}\\\"}`,\r\n                        rqCode: 'context',\r\n                    },\r\n                ];\r\n                if (ssc_templetid) {\r\n                    reqData[0] = {\r\n                        rqUrl: '/platform/templet/querypage.do',\r\n                        rqJson: `{\\n  \\\"pagecode\\\": \\\"${pagecode}\\\",\\n  \\\"appcode\\\": \\\"${appcode}\\\",\\n  \\\"templetid\\\": \\\"${ssc_templetid}\\\"\\n}`,\r\n                        rqCode: 'template',\r\n                    };\r\n                }\r\n                if (data && data.reqDataQuerypage) {\r\n                    reqData[0] = data.reqDataQuerypage;\r\n                }\r\n\r\n                if (data && data.reqDataQueryallbtns) {\r\n                    reqData[1] = data.reqDataQueryallbtns;\r\n                }\r\n\r\n                //querypage: compareTs: true时,模板改变时，会返回模板数据，否则返回 false\r\n                let storeCipher = localStorage.getItem('storeCipher') != '0';\r\n                //let keySessionS = 'appTempletStorage_' + appcode + '_' + pagecode;\r\n                let keySessionS = getMetaKey(appcode, pagecode);\r\n                let g = new Gzip();\r\n                this.myState.search.keySessionS.push(keySessionS);\r\n                let meta = {};\r\n\r\n                //先判断有无缓存，有缓存，再查一下模板是不是被改过，改过更新缓存，没改什么也不做；若无缓存，不带走ts发请求查询\r\n                if (isCache) {\r\n                    //业务需要缓存\r\n                    meta = getGlobalStorage('localStorage', keySessionS);\r\n                    //先解密后 解压\r\n                    if (storeCipher) {\r\n                        //meta = meta && decrypt(meta, aeskey)\r\n                        meta = meta && g.unzip(meta);\r\n                    } else {\r\n                        meta = meta && JSON.parse(meta);\r\n                    }\r\n\r\n                    if (meta) {\r\n                        //有缓存\r\n                        //查看是否需要更新缓存：\r\n                        let ts = '';\r\n                        if (meta.template && meta.template.ts) {\r\n                            ts = meta.template.ts;\r\n                        }\r\n                        //先将meta给业务组使用，若\r\n                        // //抛给业务组使用，待更新模板更新后，再调用一次业务处理meta方法\r\n                        // // 二开回调\r\n                        // getCheckedExtendMethod(this, 'templateAlreadyLoaded')(meta);\r\n                        // if (meta.template && typeof callback == 'function') {\r\n                        //     callback(meta);  //业务组回调中做了提示，会导致业务组的回调调用多次 提示可以            \r\n                        // }\r\n\r\n                        //加载断层问题，暂时先更新一次meta; 待后台ts不同时 不再返回button和context再优化\r\n                        //if (meta.template) {\r\n                            // let storeMeta = JSON.parse(JSON.stringify(meta));\r\n                            // //使用 addMeta 防止业务之前有setMeta\r\n                            // this.app_context = storeMeta.context;\r\n                            // this.meta.setMeta(storeMeta.template);\r\n                            /**\r\n                             * 直接setMeta 不调用业务回调会引起的问题：\r\n                             * setMeta后，会调用createForm 表单会取一次status \r\n                             * 判断完ts后再执行 业务回调，业务代码修改了区域的status，不会再生效\r\n                             * 解决方案：1. 表单获取meta status的时候 做判断，有该属性，且没有使用API setStatus时，再去meta的status\r\n                             * 2.业务统一用法：所有组件改变状态都使用组件的API进行更新\r\n                             */\r\n                        //}\r\n                        reqData[0].rqJson = `{\\n  \\\"pagecode\\\": \\\"${pagecode}\\\",\\n  \\\"appcode\\\": \\\"${appcode}\\\"\\n, \\n  \\\"compareTs\\\":true\\n, \\n  \\\"ts\\\":\\\"${ts}\\\"\\n}`;\r\n                        this.refreshMeta(g, meta, reqData, callback, storeCipher, keySessionS, appcode, pagecode, true);\r\n                    } else {\r\n                        //无缓存，不带ts发请求，查询模板数据\r\n                        this.refreshMeta(g, {}, reqData, callback, storeCipher, keySessionS, appcode, pagecode, false);\r\n                    }\r\n                } else {\r\n                    //业务不要缓存\r\n                    this.refreshMeta(g, {}, reqData, callback, storeCipher, keySessionS, appcode, pagecode, false);\r\n                }\r\n            };\r\n\r\n            this.refreshMeta = (gzip, cacheMeta, reqData, callback, storeCipher, keySessionS, appcode, pagecode, isExeCacheMeta) => {\r\n                ajax({\r\n                    url: '/nccloud/platform/pub/mergerequest.do',\r\n                    data: reqData,\r\n                    sysAppcode: appcode,\r\n                    success: res => {\r\n                        if (res.data) {\r\n                            let jsonMeta = '';\r\n                            this.app_context = res.data.context;\r\n                            cacheMeta.context = res.data.context;\r\n\r\n                            //更新按钮\r\n                            cacheMeta.button = res.data.button;\r\n\r\n                            if (res.data.template) {\r\n                                let meta = res.data;\r\n\r\n                                //将 appcode 和 pagecode 挂在区域上\r\n                                let MetaTemp = meta.template;\r\n                                for (let MetaItem of Object.keys(MetaTemp)) {\r\n                                    if (MetaTemp[MetaItem].moduletype && MetaTemp[MetaItem].moduletype === 'table') {\r\n                                        MetaTemp[MetaItem].appcode = appcode;\r\n                                        MetaTemp[MetaItem].pagecode = pagecode;\r\n                                        MetaTemp[MetaItem].templateCode = MetaTemp.code;\r\n                                        MetaTemp[MetaItem].pageid = MetaTemp.pageid;\r\n                                    }\r\n                                }\r\n\r\n                                jsonMeta = JSON.stringify(meta);\r\n\r\n                                // 二开回调\r\n                                getCheckedExtendMethod(this, 'templateAlreadyLoaded')(meta);\r\n\r\n                                //抛给业务组使用\r\n                                if (callback && typeof callback == 'function') {\r\n                                    callback(meta);\r\n                                }\r\n\r\n                            } else {\r\n\r\n                                //这里还是要执行业务数据，因为context和button也是每次都可能更新的\r\n                                jsonMeta = JSON.stringify(cacheMeta);\r\n\r\n                                // 二开回调\r\n                                getCheckedExtendMethod(this, 'templateAlreadyLoaded')(cacheMeta);\r\n\r\n                                if (callback && typeof callback == 'function') {\r\n                                    callback(cacheMeta);\r\n                                }\r\n                            }\r\n\r\n                            //-----------------加密缓存，并对缓存数据更新-----------------//\r\n                            //先压缩，后加密\r\n                            let newMeta = jsonMeta;\r\n                            if (storeCipher) {\r\n                                let gmeta = jsonMeta && gzip.zip(jsonMeta);\r\n                                // newMeta = gmeta && encrypt(gmeta, aeskey);\r\n                                newMeta = gmeta;\r\n                            }\r\n                            try {\r\n                                setGlobalStorage('localStorage', keySessionS, newMeta);\r\n                            } catch (e) {\r\n                                Object.keys(localStorage).forEach(item => {\r\n                                    if (item.includes('appTempletStorage_')) {\r\n                                        delete localStorage[item];\r\n                                    }\r\n                                });\r\n                                setGlobalStorage('localStorage', keySessionS, newMeta);\r\n                            }\r\n                        } else {\r\n                            // 二开回调\r\n                            if (!isExeCacheMeta) {\r\n                                getCheckedExtendMethod(this, 'templateAlreadyLoaded')(cacheMeta);\r\n                                if (callback && typeof callback == 'function') {\r\n                                    callback(cacheMeta);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    },\r\n                });\r\n            };\r\n\r\n            //绘制页面\r\n            this.createUIDom = (data, callback, isCache) => {\r\n                window.actionName = '合并请求';\r\n                if (data.billtype) {\r\n                    //根据billtype查appcode\r\n                    let sencetype = '1';\r\n                    ajax({\r\n                        url: '/nccloud/platform/pub/getappurl.do',\r\n                        method: 'post',\r\n                        data: {\r\n                            billpk: null,\r\n                            billtypecode: data.billtype,\r\n                            pagecode: data.pagecode || null,\r\n                            sence: data.sence || sencetype,\r\n                        },\r\n                        success: result => {\r\n                            //查询成功后请求模板\r\n                            if (result.success && result.data && result.data.appPageVO) {\r\n                                let appcode = result.data.appcode;\r\n                                let pagecode = data.pagecode || result.data.appPageVO.pagecode;\r\n                                this.requestMeta(data, appcode, pagecode, callback, null, isCache);\r\n                            }\r\n                        },\r\n                    });\r\n                } else {\r\n                    let appReqParam = getAppReqParam();\r\n                    let code = appReqParam.appcode;\r\n                    let page = appReqParam.pagecode;\r\n                    let ssc_templetid = appReqParam.ssc_templetid;\r\n\r\n                    let pagecode = data.pagecode || page;\r\n                    let appcode = data.appcode || code;\r\n\r\n                    this.requestMeta(data, appcode, pagecode, callback, ssc_templetid, isCache, code);\r\n                }\r\n            };\r\n\r\n            //创建一主多子简化数据\r\n            this.createExtCardDataSimple = (pageid, head_code, bodys_code, isDeleteEmptyItem=false) => {\r\n                let saveData = {\r\n                    pageid,\r\n                    head: {},\r\n                    bodys: {},\r\n                };\r\n                let metaObj = this.meta.getMeta();\r\n                //saveData.templetid = metaObj.pageid && metaObj.pageid;\r\n                if (this.currentBill && this.currentBill.templetid) {\r\n                    saveData.templetid = this.currentBill.templetid;\r\n                } else {\r\n                    saveData.templetid = metaObj.pageid && metaObj.pageid;\r\n                }\r\n                if (metaObj[head_code] && metaObj[head_code].moduletype && metaObj[head_code].moduletype === 'form') {\r\n                    saveData.head[head_code] = this.form.getAllFormValueSimple(head_code);\r\n                    saveData.head[head_code].areacode = head_code;\r\n                }\r\n                if (bodys_code && bodys_code instanceof Array && bodys_code.length > 0) {\r\n                    bodys_code.forEach(body_code => {\r\n                        if (\r\n                            metaObj[body_code] &&\r\n                            metaObj[body_code].moduletype &&\r\n                            metaObj[body_code].moduletype === 'table'\r\n                        ) {\r\n                            saveData.bodys[body_code] = delEmptyData(this.cardTable.getAllData(body_code), 'inner_use', isDeleteEmptyItem);\r\n                            saveData.bodys[body_code].areacode = body_code;\r\n                        }\r\n                    });\r\n                }\r\n                return saveData;\r\n            };\r\n            //创建一主多子数据\r\n            this.createExtCardData = (pageid, head_code, bodys_code, rows) => {\r\n                let saveData = {\r\n                    pageid,\r\n                    head: {},\r\n                    bodys: {},\r\n                };\r\n                let metaObj = this.meta.getMeta();\r\n                //saveData.templetid = metaObj.pageid && metaObj.pageid;\r\n                if (this.currentBill && this.currentBill.templetid) {\r\n                    saveData.templetid = this.currentBill.templetid;\r\n                } else {\r\n                    saveData.templetid = metaObj.pageid && metaObj.pageid;\r\n                }\r\n                if (metaObj[head_code] && metaObj[head_code].moduletype && metaObj[head_code].moduletype === 'form') {\r\n                    saveData.head[head_code] = this.form.getAllFormValue(head_code);\r\n                    saveData.head[head_code].areacode = head_code;\r\n                }\r\n                if (bodys_code && bodys_code instanceof Array && bodys_code.length > 0) {\r\n                    bodys_code.forEach(body_code => {\r\n                        if (\r\n                            metaObj[body_code] &&\r\n                            metaObj[body_code].moduletype &&\r\n                            metaObj[body_code].moduletype === 'table'\r\n                        ) {\r\n                            if (rows) {\r\n                                saveData.bodys[body_code] = {\r\n                                    areaType: 'table',\r\n                                    rows,\r\n                                    areacode: null,\r\n                                };\r\n                            } else {\r\n                                saveData.bodys[body_code] = this.cardTable.getAllData(body_code);\r\n                            }\r\n\r\n                            saveData.bodys[body_code].areacode = body_code;\r\n                        }\r\n                    });\r\n                }\r\n                return saveData;\r\n            };\r\n\r\n            //wangtaos添加，司库云-C专属使用\r\n            this.createTabsCardData = (pageid, head_code, bodys_code) => {\r\n                let saveData = {\r\n                    pageid,\r\n                    head: {},\r\n                    bodys: {},\r\n                };\r\n                let { tabData, tabOrder, tab } = this.state;\r\n                let moduleId = tabOrder[0];\r\n                let table = this.myTable[moduleId].state.table;\r\n                let metaObj = this.meta.getMeta();\r\n                if (metaObj[head_code] && metaObj[head_code].moduletype && metaObj[head_code].moduletype === 'form') {\r\n                    saveData.head[head_code] = this.form.getAllFormValue(head_code);\r\n                    saveData.head[head_code].areacode = head_code;\r\n                }\r\n                if (bodys_code && bodys_code instanceof Array && bodys_code.length > 0) {\r\n                    bodys_code.forEach(body_code => {\r\n                        if (\r\n                            metaObj[body_code] &&\r\n                            metaObj[body_code].moduletype &&\r\n                            metaObj[body_code].moduletype === 'table'\r\n                        ) {\r\n                            saveData.bodys[body_code] = {\r\n                                rows: JSON.parse(\r\n                                    JSON.stringify(body_code === tab ? table.rows : tabData[body_code].rows),\r\n                                ),\r\n                                areaType: 'table',\r\n                                areacode: body_code,\r\n                            };\r\n                        }\r\n                    });\r\n                }\r\n                return saveData;\r\n            };\r\n\r\n            this.getSearchParam = pop => {\r\n                return pageTo.getSearchParam(pop);\r\n            };\r\n            //路由组件\r\n            this.pushTo = (page, params) => {\r\n                pageTo.pushTo(page, params, this.hashChangeCallBack);\r\n            };\r\n            //跳转页面\r\n            this.linkTo = (page, params) => {\r\n                pageTo.linkTo(page, params, this.hashChangeCallBack);\r\n            };\r\n\r\n            this.openTo = (page, params, parentParam) => {\r\n                pageTo.openTo(page, params, parentParam);\r\n            };\r\n\r\n            this.specialOpenTo = (page, params, getWinObj, parentParam) => {\r\n                pageTo.specialOpenTo(page, params, getWinObj, parentParam);\r\n            };\r\n\r\n            // 业务组用来在组件某些地方自行设置hashChangeCallback的方法\r\n            this.setHashChangeCallback = callback => {\r\n                if (callback && typeof callback === 'function') {\r\n                    this.hashChangeCallBack = callback;\r\n                }\r\n            };\r\n\r\n            //共享-编辑关联项执行完的回调\r\n            this.setRelationAfterEventCallBack = callback => {\r\n                if (callback && typeof callback === 'function') {\r\n                    this.relationAfterEventCallBack = callback;\r\n                }\r\n            };\r\n\r\n            //业务组在非createPage时机，通过调用API传递过来的 billinfo\r\n            this.setRelationItemBillinfo = billinfo => {\r\n                if (billinfo) {\r\n                    this.billinfo = billinfo;\r\n                }\r\n            };\r\n\r\n            //返回跳转\r\n            this.linkBack = () => {\r\n                pageTo.linkBack();\r\n            };\r\n\r\n            //打开nccloud以外的应用\r\n            this.openOut = page => {\r\n                pageTo.openOut(page);\r\n            };\r\n\r\n            //获取页面参数\r\n            this.getUrlParam = pop => {\r\n                return pageTo.getUrlParam.call(this, pop);\r\n            };\r\n\r\n            //重置浏览器id地址\r\n            this.setUrlParam = params => {\r\n                pageTo.setUrlParam(params, this.hashChangeCallBack);\r\n            };\r\n\r\n            //删除url参数\r\n            this.delUrlParam = str => {\r\n                pageTo.delUrlParam(str, this.hashChangeCallBack);\r\n            };\r\n\r\n            //新增浏览器参数\r\n            this.addUrlParam = popObj => {\r\n                pageTo.addUrlParam(popObj, this.hashChangeCallBack);\r\n            };\r\n\r\n            //获取小应用编码\r\n            this.getAppCode = () => {\r\n                return pageTo.getAppCode();\r\n            };\r\n\r\n            //获取页面编码\r\n            this.getPageCode = () => {\r\n                return pageTo.getPageCode();\r\n            };\r\n\r\n            //得到单个表单的编辑后数据\r\n            this.createFormAfterEventData = (pageid, form_code, moduleId, key, value, formMetaCode) => {\r\n                let formData = { pageid };\r\n                let metaObj = this.meta.getMeta();\r\n                //formData.templetid = metaObj.pageid && metaObj.pageid;\r\n                if (this.currentBill && this.currentBill.templetid) {\r\n                    formData.templetid = this.currentBill.templetid;\r\n                } else {\r\n                    formData.templetid = metaObj.pageid && metaObj.pageid;\r\n                }\r\n                if (\r\n                    metaObj &&\r\n                    metaObj[form_code] &&\r\n                    metaObj[form_code].moduletype &&\r\n                    metaObj[form_code].moduletype === 'form'\r\n                ) {\r\n                    formData[form_code] = this.form.getAllFormValue(form_code);\r\n                    formData[form_code].areacode = form_code;\r\n                }\r\n                let result = {\r\n                    attrcode: key,\r\n                    newvalue: value,\r\n                    oldvalue: this.formDataSource[moduleId] ? this.formDataSource[moduleId].getOldValue(key) : null,\r\n                    form: formData,\r\n                };\r\n                if (formMetaCode) {\r\n                    result.areacode = formMetaCode;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            //得到表头编辑后结构:一主一子 和 一主多子\r\n            this.createHeadAfterEventData = (\r\n                pageid,\r\n                head_code,\r\n                body_code,\r\n                moduleId,\r\n                key,\r\n                value,\r\n                formMetaCode,\r\n                tabletype,\r\n            ) => {\r\n                let cardData = {};\r\n                if (typeof body_code === 'string') {\r\n                    cardData = this.createMasterChildData(pageid, head_code, body_code, tabletype);\r\n                    //cardData = this.createMasterChildDataSimple(pageid, head_code, body_code, tabletype);\r\n                } else if (body_code instanceof Array) {\r\n                    cardData = this.createExtCardData(pageid, head_code, body_code);\r\n                    //cardData = this.createExtCardDataSimple(pageid, head_code, body_code);\r\n                }\r\n\r\n                let result = {\r\n                    attrcode: key,\r\n                    newvalue: value,\r\n                    // 需要从表单api中取值 后面让wanglong优化\r\n                    // oldvalue: this.formOldValues[moduleId] ? this.formOldValues[moduleId][key] : null,\r\n                    oldvalue: this.formDataSource[moduleId] ? this.formDataSource[moduleId].getOldValue(key) : null,\r\n                    card: cardData,\r\n                };\r\n\r\n                if (formMetaCode) {\r\n                    result.areacode = formMetaCode;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            //改写createHeadAfterEventData，一主多子，wangtaos为司库云提供\r\n            this.createTabsAfterEventData = (\r\n                pageid,\r\n                head_code,\r\n                body_code,\r\n                moduleId,\r\n                key,\r\n                value,\r\n                formMetaCode,\r\n                tabletype,\r\n            ) => {\r\n                let cardData = {};\r\n                if (typeof body_code === 'string') {\r\n                    cardData = this.createMasterChildData(pageid, head_code, body_code, tabletype);\r\n                } else if (body_code instanceof Array) {\r\n                    cardData = this.createTabsCardData(pageid, head_code, body_code);\r\n                }\r\n                let result = {\r\n                    attrcode: key,\r\n                    newvalue: value,\r\n                    oldvalue: this.formDataSource[moduleId] ? this.formDataSource[moduleId].getOldValue(key) : null,\r\n                    card: cardData,\r\n                };\r\n                if (formMetaCode) {\r\n                    result.areacode = formMetaCode;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            //得到单个表格的编辑后数据\r\n            this.createGridAfterEventData = (pageid, grid_code, moduleId, key, changedrows, index, tabletype, rows, tableMetaCode) => {\r\n                let gridData = { pageid };\r\n                let metaObj = this.meta.getMeta();\r\n                //gridData.templetid = metaObj.pageid && metaObj.pageid;\r\n                if (this.currentBill && this.currentBill.templetid) {\r\n                    gridData.templetid = this.currentBill.templetid;\r\n                } else {\r\n                    gridData.templetid = metaObj.pageid && metaObj.pageid;\r\n                }\r\n                if (\r\n                    metaObj &&\r\n                    metaObj[grid_code] &&\r\n                    metaObj[grid_code].moduletype &&\r\n                    metaObj[grid_code].moduletype === 'table'\r\n                ) {\r\n                    if (rows) {\r\n                        gridData[grid_code] = {\r\n                            areaType: 'table',\r\n                            rows,\r\n                            areacode: null,\r\n                        };\r\n                    } else {\r\n                        if (tabletype && tabletype === 'cardTable') {\r\n                            gridData[grid_code] = this.cardTable.getAllData(grid_code);\r\n                        } else {\r\n                            gridData[grid_code] = this.editTable.getAllData(grid_code);\r\n                        }\r\n                    }\r\n\r\n                    gridData[grid_code].areacode = tableMetaCode ? tableMetaCode : grid_code;\r\n                }\r\n                return {\r\n                    attrcode: key,\r\n                    changedrows,\r\n                    grid: gridData,\r\n                    index,\r\n                };\r\n            };\r\n\r\n            //得到表体编辑后结构:一主一子 和 一主多子\r\n            // pageid, head_code, body_code 自己传入\r\n            // moduleId 为 moduleId\r\n            // key 为 item.attrcode\r\n            // rowid ?\r\n            // newvalue\r\n            this.createBodyAfterEventData = (\r\n                pageid,\r\n                head_code,\r\n                body_code,\r\n                moduleId,\r\n                key,\r\n                changedrows,\r\n                index,\r\n                tabletype,\r\n                rows,\r\n                tableMetaCode\r\n            ) => {\r\n                let cardData = {};\r\n                if (typeof body_code === 'string') {\r\n                    cardData = this.createMasterChildData(pageid, head_code, body_code, tabletype, rows);\r\n                    //cardData = this.createMasterChildDataSimple(pageid, head_code, body_code, tabletype);\r\n                    return {\r\n                        attrcode: key,\r\n                        changedrows,\r\n                        card: cardData,\r\n                        index,\r\n                    };\r\n                } else if (body_code instanceof Array) {\r\n                    cardData = this.createExtCardData(pageid, head_code, body_code, rows);\r\n                    //cardData = this.createExtCardDataSimple(pageid, head_code, body_code);\r\n                    return {\r\n                        areacode: tableMetaCode ? tableMetaCode : moduleId,\r\n                        attrcode: key,\r\n                        changedrows,\r\n                        card: cardData,\r\n                        index,\r\n                    };\r\n                }\r\n            };\r\n\r\n            // 改写平台createBodyAfterEventData，为sikuyun专属使用，wangtaos添加\r\n            this.createTabsBodyAfterEventData = (\r\n                pageid,\r\n                head_code,\r\n                body_code,\r\n                moduleId,\r\n                key,\r\n                changedrows,\r\n                index,\r\n                tabletype,\r\n            ) => {\r\n                let cardData = {};\r\n                if (typeof body_code === 'string') {\r\n                    cardData = this.createTabsMasterChildData(pageid, head_code, body_code, tabletype);\r\n                    return {\r\n                        attrcode: key,\r\n                        changedrows,\r\n                        card: cardData,\r\n                        index,\r\n                    };\r\n                } else if (body_code instanceof Array) {\r\n                    cardData = this.createTabsCardData(pageid, head_code, body_code);\r\n                    return {\r\n                        areacode: this.state.tab,\r\n                        attrcode: key,\r\n                        changedrows,\r\n                        card: cardData,\r\n                        index,\r\n                    };\r\n                }\r\n            };\r\n\r\n            /*\r\n                * 获取表头和表格当前行数据\r\n                */\r\n            this.createCurrentRowAfterEventData = (pageid, head_code, body_code, moduleId, key, changedrows, index) => {\r\n                let saveData = {\r\n                    pageid,\r\n                    head: {},\r\n                };\r\n\r\n                let body = {};\r\n                let metaObj = this.meta.getMeta();\r\n\r\n                //获取表头数据\r\n                if (metaObj[head_code] && metaObj[head_code].moduletype && metaObj[head_code].moduletype === 'form') {\r\n                    saveData.head[head_code] = this.form.getAllFormValue(head_code);\r\n                    saveData.head[head_code].areacode = head_code;\r\n                }\r\n\r\n                //获取表格数据\r\n                if (metaObj[moduleId] && metaObj[moduleId].moduletype && metaObj[moduleId].moduletype === 'table') {\r\n                    body[moduleId] = this.cardTable.getDataByIndex(moduleId, index);\r\n                    body[moduleId].areacode = moduleId;\r\n                }\r\n\r\n                if (typeof body_code === 'string') {\r\n                    saveData['body'] = body;\r\n                }\r\n                if (Array.isArray(body_code)) {\r\n                    saveData['bodys'] = body;\r\n                }\r\n\r\n                return {\r\n                    areacode: moduleId,\r\n                    attrcode: key,\r\n                    changedrows,\r\n                    card: saveData,\r\n                    index,\r\n                };\r\n            };\r\n\r\n            //获取关联项\r\n            this.getrelationItems = MetaItem => {\r\n                if (MetaItem && MetaItem instanceof Array) {\r\n                    let relationItems = [];\r\n                    MetaItem.forEach(item => {\r\n                        if (item.editAfterFlag && item.editAfterFlag === true) {\r\n                            relationItems.push(item.attrcode);\r\n                        }\r\n                    });\r\n                    //console.log(relationItems);\r\n                    return relationItems;\r\n                }\r\n            };\r\n\r\n            //得到单个表格的编辑后数据--只取当前编辑行\r\n            this.createGridAfterEventRecord = (pageid, grid_code, moduleId, key, changedrows, record, tableMetaCode) => {\r\n                let gridData = { pageid };\r\n                let metaObj = this.meta.getMeta();\r\n                //gridData.templetid = metaObj.pageid && metaObj.pageid;\r\n                if (this.currentBill && this.currentBill.templetid) {\r\n                    gridData.templetid = this.currentBill.templetid;\r\n                } else {\r\n                    gridData.templetid = metaObj.pageid && metaObj.pageid;\r\n                }\r\n                if (\r\n                    metaObj &&\r\n                    metaObj[grid_code] &&\r\n                    metaObj[grid_code].moduletype &&\r\n                    metaObj[grid_code].moduletype === 'table'\r\n                ) {\r\n                    gridData[grid_code] = { rows: [record] };\r\n                    gridData[grid_code].areacode = tableMetaCode ? tableMetaCode : grid_code;\r\n                }\r\n                return {\r\n                    attrcode: key,\r\n                    changedrows,\r\n                    grid: gridData,\r\n                    index: 0,\r\n                };\r\n            };\r\n\r\n            //得到表头编辑后结构:一主一子 和 一主多子---只取表头数据\r\n            this.createHeadAfterEventRecord = (pageid, head_code, body_code, moduleId, key, value, formMetaCode) => {\r\n                let cardData = {\r\n                    pageid,\r\n                    head: {},\r\n                };\r\n                let metaObj = this.meta.getMeta();\r\n                if (this.currentBill && this.currentBill.templetid) {\r\n                    cardData.templetid = this.currentBill.templetid;\r\n                } else {\r\n                    cardData.templetid = metaObj.pageid && metaObj.pageid;\r\n                }\r\n                if (metaObj[head_code] && metaObj[head_code].moduletype && metaObj[head_code].moduletype === 'form') {\r\n                    cardData.head[head_code] = this.form.getAllFormValue(head_code);\r\n                    cardData.head[head_code].areacode = head_code;\r\n                }\r\n                if (typeof body_code === 'string') {\r\n                    cardData.body = {};\r\n                    if (\r\n                        metaObj[body_code] &&\r\n                        metaObj[body_code].moduletype &&\r\n                        metaObj[body_code].moduletype === 'table'\r\n                    ) {\r\n                        cardData.body[body_code] = { rows: [] };\r\n                        cardData.body[body_code].areacode = body_code;\r\n                    }\r\n                } else if (body_code instanceof Array) {\r\n                    cardData.bodys = {};\r\n                    if (body_code && body_code instanceof Array && body_code.length > 0) {\r\n                        body_code.forEach(code => {\r\n                            if (metaObj[code] && metaObj[code].moduletype && metaObj[code].moduletype === 'table') {\r\n                                cardData.bodys[code] = { rows: [] };\r\n                                cardData.bodys[code].areacode = code;\r\n                            }\r\n                        });\r\n                    }\r\n                    //cardData = this.createExtCardDataSimple(pageid, head_code, body_code);\r\n                }\r\n\r\n                let result = {\r\n                    attrcode: key,\r\n                    newvalue: value,\r\n                    oldvalue: this.formDataSource[moduleId] ? this.formDataSource[moduleId].getOldValue(key) : null,\r\n                    card: cardData,\r\n                };\r\n\r\n                if (formMetaCode) {\r\n                    result.areacode = formMetaCode;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            //得到卡片的编辑后数据:一主一子 和 一主多子--只取当前编辑行\r\n            this.createBodyAfterEventRecord = (pageid, head_code, body_code, moduleId, key, changedrows, record, tableMetaCode) => {\r\n                let cardData = {\r\n                    pageid,\r\n                    head: {},\r\n                };\r\n                let metaObj = this.meta.getMeta();\r\n                if (this.currentBill && this.currentBill.templetid) {\r\n                    cardData.templetid = this.currentBill.templetid;\r\n                } else {\r\n                    cardData.templetid = metaObj.pageid && metaObj.pageid;\r\n                }\r\n                if (metaObj[head_code] && metaObj[head_code].moduletype && metaObj[head_code].moduletype === 'form') {\r\n                    cardData.head[head_code] = this.form.getAllFormValue(head_code);\r\n                    cardData.head[head_code].areacode = head_code;\r\n                }\r\n                if (typeof body_code === 'string') {\r\n                    cardData.body = {};\r\n                    if (\r\n                        metaObj[body_code] &&\r\n                        metaObj[body_code].moduletype &&\r\n                        metaObj[body_code].moduletype === 'table'\r\n                    ) {\r\n                        cardData.body[body_code] = { rows: [record] };\r\n                        cardData.body[body_code].areacode = tableMetaCode || body_code;\r\n                    }\r\n                    return {\r\n                        attrcode: key,\r\n                        changedrows,\r\n                        card: cardData,\r\n                        index: 0,\r\n                    };\r\n                } else if (body_code instanceof Array) {\r\n                    cardData.bodys = {};\r\n                    if (body_code && body_code instanceof Array && body_code.length > 0) {\r\n                        body_code.forEach(code => {\r\n                            if (metaObj[code] && metaObj[code].moduletype && metaObj[code].moduletype === 'table') {\r\n                                if (code == moduleId) {\r\n                                    cardData.bodys[code] = { rows: [record] };\r\n                                } else {\r\n                                    cardData.bodys[code] = { rows: [] };\r\n                                }\r\n                                cardData.bodys[code].areacode = code == moduleId ? tableMetaCode || code : code;\r\n                            }\r\n                        });\r\n                    }\r\n                    return {\r\n                        areacode: tableMetaCode ? tableMetaCode : moduleId,\r\n                        attrcode: key,\r\n                        changedrows,\r\n                        card: cardData,\r\n                        index: 0,\r\n                    };\r\n                }\r\n            };\r\n\r\n            this.handleSumChildCol = (editformula, tabletype) => {\r\n                //  可能有多个公式,使用分号隔开\r\n                let formula = editformula.split('->sumchildcol');\r\n                let masterInfo = formula[0];\r\n                let childInfo = formula[1].split('(')[1].split(')')[0];\r\n                let [formAreaCode, formAttrcode] = masterInfo.split('.');\r\n                let [tableAreaCode, tableAttrcode] = childInfo.split('.');\r\n                let sums = 0;\r\n                if (tabletype === 'editTable') {\r\n                    //获取表格当前列数据，合计到表头\r\n                    let colValues = this.editTable.getColValue(tableAreaCode, tableAttrcode);\r\n                    if (colValues && Array.isArray(colValues.value)) {\r\n                        let vals = colValues.value;\r\n                        vals.forEach((val) => {\r\n                            sums = sum(sums, val);\r\n                        })\r\n                    }\r\n                } else {\r\n                    //获取表格当前列数据，合计到表头\r\n                    let colValues = this.cardTable.getColValue(tableAreaCode, tableAttrcode);\r\n                    if (colValues && Array.isArray(colValues)) {\r\n                        colValues.forEach((item) => {\r\n                            if (item && item.value) {\r\n                                sums = sum(sums, item.value);\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                //合计数值显示到表头\r\n                this.form.setFormItemsValue(formAreaCode, { [formAttrcode]: { value: sums } });\r\n            }\r\n            //编辑关联项---编辑公式\r\n            //合计公式 前端处理：editformula: 主表区域编码.主表字段code->sumchildcol(子表区域编码.子表字段code)\r\n            this.handleRelationItems = afterData => {\r\n                const {\r\n                    type = 'table',\r\n                    areaCode,\r\n                    key,\r\n                    value,\r\n                    callback,\r\n                    changedrows,\r\n                    index,\r\n                    rowid,\r\n                    formMetaCode,\r\n                    record,\r\n                    tableMetaCode,\r\n                    //下面参数 liuming excel 专用 \r\n                    rows,\r\n                    column,\r\n                } = afterData;\r\n\r\n                if (this.billinfo) {\r\n                    this.currentBill = JSON.parse(JSON.stringify(this.billinfo));\r\n\r\n                    //档案：一个节点多个卡片,多个表单、或者多个表格，判断当前是哪个界面\r\n                    if (this.billinfo instanceof Array && this.billinfo.length) {\r\n                        for (let i = 0; i < this.billinfo.length; i++) {\r\n                            if (type === 'form') {\r\n                                if (areaCode === this.billinfo[i].headcode) {\r\n                                    this.currentBill = this.billinfo[i];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (type === 'table') {\r\n                                let billBodyCode = this.billinfo[i].bodycode;\r\n                                if (typeof billBodyCode === 'string' && areaCode === billBodyCode) {\r\n                                    this.currentBill = this.billinfo[i];\r\n                                    break;\r\n                                }\r\n                                if (billBodyCode instanceof Array && billBodyCode.includes(areaCode)) {\r\n                                    this.currentBill = this.billinfo[i];\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    let { billtype, pagecode, headcode, bodycode, tabletype = '', tabs = false } = this.currentBill;\r\n\r\n                    //资金多页表格编辑关联项\r\n                    if (tabs) {\r\n                        this.handleTabRelationItems(afterData);\r\n                        return;\r\n                    }\r\n\r\n                    //共享服务领域适配表格\r\n                    if (bodycode === 'findByRelation') {\r\n                        let meta = this.meta.getMeta();\r\n                        if (meta && meta.gridrelation) {\r\n                            bodycode = Object.keys(meta.gridrelation);\r\n                        }\r\n                    }\r\n                    if (!pagecode) {\r\n                        pagecode = this.getSearchParam('p');\r\n                    }\r\n                    // eslint-disable-next-line one-var-declaration-per-line\r\n                    let url, data, success;\r\n                    //单个表单 或 单个表格\r\n                    if (billtype === 'form' || billtype === 'grid') {\r\n                        if (type === 'form') {\r\n                            url = '/nccloud/platform/pub/formafteredit.do';\r\n                            data = this.createFormAfterEventData(\r\n                                pagecode,\r\n                                areaCode,\r\n                                areaCode,\r\n                                key,\r\n                                value,\r\n                                formMetaCode,\r\n                            );\r\n                        } else if (type === 'table') {\r\n                            url = '/nccloud/platform/pub/gridafteredit.do';\r\n                            //data = this.createGridAfterEventData(pagecode, areaCode, areaCode, key, changedrows, index, tabletype);\r\n                            if (record) {\r\n                                //新增功能---差异化处理\r\n                                let newRecord = JSON.parse(JSON.stringify(record || {}));\r\n                                data = this.createGridAfterEventRecord(\r\n                                    pagecode,\r\n                                    areaCode,\r\n                                    areaCode,\r\n                                    key,\r\n                                    changedrows,\r\n                                    newRecord,\r\n                                    tableMetaCode\r\n                                );\r\n                            } else {\r\n                                data = this.createGridAfterEventData(\r\n                                    pagecode,\r\n                                    areaCode,\r\n                                    areaCode,\r\n                                    key,\r\n                                    changedrows,\r\n                                    index,\r\n                                    tabletype,\r\n                                    rows,\r\n                                    tableMetaCode\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                    //单据\r\n                    if (billtype === 'card' || billtype === 'extcard') {\r\n                        let tablecode;\r\n                        if (Object.prototype.toString.call(bodycode) === '[object Object]') {\r\n                            tablecode = Object.keys(bodycode);\r\n                            if (tablecode.length == 1) {\r\n                                tablecode = tablecode[0];\r\n                            }\r\n                        } else {\r\n                            tablecode = bodycode;\r\n                        }\r\n                        if (type === 'form') {\r\n                            //编辑表头\r\n                            url = '/nccloud/platform/pub/cardheadafteredit.do';\r\n                            if (billtype === 'extcard') {\r\n                                url = '/nccloud/platform/pub/extcardheadafteredit.do';\r\n                            }\r\n                            //优化：只取表头数据\r\n                            data = this.createHeadAfterEventRecord(\r\n                                pagecode,\r\n                                headcode,\r\n                                tablecode,\r\n                                areaCode,\r\n                                key,\r\n                                value,\r\n                                formMetaCode,\r\n                            );\r\n                        } else if (type === 'table') {\r\n                            //编辑表格的合计公式:editformula: 主表区域编码.主表字段code->sumchildcol(子表区域编码.子表字段code) \r\n                            if (column && column.editformula && typeof column.editformula === 'string') {\r\n                                let editformula = column.editformula;\r\n                                if (editformula.length < 1000 && /\\S+.\\S+->sumchildcol(\\S+.\\S+)\\S+/.test(editformula)) {\r\n                                    if (editformula.includes(';')) {\r\n                                        let editformulaArr = editformula.split(';');\r\n                                        let sumformulaLen = 0;\r\n                                        editformulaArr.forEach(singleformula => {\r\n                                            if (singleformula.length < 1000 && /\\S+.\\S+->sumchildcol(\\S+.\\S+)\\S+/.test(singleformula)) {\r\n                                                sumformulaLen++;\r\n                                                this.handleSumChildCol(singleformula, tabletype);\r\n                                            }\r\n                                        })\r\n                                        if (sumformulaLen === editformulaArr.length) {\r\n                                            //只配置了合计公式，则不需要走后台\r\n                                            return;\r\n                                        }\r\n                                    } else {\r\n                                        this.handleSumChildCol(editformula, tabletype);\r\n                                        //只配置了合计公式，则不需要走后台\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            }\r\n                            //其他公式：\r\n                            // 编辑表格\r\n                            url = '/nccloud/platform/pub/cardbodyafteredit.do';\r\n                            if (billtype === 'extcard') {\r\n                                url = '/nccloud/platform/pub/extcardbodyafteredit.do';\r\n                            }\r\n                            if (record) {\r\n                                //差异化处理--只取当前行\r\n                                let newRecord = JSON.parse(JSON.stringify(record || {}));\r\n                                data = this.createBodyAfterEventRecord(\r\n                                    pagecode,\r\n                                    headcode,\r\n                                    tablecode,\r\n                                    areaCode,\r\n                                    key,\r\n                                    changedrows,\r\n                                    newRecord,\r\n                                    tableMetaCode\r\n                                );\r\n                            } else {\r\n                                data = this.createBodyAfterEventData(\r\n                                    pagecode,\r\n                                    headcode,\r\n                                    tablecode,\r\n                                    areaCode,\r\n                                    key,\r\n                                    changedrows,\r\n                                    index,\r\n                                    tabletype,\r\n                                    rows,\r\n                                    tableMetaCode\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                    //请求成功的回调函数\r\n                    success = res => {\r\n                        let tableTypeObj = {};\r\n                        //单个表单\r\n                        if (billtype === 'form' && type === 'form') {\r\n                            if (res.data && res.data && res.data[areaCode]) {\r\n                                this.form.setAllFormValue({ [areaCode]: res.data[areaCode] }, false, false, key);\r\n                            }\r\n                        }\r\n                        //单个表格\r\n                        if (billtype === 'grid' && type === 'table') {\r\n                            if (res.data && res.data && res.data[areaCode]) {\r\n                                if (tabletype && tabletype === 'cardTable') {\r\n                                    //this.cardTable.setTableData(areaCode, res.data[areaCode], null, false);\r\n                                    // this.cardTable.updateDataByIndexs(areaCode, [{\r\n                                    //     index: index,\r\n                                    //     data: res.data[areaCode].rows[index]\r\n                                    // }]);\r\n                                    //新增功能---差异化处理\r\n                                    if (rows) {\r\n                                        this.cardTable.updateAndAddRows({ rows: res.data[areaCode].rows, tableId: areaCode })\r\n                                    } else {\r\n                                        this.cardTable.updateDataByRowId(areaCode, res.data[areaCode], false, false);\r\n                                    }\r\n                                    tableTypeObj[areaCode] = 'cardTable';\r\n                                } else {\r\n                                    //this.editTable.setTableData(areaCode, res.data[areaCode], false);\r\n                                    //新增功能---差异化处理\r\n                                    this.editTable.updateDataByRowId(areaCode, res.data[areaCode], false, false);\r\n                                    tableTypeObj[areaCode] = 'editTable';\r\n                                }\r\n                            }\r\n                        }\r\n                        //单据\r\n                        if (billtype === 'card' || billtype === 'extcard') {\r\n                            //表头赋值\r\n                            if (res.data && res.data.head && res.data.head[headcode]) {\r\n                                this.form.setAllFormValue({ [headcode]: res.data.head[headcode] }, false, false, key);\r\n                            }\r\n                            if (type === 'table') {\r\n                                let tablecode;\r\n                                if (Object.prototype.toString.call(bodycode) === '[object Object]') {\r\n                                    tablecode = Object.keys(bodycode);\r\n                                    if (tablecode.length == 1) {\r\n                                        tablecode = tablecode[0];\r\n                                    }\r\n                                } else {\r\n                                    tablecode = bodycode;\r\n                                }\r\n\r\n                                if (typeof tablecode === 'string') {\r\n                                    if (res.data && res.data.body && res.data.body) {\r\n                                        if (tabletype && tabletype === 'editTable' && res.data.body[tablecode]) {\r\n                                            tableTypeObj[tablecode] = 'editTable';\r\n                                            //this.editTable.setTableData(bodycode, res.data.body[bodycode], false);\r\n                                            //新增功能---差异化处理\r\n                                            this.editTable.updateDataByRowId(\r\n                                                tablecode,\r\n                                                res.data.body[tablecode],\r\n                                                false,\r\n                                                false,\r\n                                            );\r\n                                        } else {\r\n                                            tableTypeObj[tablecode] = 'cardTable';\r\n                                            //this.cardTable.setTableData(bodycode, res.data.body[bodycode], null, false);\r\n                                            //新增功能---差异化处理\r\n                                            if (tableMetaCode && res.data.body[tableMetaCode] && !res.data.body[tablecode]) {\r\n                                                res.data.body[tablecode] = res.data.body[tableMetaCode];\r\n                                            }\r\n\r\n                                            if (rows) {\r\n                                                this.cardTable.updateAndAddRows({ rows: res.data.body[tablecode].rows, tableId: tablecode })\r\n                                            } else {\r\n                                                this.cardTable.updateDataByRowId(\r\n                                                    tablecode,\r\n                                                    res.data.body[tablecode],\r\n                                                    false,\r\n                                                    false\r\n                                                );\r\n                                            }\r\n\r\n                                        }\r\n                                    }\r\n                                } else if (tablecode instanceof Array) {\r\n                                    tablecode.forEach(code => {\r\n                                        if (res.data && res.data.bodys) {\r\n                                            if (tabletype && tabletype === 'editTable' && res.data.bodys[code]) {\r\n                                                tableTypeObj[code] = 'editTable';\r\n                                                //this.editTable.setTableData(code, res.data.bodys[code], false);\r\n                                                //新增功能---差异化处理\r\n                                                this.editTable.updateDataByRowId(\r\n                                                    code,\r\n                                                    res.data.bodys[code],\r\n                                                    false,\r\n                                                    false\r\n                                                );\r\n                                            } else {\r\n                                                tableTypeObj[code] = 'cardTable';\r\n                                                //this.cardTable.setTableData(code, res.data.bodys[code], null, false);\r\n                                                //新增功能---差异化处理\r\n                                                if (tableMetaCode && res.data.bodys[tableMetaCode] && !res.data.bodys[code]) {\r\n                                                    res.data.bodys[code] = res.data.bodys[tableMetaCode];\r\n                                                }\r\n\r\n                                                if (rows && code === areaCode) {\r\n                                                    this.cardTable.updateAndAddRows({ rows: res.data.bodys[code].rows, tableId: code })\r\n                                                } else {\r\n                                                    this.cardTable.updateDataByRowId(\r\n                                                        code,\r\n                                                        res.data.bodys[code],\r\n                                                        false,\r\n                                                        false,\r\n                                                    );\r\n                                                }\r\n\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                        if (res.formulamsg && res.formulamsg instanceof Array && res.formulamsg.length > 0) {\r\n                            this.dealFormulamsg(res.formulamsg, tableTypeObj, null, null, index);\r\n                        }\r\n                        isFunction(callback) && callback(this);\r\n                        if (res && typeof this.relationAfterEventCallBack === 'function') {\r\n                            this.relationAfterEventCallBack(this.output, key, areaCode, data, res.data, index, rowid); //表体行新旧值\r\n                        }\r\n                    };\r\n                    //发送查询关联项事件\r\n                    if (url && data && success) {\r\n                        ajax({\r\n                            url,\r\n                            method: 'post',\r\n                            async: false,\r\n                            data,\r\n                            success,\r\n                        });\r\n                    }\r\n                } else {\r\n                    isFunction(callback) && callback(this);\r\n                }\r\n            };\r\n\r\n            //验证公式,显示公式\r\n            this.dealFormulamsg = (formulamsg, tableTypeObj, callback, data, currentIndex) => {\r\n                if (!tableTypeObj) {\r\n                    let { bodycode } = this.billinfo;\r\n                    if (Object.prototype.toString.call(bodycode) === '[object Object]') {\r\n                        tableTypeObj = bodycode;\r\n                    }\r\n                }\r\n                if (formulamsg && formulamsg instanceof Array && formulamsg.length > 0) {\r\n                    let mesArr = [];\r\n                    let n = 0;\r\n                    let m = 0;\r\n                    formulamsg.forEach(item => {\r\n                        if (item.type === '5') {\r\n                            let meta = this.meta.getMeta();\r\n                            if (item.render && meta[item.render.areacode]) {\r\n                                let index = meta[item.render.areacode].items.findIndex(ele => {\r\n                                    return ele.attrcode === item.render.attrcode;\r\n                                });\r\n                                if (index !== -1 && item.render && item.render.color) {\r\n                                    meta[item.render.areacode].items[index].color = item.render.color;\r\n                                    this.meta.setMeta(meta);\r\n                                }\r\n                            }\r\n                        }\r\n                        if (item.type === '3' || item.type === '4') {\r\n                            let meta = this.meta.getMeta();\r\n                            if (item.render && meta[item.render.areacode]) {\r\n                                let index = meta[item.render.areacode].items.findIndex(ele => {\r\n                                    return ele.attrcode === item.render.attrcode;\r\n                                });\r\n                                if (index != -1) {\r\n                                    if (meta[item.render.areacode].moduletype === 'form') {\r\n                                        let currentcode = item.render.areacode;\r\n                                        let maincode = meta[currentcode].relationcode ? meta[currentcode].relationcode : currentcode;\r\n                                        this.form.setFormItemsDisabled(maincode, {\r\n                                            [item.render.attrcode]: !item.render.editflag\r\n                                        });\r\n                                    } else if (\r\n                                        meta[item.render.areacode].moduletype === 'table' &&\r\n                                        tableTypeObj &&\r\n                                        tableTypeObj[item.render.areacode]\r\n                                    ) {\r\n                                        if (tableTypeObj[item.render.areacode] === 'editTable') {\r\n                                            this.editTable.setEditableRowKeyByIndex(\r\n                                                item.render.areacode,\r\n                                                //+item.render.rownum,\r\n                                                typeof currentIndex === 'undefined' ? +item.render.rownum : currentIndex,\r\n                                                item.render.attrcode,\r\n                                                item.render.editflag,\r\n                                            );\r\n                                        }\r\n                                        if (tableTypeObj[item.render.areacode] === 'cardTable') {\r\n                                            this.cardTable.setEditableByIndex(\r\n                                                item.render.areacode,\r\n                                                //+item.render.rownum,\r\n                                                typeof currentIndex === 'undefined' ? +item.render.rownum : currentIndex,\r\n                                                item.render.attrcode,\r\n                                                item.render.editflag,\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (item.type === '1') {\r\n                            if (item.message) {\r\n                                mesArr.push({\r\n                                    title: '提示',\r\n                                    color: 'info',\r\n                                    content: item.message,\r\n                                    noCancelBtn: true,\r\n                                    type: '1',\r\n                                });\r\n                            }\r\n                        }\r\n                        // type为2说明配置了error类型的验证公式，公式不满足，后台抛异常，ajax会走error\r\n                        // 公式满足，直接保存，前端不需要处理\r\n\r\n                        // if (item.type === '2') {\r\n                        //     if (item.message) {\r\n                        //         mesArr.push({\r\n                        //             title: '错误',\r\n                        //             color: 'danger',\r\n                        //             content: item.message,\r\n                        //             noCancelBtn: true,\r\n                        //             type: '2',\r\n                        //         });\r\n                        //     }\r\n                        // }\r\n                        // type为0说明配置了确认类型的验证公式，只有用户点击确定按钮后，才走error\r\n                        if (item.type === '0') {\r\n                            if (item.message) {\r\n                                n++;\r\n                                mesArr.push({\r\n                                    title: '确认',\r\n                                    color: 'success',\r\n                                    content: item.message,\r\n                                    noCancelBtn: false,\r\n                                    type: '0',\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    if (n === 0 && typeof callback === 'function' && data) {\r\n                        callback(data);\r\n                    }\r\n\r\n                    outPromptByArr(mesArr, 0);\r\n\r\n                    function outPromptByArr(Arr, index) {\r\n                        if (index < Arr.length) {\r\n                            promptBox({\r\n                                title: Arr[index].title,\r\n                                color: Arr[index].color,\r\n                                content: Arr[index].content,\r\n                                noCancelBtn: Arr[index].noCancelBtn,\r\n                                beSureBtnClick: () => {\r\n                                    if (Arr[index].type === '0') {\r\n                                        m++;\r\n                                        if (m === n) {\r\n                                            if (callback && data) {\r\n                                                callback(data);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    outPromptByArr(Arr, ++index);\r\n                                },\r\n                                cancelBtnClick: () => {\r\n                                    if (Arr[index].type === '0') {\r\n                                        m > 0 ? m-- : m;\r\n                                    }\r\n                                    outPromptByArr(Arr, ++index);\r\n                                },\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            /**表格点击保存按钮 弹出确认框点击确认再进行保存\r\n                 * data 单据数据\r\n                 * tableTypeObj 界面上所有表格的类型 非必输\r\n                 * billType 单据类型 非必输\r\n                 * callback 点击确认的时候执行的自定义回调\r\n                 */\r\n            this.validateToSave = (data, callback, tableTypeObj, billType) => {\r\n                if (!billType) {\r\n                    billType = this.billinfo.billtype;\r\n                }\r\n                let meta = this.meta.getMeta();\r\n                if (meta && meta.validateFlag) {\r\n                    let resData = new Promise(resolve => {\r\n                        ajax({\r\n                            url: '/nccloud/platform/formula/validate.do',\r\n                            data: {\r\n                                type: billType,\r\n                                userJson: JSON.stringify(data),\r\n                            },\r\n                            success(res) {\r\n                                if (res.success) {\r\n                                    resolve(res.formulamsg);\r\n                                }\r\n                            },\r\n                        });\r\n                    });\r\n                    resData.then(formulamsg => {\r\n                        if (formulamsg && formulamsg !== {}) {\r\n                            this.dealFormulamsg.call(this, formulamsg, tableTypeObj, callback, data);\r\n                        } else {\r\n                            callback(data);\r\n                        }\r\n                    });\r\n                } else {\r\n                    callback(data);\r\n                }\r\n            };\r\n\r\n            //复写handleRelationItems，司库云多页签使用，wangtaos添加\r\n            this.handleTabRelationItems = afterData => {\r\n                const {\r\n                    type = 'table',\r\n                    areaCode,\r\n                    key,\r\n                    value,\r\n                    callback,\r\n                    changedrows,\r\n                    index,\r\n                    rowid,\r\n                    formMetaCode,\r\n                    record,\r\n                } = afterData;\r\n                if (this.billinfo) {\r\n                    let { billtype, pagecode, headcode, bodycode, tabletype = '' } = this.billinfo;\r\n                    if (bodycode === 'findByRelation') {\r\n                        let meta = this.meta.getMeta();\r\n                        if (meta && meta.gridrelation) {\r\n                            bodycode = Object.keys(meta.gridrelation);\r\n                        }\r\n                    }\r\n                    if (!pagecode) {\r\n                        pagecode = this.getSearchParam('p');\r\n                    }\r\n                    // eslint-disable-next-line one-var-declaration-per-line\r\n                    let url, data, success;\r\n                    //单个表单 或 单个表格\r\n                    if (billtype === 'form' || billtype === 'grid') {\r\n                        if (type === 'form') {\r\n                            url = '/nccloud/platform/pub/formafteredit.do';\r\n                            data = this.createFormAfterEventData(pagecode, areaCode, areaCode, key, value);\r\n                        } else if (type === 'table') {\r\n                            url = '/nccloud/platform/pub/gridafteredit.do';\r\n                            data = this.createGridAfterEventData(\r\n                                pagecode,\r\n                                areaCode,\r\n                                areaCode,\r\n                                key,\r\n                                changedrows,\r\n                                index,\r\n                                tabletype,\r\n                            );\r\n                        }\r\n                    }\r\n                    //单据\r\n                    if (billtype === 'card' || billtype === 'extcard') {\r\n                        let tablecode;\r\n                        if (Object.prototype.toString.call(bodycode) === '[object Object]') {\r\n                            tablecode = Object.keys(bodycode);\r\n                            if (tablecode.length == 1) {\r\n                                tablecode = tablecode[0];\r\n                            }\r\n                        } else {\r\n                            tablecode = bodycode;\r\n                        }\r\n                        if (type === 'form') {\r\n                            url = '/nccloud/platform/pub/cardheadafteredit.do';\r\n                            if (billtype === 'extcard') {\r\n                                url = '/nccloud/platform/pub/extcardheadafteredit.do';\r\n                            }\r\n                            data = this.createTabsAfterEventData(\r\n                                pagecode,\r\n                                headcode,\r\n                                tablecode,\r\n                                areaCode,\r\n                                key,\r\n                                value,\r\n                                formMetaCode,\r\n                                tabletype,\r\n                            );\r\n                            if (billtype === 'card') {\r\n                                //新增功能---差异化处理\r\n                                for (let pop in data.card.body) {\r\n                                    data.card.body[pop] = {\r\n                                        ...data.card.body[pop],\r\n                                        rows: [],\r\n                                    };\r\n                                }\r\n                            }\r\n                        } else if (type === 'table') {\r\n                            url = '/nccloud/platform/pub/cardbodyafteredit.do';\r\n                            if (billtype === 'extcard') {\r\n                                url = '/nccloud/platform/pub/extcardbodyafteredit.do';\r\n                            }\r\n                            data = this.createTabsBodyAfterEventData(\r\n                                pagecode,\r\n                                headcode,\r\n                                tablecode,\r\n                                areaCode,\r\n                                key,\r\n                                changedrows,\r\n                                index,\r\n                                tabletype,\r\n                            );\r\n                            if (billtype === 'card' && record && tabletype != 'editTable') {\r\n                                //新增功能---差异化处理\r\n                                data.card.body[tablecode] = {\r\n                                    ...data.card.body[tablecode],\r\n                                    rows: [record],\r\n                                };\r\n                                data.index = 0;\r\n                            }\r\n                        }\r\n                    }\r\n                    //请求成功的回调函数\r\n                    success = res => {\r\n                        let tableTypeObj = {};\r\n                        //单个表单\r\n                        if (billtype === 'form' && type === 'form') {\r\n                            if (res.data && res.data && res.data[areaCode]) {\r\n                                this.form.setAllFormValue({ [areaCode]: res.data[areaCode] }, false, false, key);\r\n                            }\r\n                        }\r\n                        //单个表格\r\n                        if (billtype === 'grid' && type === 'table') {\r\n                            if (res.data && res.data && res.data[areaCode]) {\r\n                                if (tabletype && tabletype === 'cardTable') {\r\n                                    this.cardTable.updateTabDataByIndexs(areaCode, [\r\n                                        {\r\n                                            index,\r\n                                            data: res.data[areaCode].rows[index],\r\n                                        },\r\n                                    ]);\r\n                                    tableTypeObj[areaCode] = 'cardTable';\r\n                                }\r\n                            }\r\n                        }\r\n                        //单据\r\n                        if (billtype === 'card' || billtype === 'extcard') {\r\n                            //表头赋值\r\n                            if (res.data && res.data.head && res.data.head[headcode]) {\r\n                                this.form.setAllFormValue({ [headcode]: res.data.head[headcode] }, false, false, key);\r\n                            }\r\n                            //表体赋值\r\n                            if (type === 'table') {\r\n                                if (typeof bodycode === 'string') {\r\n                                    if (res.data && res.data.body && res.data.body[bodycode]) {\r\n                                        if (tabletype && tabletype === 'cardTable') {\r\n                                            tableTypeObj[bodycode] = 'cardTable';\r\n                                            //新增功能---差异化处理\r\n                                            //this.cardTable.updateTabDataByRowId(bodycode, res.data.body[bodycode]);\r\n                                            this.cardTable.updateTabDataByIndexs(bodycode, [\r\n                                                {\r\n                                                    index,\r\n                                                    data: res.data.body[bodycode].rows[0],\r\n                                                },\r\n                                            ]);\r\n                                        }\r\n                                    }\r\n                                } else if (bodycode instanceof Array) {\r\n                                    bodycode.forEach(code => {\r\n                                        if (res.data && res.data.bodys && res.data.bodys[code]) {\r\n                                            if (tabletype && tabletype === 'cardTable') {\r\n                                                tableTypeObj[code] = 'cardTable';\r\n                                                //this.cardTable.setTableData(code, res.data.bodys[code], null, false);\r\n                                                this.cardTable.updateTabDataByIndexs(code, [\r\n                                                    {\r\n                                                        index,\r\n                                                        data: res.data.bodys[code].rows[index],\r\n                                                        //data: JSON.parse(JSON.stringify(res.data.bodys[code].rows[index]))\r\n                                                    },\r\n                                                ]);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                } else if (Object.prototype.toString.call(bodycode) === '[object Object]') {\r\n                                    if (Object.keys(bodycode).length > 1) {\r\n                                        Object.keys(bodycode).forEach(code => {\r\n                                            if (res.data && res.data.bodys && res.data.bodys[code]) {\r\n                                                if (tabletype && tabletype === 'cardTable') {\r\n                                                    tableTypeObj[code] = 'cardTable';\r\n                                                    //this.cardTable.setTableData(code, res.data.bodys[code], null, false);\r\n                                                    this.cardTable.updateTabDataByIndexs(code, [\r\n                                                        {\r\n                                                            index,\r\n                                                            //data: JSON.parse(JSON.stringify(res.data.bodys[code].rows[index]))\r\n                                                            data: res.data.bodys[code].rows[index],\r\n                                                        },\r\n                                                    ]);\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    } else if (Object.keys(bodycode).length == 1) {\r\n                                        let code = Object.keys(bodycode)[0];\r\n                                        if (res.data && res.data.body && res.data.body[code]) {\r\n                                            if (tabletype && tabletype === 'cardTable') {\r\n                                                tableTypeObj[code] = 'cardTable';\r\n                                                //this.cardTable.setTableData(code, res.data.body[code], null, false);\r\n                                                //新增功能---差异化处理\r\n                                                //this.cardTable.updateTabDataByRowId(code, res.data.body[code]);\r\n                                                this.cardTable.updateTabDataByIndexs(code, [\r\n                                                    {\r\n                                                        index,\r\n                                                        data: res.data.body[code].rows[0],\r\n                                                    },\r\n                                                ]);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (res.formulamsg && res.formulamsg instanceof Array && res.formulamsg.length > 0) {\r\n                            this.dealTabFormulamsg(res.formulamsg, tableTypeObj);\r\n                        }\r\n                        callback();\r\n                        if (res && typeof this.relationAfterEventCallBack === 'function') {\r\n                            this.relationAfterEventCallBack(this.output, key, areaCode, data, res.data, index, rowid); //表体行新旧值\r\n                        }\r\n                    };\r\n                    //发送查询关联项事件\r\n                    if (url && data && success) {\r\n                        ajax({\r\n                            url,\r\n                            method: 'post',\r\n                            async: false,\r\n                            data,\r\n                            success,\r\n                        });\r\n                    }\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n\r\n            //复写dealFormulamsg，司库云多页签使用，wangtaos添加\r\n            this.dealTabFormulamsg = (formulamsg, tableTypeObj, callback, data) => {\r\n                if (!tableTypeObj) {\r\n                    let { bodycode } = this.billinfo;\r\n                    if (Object.prototype.toString.call(bodycode) === '[object Object]') {\r\n                        tableTypeObj = bodycode;\r\n                    }\r\n                }\r\n                if (formulamsg && formulamsg instanceof Array && formulamsg.length > 0) {\r\n                    let mesArr = [];\r\n                    let n = 0;\r\n                    let m = 0;\r\n                    formulamsg.forEach(item => {\r\n                        if (item.type === '5') {\r\n                            let meta = this.meta.getMeta();\r\n                            if (item.render && meta[item.render.areacode]) {\r\n                                let index = meta[item.render.areacode].items.findIndex(ele => {\r\n                                    return ele.attrcode === item.render.attrcode;\r\n                                });\r\n                                if (index !== -1 && item.render && item.render.color) {\r\n                                    meta[item.render.areacode].items[index].color = item.render.color;\r\n                                    this.meta.setMeta(meta);\r\n                                }\r\n                            }\r\n                        }\r\n                        if (item.type === '3' || item.type === '4') {\r\n                            let meta = this.meta.getMeta();\r\n                            if (item.render && meta[item.render.areacode]) {\r\n                                let index = meta[item.render.areacode].items.findIndex(ele => {\r\n                                    return ele.attrcode === item.render.attrcode;\r\n                                });\r\n                                if (index != -1) {\r\n                                    if (meta[item.render.areacode].moduletype === 'form') {\r\n                                        this.form.setFormItemsDisabled(item.render.areacode, { [item.render.attrcode]: !item.render.editflag });\r\n                                    } else if (\r\n                                        meta[item.render.areacode].moduletype === 'table' &&\r\n                                        tableTypeObj &&\r\n                                        tableTypeObj[item.render.areacode]\r\n                                    ) {\r\n                                        if (tableTypeObj[item.render.areacode] === 'editTable') {\r\n                                            this.editTable.setEditableRowKeyByIndex(\r\n                                                item.render.areacode,\r\n                                                +item.render.rownum,\r\n                                                item.render.attrcode,\r\n                                                item.render.editflag,\r\n                                            );\r\n                                        }\r\n                                        if (tableTypeObj[item.render.areacode] === 'cardTable') {\r\n                                            this.cardTable.setTabTdEditByIndex(\r\n                                                item.render.areacode,\r\n                                                +item.render.rownum,\r\n                                                item.render.attrcode,\r\n                                                item.render.editflag,\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (item.type === '1') {\r\n                            if (item.message) {\r\n                                mesArr.push({\r\n                                    title: '提示',\r\n                                    color: 'info',\r\n                                    content: item.message,\r\n                                    noCancelBtn: true,\r\n                                    type: '1',\r\n                                });\r\n                                if (callback && data) {\r\n                                    callback(data);\r\n                                }\r\n                            }\r\n                        }\r\n                        if (item.type === '2') {\r\n                            if (item.message) {\r\n                                mesArr.push({\r\n                                    title: '错误',\r\n                                    color: 'danger',\r\n                                    content: item.message,\r\n                                    noCancelBtn: true,\r\n                                    type: '2',\r\n                                });\r\n                            }\r\n                        }\r\n                        if (item.type === '0') {\r\n                            if (item.message) {\r\n                                n++;\r\n                                mesArr.push({\r\n                                    title: '确认',\r\n                                    color: 'success',\r\n                                    content: item.message,\r\n                                    noCancelBtn: false,\r\n                                    type: '0',\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                    if (n === 0 && callback && typeof callback === 'function' && data) {\r\n                        callback(data);\r\n                    }\r\n                    outPromptByArr(mesArr, 0);\r\n\r\n                    function outPromptByArr(Arr, index) {\r\n                        if (index < Arr.length) {\r\n                            promptBox({\r\n                                title: Arr[index].title,\r\n                                color: Arr[index].color,\r\n                                content: Arr[index].content,\r\n                                noCancelBtn: Arr[index].noCancelBtn,\r\n                                beSureBtnClick: () => {\r\n                                    if (Arr[index].type === '0') {\r\n                                        m++;\r\n                                        if (m === n) {\r\n                                            if (callback && data) {\r\n                                                callback(data);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    outPromptByArr(Arr, ++index);\r\n                                },\r\n                                cancelBtnClick: () => {\r\n                                    if (Arr[index].type === '0') {\r\n                                        m > 0 ? m-- : m;\r\n                                    }\r\n                                    outPromptByArr(Arr, ++index);\r\n                                },\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            // 复写validateToSave，司库云多页签使用，wangtaos添加\r\n            this.validateToTabSave = (data, callback, tableTypeObj, billType) => {\r\n                if (!billType) {\r\n                    billType = this.billinfo.billtype;\r\n                }\r\n                let meta = this.meta.getMeta();\r\n                if (meta && meta.validateFlag) {\r\n                    let resData = new Promise(resolve => {\r\n                        ajax({\r\n                            url: '/nccloud/platform/formula/validate.do',\r\n                            data: {\r\n                                type: billType,\r\n                                userJson: JSON.stringify(data),\r\n                            },\r\n                            success(res) {\r\n                                if (res.success) {\r\n                                    resolve(res.formulamsg);\r\n                                }\r\n                            },\r\n                        });\r\n                    });\r\n                    resData.then(formulamsg => {\r\n                        if (formulamsg && formulamsg !== {}) {\r\n                            this.dealTabFormulamsg.call(this, formulamsg, tableTypeObj, callback, data);\r\n                        } else {\r\n                            callback(data);\r\n                        }\r\n                    });\r\n                } else {\r\n                    callback(data);\r\n                }\r\n            };\r\n\r\n            //如单据有主组织，新增时,将meta其他字段设置为不可编辑\r\n            this.initMetaByPkorg = (key = 'pk_org') => {\r\n                let metaObj = this.meta.getMeta();\r\n                if (Object.keys(metaObj).length) {\r\n                    for (let id in metaObj) {\r\n                        if (\r\n                            id !== 'formrelation' &&\r\n                            id !== 'gridrelation' &&\r\n                            metaObj[id] &&\r\n                            metaObj[id].items &&\r\n                            metaObj[id].items instanceof Array\r\n                        ) {\r\n                            let isTableForm = this.isTableEditForm(id, metaObj);\r\n                            this.copyMetaBeforePkorg[id] = this.copyMetaBeforePkorg[id] || {};\r\n                            metaObj[id].items.map(e => {\r\n                                let _disabled = e.disabled;\r\n                                if (e.attrcode && e.attrcode !== key) {\r\n                                    if (metaObj[id].moduletype != 'form' || isTableForm) {\r\n                                        e.disabled = true;\r\n                                    }\r\n                                }\r\n                                // 把meta上的disabled存起来\r\n                                this.copyMetaBeforePkorg[id][e.attrcode] = _disabled;\r\n                            });\r\n\r\n                            if (metaObj[id].moduletype === 'form' && !isTableForm) {\r\n                                if (this.formDataSource[id]) {\r\n                                    // 把所有关联区域的字段都禁用，不修改meta\r\n                                    let items = this.formDataSource[id].getInnerHooks().getAllFormItem();\r\n                                    let disabled = Object.keys(items).reduce((o, attrcode) => {\r\n                                        if (attrcode !== key) {\r\n                                            o[attrcode] = true;\r\n                                        } else {\r\n                                            // 取模板原始值\r\n                                            o[attrcode] = !!items[attrcode]?.['__origin__']?.disabled;\r\n                                        }\r\n                                        return o;\r\n                                    }, {});\r\n                                    this.formDataSource[id].setItemAttribute('disabled', disabled)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.meta.setMeta(metaObj);\r\n            };\r\n\r\n            this.isTableEditForm = (moduleId, metaObj) => {\r\n                let result = false;\r\n                if (metaObj['gridrelation'] && Object.keys(metaObj['gridrelation']).length) {\r\n                    for (let pop in metaObj['gridrelation']) {\r\n                        if (\r\n                            metaObj['gridrelation'][pop].destEditAreaCode &&\r\n                            Array.isArray(metaObj['gridrelation'][pop].destEditAreaCode) &&\r\n                            metaObj['gridrelation'][pop].destEditAreaCode.includes(moduleId)\r\n                        ) {\r\n                            result = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n\r\n            // 资金在用\r\n            this.MutiInit = outputWrapper.call(this, 'MutiInit', mutiInit);\r\n\r\n            this.MultiInit = outputWrapper.call(this, 'MultiInit', { getMultiLang: getMultiLang });\r\n\r\n            this.ViewModel = ViewModel;\r\n\r\n            //选择主组织以后，恢复模板，恢复其他字段的编辑性\r\n            this.resMetaAfterPkorgEdit = () => {\r\n                let meta = this.meta.getMeta();\r\n                if (meta) {\r\n                    for (let id in meta) {\r\n                        if (\r\n                            id !== 'formrelation' &&\r\n                            id !== 'gridrelation' &&\r\n                            meta[id] &&\r\n                            meta[id].items &&\r\n                            meta[id].items instanceof Array\r\n                        ) {\r\n                            if (meta[id].moduletype === 'form' && !this.isTableEditForm(id, meta)) {\r\n                                if (this.formDataSource[id]) {\r\n                                    // 取上一次存的meta值，设到表单上，不改变meta\r\n                                    let formList = this.formDataSource[id].getInnerHooks().getFormList();\r\n                                    let disabled = formList.reduce((o, moduleId) => {\r\n                                        Object.assign(o, this.copyMetaBeforePkorg[moduleId]);\r\n                                        return o;\r\n                                    }, {})\r\n\r\n                                    this.formDataSource[id].setItemAttribute('disabled', disabled)\r\n                                }\r\n                            } else {\r\n                                //表格\r\n                                meta[id].items = meta[id].items.map(item => {\r\n                                    if (\r\n                                        this.copyMetaBeforePkorg[id] &&\r\n                                        this.copyMetaBeforePkorg[id].hasOwnProperty(item.attrcode)\r\n                                    ) {\r\n                                        item.disabled = !!this.copyMetaBeforePkorg[id][item.attrcode];\r\n                                    }\r\n                                    return item;\r\n                                });\r\n                                // meta[id].items = meta[id].items.map((item, index) => {\r\n                                // \tif (this.copyMetaBeforePkorg[id] && this.copyMetaBeforePkorg[id].items[index]) {\r\n                                // \t\titem.disabled = !!this.copyMetaBeforePkorg[id].items[index].disabled;\r\n                                // \t}\r\n                                // \treturn item;\r\n                                // });\r\n                            }\r\n                        }\r\n                    }\r\n                    this.meta.setMeta(meta);\r\n                }\r\n            };\r\n\r\n            //二开的方法\r\n            this[feConfigName] = {};\r\n\r\n            // 统一输出给业务组使用的api\r\n            this.output = {\r\n                use: this.use,\r\n                cardPagination: this.cardPagination,\r\n                editTable: this.editTable,\r\n                form: this.form,\r\n                table: this.table,\r\n                search: this.search,\r\n                button: this.button,\r\n                meta: this.meta,\r\n                insertTable: this.insertTable,\r\n                transferTable: this.transferTable,\r\n                asyncTree: this.asyncTree,\r\n                syncTree: this.syncTree,\r\n                modal: this.modal,\r\n                ncmodal: this.modal,\r\n                setPageStatus: this.setPageStatus,\r\n                getPageStatus: this.getPageStatus,\r\n                renderItem: this.renderItem,\r\n                getPageDataByMeta: this.getPageDataByMeta,\r\n                createTabsMasterChildData: this.createTabsMasterChildData,\r\n                createMasterChildData: this.createMasterChildData,\r\n                createMasterChildDataSimple: this.createMasterChildDataSimple,\r\n                createExtCardDataSimple: this.createExtCardDataSimple,\r\n                createUIDom: this.createUIDom,\r\n                createFormAfterEventData: this.createFormAfterEventData,\r\n                createGridAfterEventData: this.createGridAfterEventData,\r\n                createHeadAfterEventData: this.createHeadAfterEventData,\r\n                createTabsAfterEventData: this.createTabsAfterEventData,\r\n                createBodyAfterEventData: this.createBodyAfterEventData,\r\n                createTabsBodyAfterEventData: this.createTabsBodyAfterEventData,\r\n                createExtCardData: this.createExtCardData,\r\n                createTabsCardData: this.createTabsCardData,\r\n                createCurrentRowAfterEventData: this.createCurrentRowAfterEventData,\r\n                linkTo: this.linkTo,\r\n                openTo: this.openTo,\r\n                specialOpenTo: this.specialOpenTo,\r\n                setHashChangeCallback: this.setHashChangeCallback,\r\n                setRelationAfterEventCallBack: this.setRelationAfterEventCallBack,\r\n                getUrlParam: this.getUrlParam,\r\n                setUrlParam: this.setUrlParam,\r\n                addUrlParam: this.addUrlParam,\r\n                delUrlParam: this.delUrlParam,\r\n                // approveDetail: this.approveDetail,\r\n                treeTableManyCol: this.treeTableManyCol,\r\n                initMetaByPkorg: this.initMetaByPkorg,\r\n                resMetaAfterPkorgEdit: this.resMetaAfterPkorgEdit,\r\n                // Uploader: this.Uploader,\r\n                downLoad: this.downLoad,\r\n                cardTable: this.cardTable,\r\n                MutiInit: this.MutiInit,\r\n                MultiInit: this.MultiInit,\r\n                DragWidthCom: this.DragWidthCom,\r\n                getSearchParam: this.getSearchParam,\r\n                checkNode: this.checkNode,\r\n                dealFormulamsg: this.dealFormulamsg,\r\n                validateToSave: this.validateToSave,\r\n                dealTabFormulamsg: this.dealTabFormulamsg,\r\n                validateToTabSave: this.validateToTabSave,\r\n                linkBack: this.linkBack,\r\n                openOut: this.openOut,\r\n                ViewModel: this.ViewModel,\r\n                pushTo: this.pushTo,\r\n                // ncUploader: this.Uploader,\r\n                handleRelationItems: this.handleRelationItems,\r\n                handleTabRelationItems: this.handleTabRelationItems,\r\n                getAppCode: this.getAppCode,\r\n                getPageCode: this.getPageCode,\r\n                beforeUpdatePage: this.beforeUpdatePage,\r\n                updatePage: this.updatePage,\r\n                BillHeadInfo: this.BillHeadInfo,\r\n                setRelationItemBillinfo: this.setRelationItemBillinfo,\r\n                findFocusModuleId: findFocusModuleId.bind(this),\r\n                controlAutoFocus: controlAutoFocus.bind(this),\r\n                executeAutoFocus,\r\n                getFocusRowIndex,\r\n                getAuthorityOfNotification,\r\n                noticeToUser,\r\n                PubSub,\r\n                multiCardTable: this.multiCardTable,\r\n                socket: this.socket,\r\n            };\r\n        }\r\n\r\n        beforeUpdatePage = () => {\r\n            this.isUpdatePage = true;\r\n        };\r\n\r\n        updatePage = (formid, tableid, buttonAreas, editid, autoFocus = false) => {\r\n            this.isUpdatePage = false;\r\n            if (buttonAreas && Array.isArray(buttonAreas)) {\r\n                // this.button.updateButtons(buttonAreas) // 按钮组更新\r\n            }\r\n\r\n            if (formid) {\r\n                this.form.updateForm(formid);\r\n            }\r\n            if (tableid) {\r\n                this.cardTable.updateTable(tableid, autoFocus);\r\n            }\r\n            if (editid) {\r\n                this.editTable.updateTable(editid, autoFocus);\r\n            }\r\n        };\r\n\r\n        //\r\n        keyDownHandle = e => {\r\n            let isTab = [e.keyCode, e.which, e.charCode].find(e => e === 9 || e === 13);\r\n            isTab && (ViewModel.shouldAutoFocus = true);\r\n            setTimeout(() => {\r\n                ViewModel.shouldAutoFocus = false;\r\n            }, 300);\r\n        };\r\n\r\n        UNSAFE_componentWillMount() {\r\n            //关闭浏览器时给出提示\r\n            // window.onbeforeunload = function() {\r\n            // \treturn '确定要离开吗？'\r\n            // };\r\n            //window.onbeforeunload = null;\r\n            //select、datepicker、number、input、textarea\r\n            //radio、checkbox、switch,label\r\n            //初始化模板，调用业务组初始化模板的方法\r\n            // if (initTemplate && typeof initTemplate === 'function') {\r\n            // \tinitTemplate({ ...this.props, ...this.output });\r\n            // }\r\n\r\n            // 初始设置语言\r\n            /*if (mutiLangCode) {\r\n                    this.MutiInits.init(mutiLangCode);\r\n                }*/\r\n\r\n            let callback = () => {\r\n                if (initTemplate && typeof initTemplate === 'function') {\r\n                    initTemplate({ ...this.props, ...this.output });\r\n                }\r\n            };\r\n            // 初始设置语言\r\n            if (mutiLangCode) {\r\n                if (!this.MutiInit) {\r\n                    this.MutiInit = outputWrapper.call(this, 'MutiInit', mutiInit);\r\n                }\r\n                this.MutiInit.init(mutiLangCode, callback, domainName);\r\n            } else {\r\n                callback();\r\n            }\r\n        }\r\n\r\n        disableHistory = () => {\r\n            history.pushState(null, null, document.URL);\r\n        }\r\n\r\n        isIE = () => {\r\n            let userAgent = navigator.userAgent,\r\n                isIE = false;\r\n            //判断是否IE浏览器\r\n            if (\r\n                userAgent.indexOf(\"compatible\") > -1 &&\r\n                userAgent.indexOf(\"MSIE\") > -1 &&\r\n                !isOpera\r\n            ) {\r\n                isIE = true;\r\n            }\r\n            //判断是否Edge浏览器\r\n            if (userAgent.indexOf(\"Trident\") > -1) {\r\n                isIE = true;\r\n            } \r\n            return isIE;\r\n        }\r\n\r\n        startPerMonitor = () => {\r\n            //渲染监控 --chendch\r\n            console.log(\"sprBegin---\");\r\n            this.listenSprNum = 1;\r\n            if (window.top.sys_monitor) {\r\n                const that = this;\r\n                window.top.addEventListener('modifySPR', this.handleModifySPR, false);\r\n                //处理单页跳转情况\r\n                if (window.top.sys_monitor.getbMonitor && window.top.sys_monitor.getbMonitor() && !this.isIE()) window.top.sys_monitor.initMonitor(that, false);\r\n            }\r\n        }\r\n\r\n        handleModifySPR=(obj)=>{\r\n            console.log(\"111--\", obj.data, this.listenSprNum);\r\n            if (obj.data.spr && this.listenSprNum == 1 && window.top.sys_monitor) {\r\n                window.top.sys_monitor.startMonitor();\r\n                debugger\r\n                let isOpenMonitor = window.top.sys_monitor.getbMonitor();\r\n                debugger\r\n                if (isOpenMonitor) {\r\n                    this.listenSprNum += 1;\r\n                    debugger\r\n                    window.top.sys_monitor.initMonitor(that);\r\n                }\r\n            } else {\r\n                this.listenSprNum = 1;\r\n            }\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.startPerMonitor();\r\n            //禁用浏览器后退按钮\r\n            if (window !== top && !historyBack) {\r\n                this.disableHistory();\r\n                window.addEventListener('popstate', this.disableHistory);\r\n            }\r\n\r\n            //加载二开的文件--liuxis\r\n            fastExtend.install(\r\n                allMethods => {\r\n                    // console.log(allMethods, this);\r\n                    this[feConfigName] = Object.assign({}, allMethods);\r\n                    getCheckedMethod(allMethods, 'UIExtend')(this.output);\r\n                    getCheckedMethod(allMethods, 'currentPageDidMount')(this.output);\r\n                },\r\n                { billinfo: this.billinfo },\r\n            );\r\n            // 如果父级有iframe 让焦点聚焦到子窗口 bbqin\r\n            if (document && document.body) {\r\n                // 方案一\r\n                document.body.tabindex = '0';\r\n                document.body.setAttribute('tabindex', 0);\r\n                // this.appAutoFocus && document.body.focus();\r\n\r\n                // 方案二\r\n                // let adom = document.createElement('input');\r\n                // adom.style.position = 'absolute';\r\n                // adom.style.top = '-1000px';\r\n                // document.body.insertBefore(adom, document.querySelector('#app'));\r\n                // this.appAutoFocus && adom.focus();\r\n\r\n                // 方案三\r\n                let appDom = document.querySelector('#app');\r\n                if (appDom && isIE()) {\r\n                    appDom.tabindex = '0';\r\n                    appDom.setAttribute('tabindex', 0);\r\n                    this.appAutoFocus && appDom.focus();\r\n                    setTimeout(function () {\r\n                        appDom.tabindex = '-1';\r\n                        appDom.setAttribute('tabindex', -1);\r\n                    }, 500);\r\n                } else {\r\n                    this.appAutoFocus && document.body.focus();\r\n                }\r\n            }\r\n            // 添加  onkeydown 全局事件 by bbqin\r\n            if (document) {\r\n                document.addEventListener('keydown', this.keyDownHandle);\r\n            }\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            getCheckedExtendMethod(this, 'beforeUnMountEvent')(this.output);\r\n            // 放到组件里单独注销了 避免一个页面有多个createPage导致其他pubsub不生效的问题\r\n            // 注销订阅事件\r\n            // PubSub.unsubscribe('autoFocus');\r\n            // PubSub.unsubscribe('autoFocus-IoC');\r\n            // 清除所有\r\n            // PubSub.clearAllSubscriptions();\r\n            // 清理\r\n            // this.infoExchangeController = null;\r\n\r\n            //销毁二开绑定在window上的事件\r\n            fastExtend.unstall();\r\n\r\n            if (document) {\r\n                document.removeEventListener('keydown', this.keyDownHandle);\r\n            }\r\n            if (window !== top) {\r\n                window.removeEventListener('popstate', this.disableHistory);\r\n            }\r\n\r\n            if (window.top.sys_monitor) {\r\n                window.top.removeEventListener('modifySPR', this.handleModifySPR, false);\r\n            }\r\n\r\n        }\r\n\r\n        setPageStatus = (type, id) => {\r\n            if (['edit', 'add', 'browse'].includes(type)) {\r\n                //改变页面url\r\n                let hash = window.location.hash.split('?'),\r\n                    query = Qs.parse(hash[1]);\r\n                query = { ...query, type, id };\r\n                hash[1] = Qs.stringify(query);\r\n                window.location.hash = hash.join('?');\r\n\r\n                // 改变页面状态\r\n                this.setState(\r\n                    { status: type },\r\n                    () => {\r\n                        //console.log(this.state.status);\r\n                    },\r\n                );\r\n            }\r\n        };\r\n\r\n        getPageStatus = () => {\r\n            return this.state.status;\r\n        };\r\n\r\n        //end monitor\r\n        endMonitor = () => {\r\n            if (window.top.sys_monitor && window.top.sys_monitor.endMonitor) {\r\n                window.top.sys_monitor.endMonitor();\r\n            }\r\n        };\r\n\r\n        render() {\r\n            //warning: ref='monitorpage' 仅作为端性能监控使用，release版本将会去除!!!\r\n            //add by chendch@yonyou.com\r\n            let isOpenMonitor = true;//false;\r\n            if (window.top.sys_monitor && !this.isIE()) {\r\n                if (window.top.sys_monitor.getbMonitor && isIE) {\r\n                    isOpenMonitor = window.top.sys_monitor.getbMonitor();\r\n                }\r\n            }\r\n            if (isOpenMonitor) {\r\n                return <App {...this.props} {...this.output} endMonitor={this.endMonitor} ref=\"monitorpage\" />;\r\n            } else {\r\n                return <App {...this.props} {...this.output} />;\r\n            }\r\n        }\r\n    }\r\n    return Page;\r\n};\r\n\r\nfunction getCompatibleApi(func) {\r\n    let { component, displayName, unfinished } = func;\r\n    let api = func.call(this);\r\n    let unfinishedApi = {};\r\n    if (!component) {\r\n        let notLoadedApi = {}\r\n        Object.keys(api).forEach(name => {\r\n            notLoadedApi[name] = function () {\r\n                console.warn(`${displayName}组件没有被加载，当前调用的api是${name}`);\r\n            }\r\n        });\r\n        api = notLoadedApi;\r\n    }\r\n    if (Array.isArray(unfinished)) {\r\n        unfinished.forEach(name => {\r\n            unfinishedApi[name] = function () {\r\n                console.warn(`${displayName}组件的${name}方法还没有完成`);\r\n            }\r\n        })\r\n    }\r\n    api._store = (component && component['use' + displayName]) || (() => { });\r\n    return Object.assign(unfinishedApi, api);\r\n}","const scriptMap = {};\r\n\r\nexport function loadJS(\r\n\turl,\r\n\tonload,\r\n\tonerror = err => {\r\n\t\tthrow err;\r\n\t}\r\n) {\r\n\tlet script;\r\n\r\n\tif (scriptMap[url] && scriptMap[url].script) {\r\n\t\tif (scriptMap[url].loaded) {\r\n\t\t\tonload();\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tscript = scriptMap[url].script;\r\n\t\t}\r\n\t} else {\r\n\t\tscript = document.createElement('script');\r\n\t\tscript.type = 'text/javascript';\r\n\t\tscript.src = url;\r\n\t\tdocument.body.appendChild(script);\r\n\t\tscriptMap[url] = script;\r\n\t}\r\n\r\n\tscript.addEventListener('load', function() {\r\n\t\tonload();\r\n\t\tscriptMap[url].loaded = true;\r\n\t});\r\n\tscript.addEventListener('error', function() {\r\n\t\tonerror();\r\n\t\tscriptMap[url].loaded = true;\r\n\t});\r\n}\r\n\r\nexport function unLoadJS(url) {\r\n\tif (scriptMap[url]) {\r\n\t\tdocument.head.removeChild(scriptMap[url]);\r\n\t\tdelete scriptMap[url];\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { loadJS } from './loadJS';\r\n\r\nlet config = {};\r\n\r\nfunction setConfig(nextConfig) {\r\n\tconfig = {\r\n\t\t...config,\r\n\t\t...nextConfig\r\n\t};\r\n}\r\n\r\nexport const useJS = function(useList, func) {\r\n\treturn class Wrapper extends Component {\r\n\t\tconstructor(props) {\r\n\t\t\tsuper(props);\r\n\t\t\tthis.state = {\r\n\t\t\t\tloaded: false,\r\n\t\t\t\targs: []\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcomponentDidMount() {\r\n\t\t\tif (Array.isArray(useList)) {\r\n\t\t\t\tPromise.all(\r\n\t\t\t\t\tuseList.map(dep => {\r\n\t\t\t\t\t\tlet path, component;\r\n\t\t\t\t\t\tif (config[dep]) {\r\n\t\t\t\t\t\t\tpath = config[dep];\r\n\t\t\t\t\t\t\tcomponent = dep;\r\n\t\t\t\t\t\t} else if (/\\.js$/.test(dep)) {\r\n\t\t\t\t\t\t\tpath = dep;\r\n\t\t\t\t\t\t\tcomponent = dep.substr(0, dep.length - 3);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpath = dep + '.js';\r\n\t\t\t\t\t\t\tcomponent = dep;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn new Promise(resolve => {\r\n\t\t\t\t\t\t\tloadJS(\r\n\t\t\t\t\t\t\t\tpath,\r\n\t\t\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t\t\tlet res = null;\r\n\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\tres = window[component].default;\r\n\t\t\t\t\t\t\t\t\t} catch (e) {}\r\n\t\t\t\t\t\t\t\t\tresolve(res);\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t\t\tresolve(null);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t).then(args => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tloaded: true,\r\n\t\t\t\t\t\tApp: func(...args)\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloaded: true,\r\n\t\t\t\t\tApp: func()\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t\tlet { loaded, App } = this.state;\r\n\t\t\tif (loaded) {\r\n\t\t\t\treturn <App {...this.props} />;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n};\r\n\r\nuseJS.setConfig = setConfig;\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__14__;","module.exports = __WEBPACK_EXTERNAL_MODULE__15__;","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: liyxt\r\n * @Date: 2020-07-28 14:12:36\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2020-08-24 10:57:52\r\n */\r\nif (NODE_ENV !== 'development') {\r\n    // eslint-disable-next-line no-undef\r\n    console.log(`%c platform was built from ${BRANCH} at: ${PLATFORM_VERSION} `, 'background:#222;color:#bada55');\r\n}\r\n\r\nimport 'babel-polyfill';\r\nimport createPage from '../../components/createPage.js';\r\nimport { promptBox, print, printer, output, ConnectSocket } from '@platform/components';\r\nimport * as base from '@platform/base';\r\nimport * as high from '@platform/components';\r\nimport { getTheme, setTheme, addFontClass } from '@platform/api';\r\nhigh.Refer = base.Refer;\r\nhigh.BillTrack = base.BillTrack;\r\nhigh.DagreChart= base.DagreChart;\r\nhigh.BillErrorTrack = base.BillErrorTrack;\r\nconst DragWithCom = high.DragWidthCom;\r\n\r\nlet oldbase = {};\r\nconst importMap = {\r\n    Breadcrumb: { NCBreadcrumbItem: 'Item' },\r\n    Checkbox: { CheckboxGroup: 'CheckboxGroup' },\r\n    Dnd: { GridLayout: 'GridLayout' },\r\n    Form: { NCFormItem: 'FormItem' },\r\n    Menu: {\r\n        NCSubMenu: 'SubMenu',\r\n        NCMenuItemGroup: 'ItemGroup',\r\n        NCDivider: 'Divider',\r\n        Item: 'Item',\r\n    },\r\n    Select: { NCOption: 'Option' },\r\n    Step: { NCSteps: 'Steps' },\r\n    Tabs: { NCTabPane: 'TabPane' },\r\n    Tree: { NCTreeNode: 'TreeNode' },\r\n    Upload: { Dragger: 'Dragger' },\r\n    ButtonGroup: { NCButton: 'Button' },\r\n    Modal: { Header: 'Header', Title: 'Title', Body: 'Body', Footer: 'Footer' },\r\n    MultiLangText: { MultiOption: 'MultiOption' },\r\n    Radio: {\r\n        NCRadioGroup: 'RadioGroup',\r\n        NCRadioButton: 'RadioButton',\r\n    },\r\n};\r\n\r\nfunction bindNC(entries, output) {\r\n    Object.keys(entries).forEach(key => {\r\n        output['NC' + key] = entries[key];\r\n        if (importMap[key]) {\r\n            Object.keys(importMap[key]).forEach(subkey => {\r\n                output['NC' + key][subkey] = entries[key][importMap[key][subkey]];\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nbindNC(base, oldbase);\r\n\r\noldbase.NCScrollElement = base.Anchor.ScrollElement;\r\noldbase.NCScrollLink = base.Anchor.ScrollLink;\r\noldbase.NCFormControl = base.Input;\r\noldbase.EmptyAreaTip = base.EmptyAreaTip;\r\noldbase.NCNumber = base.NumberInput\r\noldbase.NCDatePicker.NCRangePicker = base.RangePicker;\r\noldbase.NCDatePicker.NCYearPicker = base.YearPicker;\r\n\r\nlet USUAL_KEYS = {};\r\nObject.entries(oldbase.NCHotKeys.USUAL_KEYS).forEach(([key, value]) => {\r\n    USUAL_KEYS['NC_' + key] = value;\r\n});\r\noldbase.NCHotKeys.USUAL_KEYS = { ...(oldbase.NCHotKeys.USUAL_KEYS || {}), ...USUAL_KEYS };\r\n\r\nrequire('../../static/font/iconfont.css');\r\n//添加标准单据样式\r\nrequire('../../public/standardStyle/index.less');\r\n// 添加给业务组的主题\r\nrequire('../../public/standardStyle/theme-cls.less');\r\n\r\nconst themeTypes = ['default', 'red', 'green', 'black', 'blue', 'yellow'];\r\n// setTheme({ themeType: 'red', themeTypes, baseName: 'nc-lightapp-front' });\r\n// setTheme({ themeType: 'green', themeTypes, baseName: 'nc-lightapp-front' });\r\ngetTheme().then(themeType => {setTheme({ themeType, themeTypes, baseName: 'nc-lightapp-front' });addFontClass();});\r\n\r\nconst tableTotal = base.Table;\r\n\r\nexport * from '@platform/api';\r\n// export * from 'core';\r\nimport { useJS } from 'core/api/useJS.js'\r\nexport {\r\n    createPage,\r\n    oldbase as base,\r\n    high,\r\n    promptBox,\r\n    print,\r\n    printer,\r\n    ConnectSocket,\r\n    output,\r\n    tableTotal,\r\n    DragWithCom,\r\n    useJS,\r\n};\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__17__;","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        }).join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key') : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key');\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value'))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix\n            : prefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly,\n            charset\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj; // eslint-disable-line no-param-reassign\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n"],"sourceRoot":""}