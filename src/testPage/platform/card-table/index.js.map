{"version":3,"sources":["webpack://@platform/[name]/webpack/universalModuleDefinition","webpack://@platform/[name]/webpack/bootstrap","webpack://@platform/[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://@platform/[name]/external \"@platform/api/index\"","webpack://@platform/[name]/./node_modules/react-hotkeys/es/react-hotkeys.production.min.js","webpack://@platform/[name]/./node_modules/mousetrap/mousetrap.js","webpack://@platform/[name]/external \"@platform/template/index\"","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/config/moduleType.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/getCellIdentity.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/findNextFocusItemInTable.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/components/TabsTable/store.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/components/SingleCardTable/store.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/store.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/components/SingleRowExpand/index.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/components/AllRowsExpand/index.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/components/TabHotkey/index.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/config/stopEnterHotKey.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/components/TabsTable/index.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/components/SideBox/MultiTabsTable.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/components/SideBox/index.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/components/SingleCardTable/index.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/components/MultiCardTable/index.js","webpack://@platform/[name]/./src/platform/components/Table/appTable/CardTable/index.js","webpack://@platform/[name]/./src/platform/components/WithAutoFocus/executeAutoFocus.js","webpack://@platform/[name]/./node_modules/prop-types/index.js","webpack://@platform/[name]/./node_modules/lodash.isequal/index.js","webpack://@platform/[name]/./node_modules/react-hotkeys/index.es.js","webpack://@platform/[name]/external \"@platform/base/index\"","webpack://@platform/[name]/(webpack)/buildin/global.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/handleSpecialCase.js","webpack://@platform/[name]/external \"@platform/form/index\"","webpack://@platform/[name]/(webpack)/buildin/module.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/findNextFocusItemInForm.js","webpack://@platform/[name]/./node_modules/classnames/index.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/calculateNeedJumpTimes.js","webpack://@platform/[name]/external {\"root\":\"ReactDOM\",\"var\":\"ReactDOM\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\"}","webpack://@platform/[name]/./node_modules/lodash.isboolean/index.js","webpack://@platform/[name]/./node_modules/lodash.isobject/index.js","webpack://@platform/[name]/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://@platform/[name]/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://@platform/[name]/external \"@platform/table-core/index\"","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/config/availableItems.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/createKeyMap.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__8__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__42__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","classCallCheck","e","TypeError","createClass","length","configurable","writable","_extends","assign","arguments","inherits","constructor","setPrototypeOf","__proto__","objectWithoutProperties","indexOf","possibleConstructorReturn","ReferenceError","FocusTrap","this","getPrototypeOf","apply","props","component","children","createElement","tabIndex","hasChanged","propTypes","onFocus","func","onBlur","oneOfType","string","node","defaultProps","HotKeys","hotKeyParent","hotKeyMap","__hotKeyMap__","updateMap","buildMap","context","keyMap","__mousetrap__","attach","findDOMNode","updateHotKeys","childHandledSequence","reset","handlers","a","syncHandlersToMousetrap","getMap","keys","forEach","Array","isArray","sequencesFromKeyMap","action","sequence","push","callback","focused","__isFocused__","__lastChildSequence__","bool","any","childContextTypes","contextTypes","withHotKeys","_setRef","state","setState","_ref","hotKeyHandlers","ref","HotKeyMapMixin","getChildContext","componentWillMount","document","undefined","_REVERSE_MAP","_MAP","8","9","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","45","46","91","93","224","_KEYCODE_MAP","106","107","109","110","111","186","187","188","189","190","191","192","219","220","221","222","_SHIFT_MAP","_SPECIAL_ALIASES","test","navigator","platform","toString","Mousetrap","_bindMultiple","unbind","trigger","_directMap","_callbacks","stopCallback","element","className","_belongsTo","ancestor","parentNode","target","composedPath","initialEventTarget","tagName","isContentEditable","handleKey","self","_handleKey","addKeycodes","init","documentMousetrap","method","charAt","_addEvent","type","addEventListener","attachEvent","_characterFromEvent","character","String","fromCharCode","which","shiftKey","toLowerCase","_isModifier","_pickBestAction","modifiers","_getReverseMap","_getKeyInfo","combination","replace","split","_keysFromString","targetElement","_resetTimer","_sequenceLevels","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","modifiers1","modifiers2","matches","seq","metaKey","ctrlKey","sort","join","deleteCombo","combo","deleteSequence","splice","_fireCallback","srcElement","preventDefault","returnValue","_preventDefault","stopPropagation","cancelBubble","_stopPropagation","_handleKeyEvent","keyCode","altKey","_eventModifiers","_bindSequence","_increaseSequence","nextAction","clearTimeout","setTimeout","_callbackAndReset","wrappedCallback","_bindSingle","info","callbacks","maxLevel","processedSequenceCallback","Math","max","ignoreThisKeypress","combinations","MODULE_TYPE","form","cardTable","editTable","getCellIdentity","td","div","querySelector","attributes","cellIdentity","values","find","item","startsWith","CONFIG","hotKeyModuleIdPrefix","findNextFocusItemInTable","eventTarget","ViewModel","orderOfHotKey","parentTd","findParentTd","nextTd","nextElementSibling","currentTr","parentElement","lastTd","findLastTdInRow","checkboxInTable","findNextSiblings","enterTriggerCellId","executeAutoFocus","lastElementChild","currentModuleId","id","tds","querySelectorAll","firstFocusItem","findFirstFocusItemInCurrentModule","jumpToNextModuleFocusItem","perceptionHotKeyConfig","findNextRowTd","tr","console","warn","el","includes","previousElementSibling","currentDiv","nextTr","getAttribute","nextModuleId","orderOfHotKeyLen","nextModuleIndex","calculateNextModuleId","nextModuleKeyMap","keyByModuleId","activeTableKeyMap","activeTable","firstItemDom","firstItem","findNextFocusItemInForm","shouldAutoFocus","ncExecuteFocus","focus","TabsStore","toggleTableShow","flag","setStore","store","tableSwitch","maxVisible","activeCell","hideTabsCode","isShow","getStore","param","shouldForceUpdate","validateFailed","getCache","tableId","tabId","rowKeyValue","data","row","query","attrcode","cellProps","getCellProps","validated","refresh","getTableHooks","openMaxView","isMaxView","getActiveCell","setActiveCell","clearValidated","EditTableStore","hookFactory","utils","isWrongFalse","isObject","MetaStore","ROW_STATUS","toggleRowView","record","expandedRowKeys","indexNum","rowid","expandRowStatus","showSideBox","status","index","addTableRow","getVisibleRows","tableSideBox","sideBoxVisible","closeSideBox","openListView","setGrandTableData","isCache","isDiffUpdate","tableSideBoxRecord","grandTableStore","grandTable","rows","map","generateRowKey","oldData","newRow","findIndex","setData","grandTableData","JSON","parse","stringify","setCache","getAllGrandData","isDeepCopy","grandTableIds","cacheGrandTable","editRecord","editRowid","currentGrandTable","grandCode","getAllRows","getViewGrandData","view","getViewData","filterEmptyGrandRows","granTableConfig","newGrandData","currentRowGrandData","tableCode","rule","grandTableRows","newRows","valueKeys","filter","val","every","one","deleteGrandData","rowidList","delAll","ListViewVisible","activeTableCode","isTop","defaultValue","autoFocus","isAutoAddRow","setTableStatus","setTableData","isUpdatePage","grandTableCacheData","grandId","resetTableData","MetaCardTableStore","TableStore","tableStores","meta","json","errorTabIds","layout","currentTab","paths","res","forceUpdate","getMeta","gridrelation","containerrelation","_getMetaRelation","tabs","_getTabs","stores","log","ids","currentStore","_batchTabsTable","getData","oldStatus","getTableProps","pattern","mainId","flagObj","mainCode","code","activeCode","setLayout","setTabsTableData","resetTabsTableData","getTabsTableData","setTabsTableStatus","getTabsStores","addTabStore","setTabsTableShow","setTabsTableActive","getTabsTableActive","defaultColor","isWrong","isNullOrVoid","changeTime","getRandomPassword","formatAcuracy","SingleRowExpand","content","metaItems","width","expandStyleData","expandLayout","itemWidth","expandItemWidth","col","gridNum","display","scale","ICode","IType","itemtype","IScale","LanguageMeta","languageMeta","color","isLast","isnextrow","currentrowBlankGrid","style","float","height","newWidth","colnum","num","Number","fieldid","getSysFieldid","marginBottom","label","handleBrowse","datatype","options","multiple","tabsStore","rowIndex","option","displayTypes","timeTypes","formatDatetime","formatNumber","LangCode","getLangCode","loginLang","languageCode","browse","setFieldValue","setCellValue","rowKey","getFieldValue","getCellValue","path","getMultiLang","destBrowseAreaCode","viewId","items","visible","b","getBoundingClientRect","tableBodyWidth","position","zIndex","error","Component","AllRowsExpand","ItemProvider","setTableAreaHeight","windowHeight","body","clientHeight","header","tableAreaHeight","handleScroll","viewStartIndex","getViewIndex","calculate","lineHeight","scrollHeight","DOM","getThisDOM","floor","scrollTop","pageSize","ceil","viewEndIndex","ReactDOM","getDOMIndex","DOMStartIndex","DOMEndIndex","getHeightOfFirstAndLastLineByDOMIndex","heightOfFirstLine","heightOfLastLine","prevScrollTop","_OFFSET","langJson","expandedList","tableDom","offsetWidth","isObj","typeFormat","clientWidth","nextProps","config","adaptionHeight","otherAreaHeight","tableHeight","offsetHeight","visibleRows","styleObj","cardTableArea","maxHeight","expandHeight","top","minHeight","onScroll","slice","nextTabHandler","nextTabUSRHandler","prevTabHandler","prevTabUSLHandler","expand","enter","TabHotKey","hotKeyboard","wrapperId","headerId","activeKey","others","getActiveTabElement","comboKey","wrapper","activeTabTitle","firstElementChild","activeElement","contains","getWillActiveTabElement","dir","$li","lilen","first","last","willActiveElement","setValueOfActiveTable","next","click","prev","stopEnterHotKey","container","getElementById","getFirstItem","nextFocusTd","nextFocusTr","needJumpTimes","calculateNeedJumpTimes","needJumpItemCode","Item","Menu","formatColumn","lib","hotkey","selectRow","checkCol","indexCol","errorCol","selectable","excel","total","columnSort","contextMenu","uuidv4","excelPackageData","polymerizeComponents","isFunction","isString","isNumber","isEmptyValue","isUndefined","getMetaIsTotal","MetaTable","Table","user","TabsTable","tabChange","initSwitch","mainStore","tabsConfig","mainAreaCode","currentCode","getMainCode","currentMainCode","onTabChange","tabsAngleToggle","metaTabs","tableVisible","onHeadAngleToggle","onAllCheckChange","selectedChange","onSelectedAll","setRowsSelected","getSelectedRows","getCheckInfo","checkedAll","oldLen","newLen","onCheckChange","isUnique","onSelected","getRowProps","getTrueRowIndex","setTableProps","selected","rowKeyValues","sortChange","sortParam","sortData","sortObj","getCurrentMeta","field","handleSortcolumns","columns","invisibleData","contextMenuClick","btnCode","execCommandCopy","insertNum","isHotKey","getRowOldValue","insertRowsAfterIndex","deleteTableRows","getArrayMeta","getRows","currentConfig","rightMenuClick","onBatchChange","editCode","copyCode","fill","rowIndexs","activeHeads","arrayMeta","currentMeta","activedCells","selectedRows","tableMeta","relation","tabRelation","getCurrentModel","getTabs","elem","areaVisible","isAllTabsHide","moreTabs","activeName","getMoreTabsItem","maincode","onSelect","classnames","active","onClick","getValidateFailed","isAreaEditable","isEditable","disabled","createTableTabs","tableHeadLeft","tableHead","hideSwitch","hideMaxBtn","showCheck","hideBrowseCheckbox","showEditIcon","showTotalNum","initShowTotalNum","showSelectedNum","showToggleAngle","isunfold","isSingleTab","checkNum","currentData","placement","overlay","delayHide","delayShow","totalNum","showErrorIcon","editIconFlag","getColSettiongParam","getConfig","appcode","pageTo","getAppCode","pagecode","getPageCode","templateCode","pageid","areaCode","areaId","oid","noColSetClass","colSetCallback","tableType","tabName","updateColumnAfterSetting","newColumn","setMeta","finalColumn","sortIndexArr","sortObjArr","newItem","oldItem","islock","onBeforeEvent","params","currentModel","column","event","triggerType","maxlength","isFlag","batchChangeIndex","batchChangeKey","batchChangeValue","batchChangeDisplay","loginCode","loginIndex","loginValue","onAfterEvent","autoAddRow","oldValue","componentValue","isTriggerModal","current","trim","setCellProps","open","isEdit","saveRowOldValue","viewLen","isSwitch_browseDisabled","validValue","isEmpty","tableStatus","enabled","createContent","expandedRowRender","renderItems","getHotKeyConfig","onCellHyperlinkTo","isHorizontal","isGrandson","onChange","onBodyScroll","lazyload","onRowClick","onRowDoubleClick","rowClassName","cellClassName","onBatchSelected","high_selectable","high_filter","handleFilterCallBack","handleResetCallBack","hideTableTabs","onCellKeyDown","multipleRowCell","cancelCustomRightMenu","showWidthAndHeightConfig","addBlankCol","watchSeachHeight","customTabs","focusIndex","foldCacheId","hideRightMenu","othersConfig","hasSelected","setSelectedIndex","enable","arrColumns","colSettingParam","isTotal","showTotal","extraAreaHeight","isNaN","adaption","tableMaxHeight","tableHight","showTableArea","table","isBatchSelect","selectCell","haveMeta","data-uuid","uuid","dom","scroll","x","y","bodyStyle","sortBack","format","isMultiSelectedEnabled","origin","setRowProps","edit","checkInfo","saga_status","isSelected","currentCls","reduce","checkColConfig","indexColConfig","showIndex","totalConfig","noTotalRows","noTotalCol","allowTotalRows","numberPd","onCellMouseDown","excelConfig","activeSpecialCells","isBatch","pervActivedCells","actived","leftLine","rightLine","topLine","bottomLine","showDrag","oldActiveSpecialCells","setColumn","unitActive","viewData","linkObjMeta","result","arr","prevRowValues","nextRowValues","cell","prevCol","nextCol","getPrevSelector","prevSelector","onDeSelect","deActiveCells","prevActiveCells","prevActiveCellsObj","prevActiveCellsArr","onClearData","activeCells","getColumn","pasteContent","activeCellValue","isRefer","alloweFilter","panelTitle","filterData","customColData","isReset","filteredRow","filteredRowKeyValues","columnStatus","filterItemList","afterFilterItemList","afterFilterFactors","indeterminate","some","filterIndex","onHide","contextMenuConfig","showBusinessBtn","showPasteBtn","high_hotkey","onCellStatusChange","oldColumn","cardType","addAffixScroll","foldingRowChange","isEllipsis","bodyDisplayInRow","autoAffixScroll","colsSettingParam","updateColumnHandle","oldSwitch","isGrandTable","source","setRef","grandComponentDidMount","removeRef","nextState","cardTableComponentUpdate","MultiTabsTable","handlePubSub","calcGrandTableHeight","isCalcHeight","currentTop","grandTableHeight","getMultiMeta","grandTableMainId","multiCodeArr","pubsub_token","grandGroup","PubSub","subscribe","unsubscribe","removeEventListener","grandTableConfig","grandTableId","isBoolean","TableSideBox","calcSideBoxWidth","setFormMeta","destEditAreaCode","formMainCode","formMeta","formrelation","newItems","render","oldRender","renderStatus","isEditRender","isBrowseRender","formStore","handleAdd","modelAddRow","modelAddDefaultValue","saveGrandTableData","tableRows","updateSideBox","afterAddRowid","handleDel","modelDelRow","beforeDelRowid","pageButtonClick","tableData","sideRowChange","grandValidateFailed","grandData","deleteGrandTableByRowid","initMeta","notUpdateTable","buttonDisabled","formValue","getMetaItems","setItemAttribute","emptyAllFormValue","setAllFormValue","formItem","setStatus","grandStore","getButtons","modelFooter","hideModelSave","modelSave","hideAdd","modelAddRowBefore","hideDel","modelDelRowBefore","sideBoxClose","onClose","modelClose","formAfterEvent","prams","curMetaItem","allValue","singleFormCode","setRows","formBeforeEvent","Form","useForm","show","sideTitle","modalCustomerArea","title","mask","showButton","maskClose","buttonClick","getHeaderBtns","CardTable","getCurrentProps","mainSource","currentSource","pkcode","isMultiTab","haveExpandIcon","MultiCardTable","getMultiCodeArr","setTabsStore","mountChildrenStore","ele","mountedStore","getCardTableStore","multiConfig","CardTableWrapper","getCardTableProps","isMulti","other","afterLangload","cardTableProps","getViewMeta","SingleCardTable","displayName","useCardTable","TabsTableStore","matchItemFocus","refer","selector","inputEl","spanEl","wrap","fn","autoFocusInTricky","input","setNormalItemFocus","textarea","textEl","select","focusDom","switch","setSwitchItemFocus","switch_browse","normal","switchEl","argsTag","mapTag","objectTag","setTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","global","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","array","predicate","mapToArray","size","setToArray","set","uid","transform","arrayProto","funcProto","objectProto","coreJsData","funcToString","maskSrcKey","exec","IE_PROTO","nativeObjectToString","reIsNative","RegExp","Buffer","Uint8Array","propertyIsEnumerable","symToStringTag","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","arg","DataView","getNative","Map","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","iteratee","baseTimes","isIndex","assocIndexOf","eq","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","bitmask","customizer","stack","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","byteLength","byteOffset","buffer","message","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","getAllKeys","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isMasked","baseKeys","Ctor","proto","arrLength","seen","arrValue","othIndex","has","keysFunc","symbolsFunc","offset","arrayPush","baseGetAllKeys","getSymbols","getMapData","getValue","pop","pairs","LARGE_ARRAY_SIZE","resIndex","arrayFilter","symbol","ArrayBuffer","resolve","ctorString","isLength","baseUnary","g","webpackPolyfill","deprecate","classList","getFormType","findLastFocusItemInForm","hasOwn","classNames","classes","argType","inner","default","direction","tempTr","tempNeedJumpTimes","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","number","arrayOf","elementType","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","availableFormItems","availableTableItems","formDisableAttrCode","tableDisabledAttrCode","hotKeyPrefix","formAutoFocusJudgement","force","isAvailableFormItem","metaRes","itemDisabled","iteratorTableColumns","iterable","pool","pre","isAvailableTableItem","processKeyMapOfTable","availableItems","lastRowIndex","moduleType","lastAvailableItem","lastItem","tableAutoFocusJudgement","publish","publishFocusItem","hasTabRelation","createTabRelationKeyMap","parent","deleteKeyByModuleId","moduleInfo","createByModuleType","newOrderOfHotKey","formItems","itemsAttrCode","firstItemKey","withHotKeyChange"],"mappings":"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","file":"card-table/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"@platform/api/index\"), require(\"@platform/base/index\"), require(\"react-dom\"), require(\"@platform/table-core/index\"), require(\"@platform/template/index\"), require(\"@platform/form/index\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"@platform/api/index\", \"@platform/base/index\", \"react-dom\", \"@platform/table-core/index\", \"@platform/template/index\", \"@platform/form/index\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@platform/card-table/index\"] = factory(require(\"react\"), require(\"@platform/api/index\"), require(\"@platform/base/index\"), require(\"react-dom\"), require(\"@platform/table-core/index\"), require(\"@platform/template/index\"), require(\"@platform/form/index\"));\n\telse\n\t\troot[\"@platform/card-table/index\"] = factory(root[\"React\"], root[\"@platform/api/index\"], root[\"@platform/base/index\"], root[\"ReactDOM\"], root[\"@platform/table-core/index\"], root[\"@platform/template/index\"], root[\"@platform/form/index\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__8__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__42__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../platform/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1894);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/**\n * ISC License\n *\n * Copyright (c) 2018, Aleck Greenham\n *\n * Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport PropTypes from\"prop-types\";import React,{Component,PureComponent}from\"react\";import isEqual from\"lodash.isequal\";import ReactDOM from\"react-dom\";import isBool from\"lodash.isboolean\";import isObject from\"lodash.isobject\";var classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},createClass=function(){function e(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,o,n){return o&&e(t.prototype,o),n&&e(t,n),t}}(),_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e},inherits=function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},objectWithoutProperties=function(e,t){var o={};for(var n in e)t.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(e,n)&&(o[n]=e[n]);return o},possibleConstructorReturn=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t},FocusTrap=function(e){function t(){return classCallCheck(this,t),possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return inherits(t,Component),createClass(t,[{key:\"render\",value:function(){var e=this.props,t=e.component,o=e.children,n=objectWithoutProperties(e,[\"component\",\"children\"]);return React.createElement(t,_extends({tabIndex:\"-1\"},n),o)}}]),t}();function sequencesFromKeyMap(e,t){var o=e[t];return o?Array.isArray(o)?o:[o]:[t]}function hasChanged(e,t){return!isEqual(e,t)}FocusTrap.propTypes={onFocus:PropTypes.func,onBlur:PropTypes.func,component:PropTypes.oneOfType([PropTypes.func,PropTypes.string]),children:PropTypes.node},FocusTrap.defaultProps={component:\"div\"};var HotKeys=function(e){function t(e,o){classCallCheck(this,t);var n=possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,o));return n.onFocus=n.onFocus.bind(n),n.onBlur=n.onBlur.bind(n),n}return inherits(t,Component),createClass(t,[{key:\"getChildContext\",value:function(){return{hotKeyParent:this,hotKeyMap:this.__hotKeyMap__}}},{key:\"componentWillMount\",value:function(){this.updateMap()}},{key:\"updateMap\",value:function(){var e=this.buildMap();return!isEqual(e,this.__hotKeyMap__)&&(this.__hotKeyMap__=e,!0)}},{key:\"buildMap\",value:function(){var e=this.context.hotKeyMap||{},t=this.props.keyMap||{};return _extends({},e,t)}},{key:\"getMap\",value:function(){return this.__hotKeyMap__}},{key:\"componentDidMount\",value:function(){var e=require(\"mousetrap\");this.__mousetrap__=new e(this.props.attach||ReactDOM.findDOMNode(this)),this.updateHotKeys(!0)}},{key:\"componentDidUpdate\",value:function(e){this.updateHotKeys(!1,e)}},{key:\"componentWillUnmount\",value:function(){this.context.hotKeyParent&&this.context.hotKeyParent.childHandledSequence(null),this.__mousetrap__&&this.__mousetrap__.reset()}},{key:\"updateHotKeys\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=this.props.handlers,n=void 0===o?{}:o,r=t.handlers,s=void 0===r?n:r,a=this.updateMap();(e||a||hasChanged(n,s))&&(this.context.hotKeyParent&&this.context.hotKeyParent.childHandledSequence(null),this.syncHandlersToMousetrap())}},{key:\"syncHandlersToMousetrap\",value:function(){var e=this,t=this.props.handlers,o=void 0===t?{}:t,n=this.getMap(),r=[],s=this.__mousetrap__;Object.keys(o).forEach(function(t){var s=o[t];sequencesFromKeyMap(n,t).forEach(function(t){var o=void 0;isObject(t)&&(o=t.action,t=t.sequence),r.push({callback:function(t,o){if((isBool(e.props.focused)?e.props.focused:e.__isFocused__)&&o!==e.__lastChildSequence__)return e.context.hotKeyParent&&e.context.hotKeyParent.childHandledSequence(o),s(t,o)},action:o,sequence:t})})}),s.reset(),r.forEach(function(e){var t=e.sequence,o=e.callback,n=e.action;return s.bind(t,o,n)})}},{key:\"childHandledSequence\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.__lastChildSequence__=e,this.context.hotKeyParent&&this.context.hotKeyParent.childHandledSequence(e)}},{key:\"render\",value:function(){var e=this.props,t=(e.keyMap,e.handlers,e.focused,e.attach,e.children),o=objectWithoutProperties(e,[\"keyMap\",\"handlers\",\"focused\",\"attach\",\"children\"]);return React.createElement(FocusTrap,_extends({},o,{onFocus:this.onFocus,onBlur:this.onBlur}),t)}},{key:\"onFocus\",value:function(){var e;(this.__isFocused__=!0,this.props.onFocus)&&(e=this.props).onFocus.apply(e,arguments)}},{key:\"onBlur\",value:function(){var e;(this.__isFocused__=!1,this.props.onBlur)&&(e=this.props).onBlur.apply(e,arguments);this.context.hotKeyParent&&this.context.hotKeyParent.childHandledSequence(null)}}]),t}();HotKeys.propTypes={keyMap:PropTypes.object,handlers:PropTypes.object,focused:PropTypes.bool,attach:PropTypes.any,children:PropTypes.node,onFocus:PropTypes.func,onBlur:PropTypes.func},HotKeys.childContextTypes={hotKeyParent:PropTypes.any,hotKeyMap:PropTypes.object},HotKeys.contextTypes={hotKeyParent:PropTypes.any,hotKeyMap:PropTypes.object};var withHotKeys=function(e){return function(t){return function(o){function n(e){classCallCheck(this,n);var t=possibleConstructorReturn(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t._setRef=t._setRef.bind(t),t.state={handlers:{}},t}return inherits(n,PureComponent),createClass(n,[{key:\"componentDidMount\",value:function(){this.setState({handlers:this._ref.hotKeyHandlers})}},{key:\"_setRef\",value:function(e){this._ref=e}},{key:\"render\",value:function(){var o=this.state.handlers;return React.createElement(HotKeys,{component:\"document-fragment\",keyMap:e,handlers:o},React.createElement(t,_extends({ref:this._setRef},this.props)))}}]),n}()}};function HotKeyMapMixin(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{contextTypes:{hotKeyMap:PropTypes.object},childContextTypes:{hotKeyMap:PropTypes.object},getChildContext:function(){return{hotKeyMap:this.__hotKeyMap__}},componentWillMount:function(){this.updateMap()},updateMap:function(){var e=this.buildMap();return!isEqual(e,this.__hotKeyMap__)&&(this.__hotKeyMap__=e,!0)},buildMap:function(){var t=this.context.hotKeyMap||{},o=this.props.keyMap||{};return _extends({},t,e,o)},getMap:function(){return this.__hotKeyMap__}}}export{HotKeys,withHotKeys,FocusTrap,HotKeyMapMixin};\n","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","const MODULE_TYPE = {\r\n    form: 'form',\r\n    cardTable: 'cardTable',\r\n    editTable: 'editTable',\r\n};\r\n\r\nexport {\r\n    MODULE_TYPE,\r\n};","import { config as CONFIG } from '@platform/api'\r\n\r\n/**\r\n * @desc 获得单元格的唯一Id\r\n * @param td {dom}\r\n */\r\n\r\nexport default function getCellIdentity(td) {\r\n\tlet div = td.querySelector('div');\r\n\tif (div && div.attributes) {\r\n\t\tlet attributesArray = Object.values(div.attributes);\r\n\r\n\t\tlet cellIdentity = attributesArray.find(item => {\r\n\t\t\tif (item && item.value.startsWith(CONFIG.hotKeyModuleIdPrefix)) {\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn cellIdentity && cellIdentity.value;\r\n\t}\r\n}\r\n","import getCellIdentity from './getCellIdentity';\r\nimport { findNextFocusItemInForm } from './findNextFocusItemInForm';\r\nimport { checkboxInTable } from './handleSpecialCase';\r\nimport { keyByModuleId } from '../createKeyMap';\r\nimport { MODULE_TYPE } from '../config/moduleType';\r\nimport { config as CONFIG } from '@platform/api'\r\n\r\n/**\r\n * @desc 查找下一个可聚焦元素\r\n * @param target {dom} 事件源\r\n * @param ViewModel {object} 全局变量\r\n * @param moduleId {string} 当前区域Id\r\n * @param orderOfHotKey {array} 区域显示顺序配置\r\n */\r\nfunction findNextFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey }) {\r\n    var parentTd = eventTarget.tagName === 'TD' ? eventTarget : findParentTd(eventTarget);\r\n    if (!parentTd) {\r\n        // 这里报错的原因是因为某些事件（下拉的keydown）执行了两次\r\n        console.warn('not find parentTd, next hotkey invalid');\r\n        return;\r\n    }\r\n    var nextTd = parentTd.nextElementSibling;\r\n    var currentTr = parentTd.parentElement;\r\n    var lastTd = findLastTdInRow(currentTr);\r\n    var div = nextTd && nextTd.querySelector('[tabindex=\"0\"]');\r\n\r\n    //如果是最后一个元素就需要判断跳到下一行还是跳到下一个区域\r\n    if (lastTd === parentTd) {\r\n        var lastTr = currentTr.parentElement.lastElementChild;\r\n\r\n        currentTr === lastTr\r\n            ? perceptionHotKeyConfig({ currentModuleId: moduleId, ViewModel, orderOfHotKey })\r\n            : findNextRowTd({ tr: currentTr, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    // 如果下一个元素没有找到就继续查找\r\n    if (div === null || checkboxInTable(div)) {\r\n        findNextSiblings({ td: nextTd, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n    // 解决table 设值后重新渲染导致焦点缺失的问题,在这里保留一下id\r\n    let cellIdentity = getCellIdentity(nextTd);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n    executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\nfunction findParentTd(el) {\r\n    while (el.parentElement) {\r\n        el = el.parentElement;\r\n        if (el.tagName === 'TD') {\r\n            return el;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * @desc 查找当前行里的最后一个td，需要排除操作列\r\n * @param tr {dom}\r\n * @return td {dom}\r\n */\r\nfunction findLastTdInRow(tr) {\r\n    let td = tr.lastElementChild.className.includes('fixed')\r\n        ? tr.lastElementChild.previousElementSibling\r\n        : tr.lastElementChild;\r\n\r\n    return td;\r\n}\r\n\r\n/**\r\n * @desc 递归查找下一个可聚焦元素\r\n * @param td {dom} 上一个td\r\n * @param ViewModel {object} 全局变量\r\n * @param moduleId {string} 当前区域的Id\r\n * @param orderOfHotKey\r\n */\r\nfunction findNextSiblings({ td, ViewModel, moduleId, orderOfHotKey }) {\r\n    var nextTd = td.nextElementSibling;\r\n    var currentTr = nextTd && nextTd.parentElement;\r\n    var lastTd = currentTr && findLastTdInRow(currentTr);\r\n    var currentDiv = td.querySelector('[tabindex=\"0\"]');\r\n    var div = nextTd && nextTd.querySelector('[tabindex=\"0\"]');\r\n\r\n    //如果下个需要聚焦的单元格与最后一个单元相同并且没有可聚焦元素就在下一行查找\r\n    if ((lastTd === nextTd && div === null) || (lastTd === td && currentDiv === null)) {\r\n        findNextRowTd({ tr: currentTr, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    if (div === null || checkboxInTable(div)) {\r\n        findNextSiblings({ td: nextTd, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    let cellIdentity = getCellIdentity(nextTd);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n    executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\n//查找下一行可聚焦元素\r\nfunction findNextRowTd({ tr, ViewModel, moduleId, orderOfHotKey }) {\r\n    var nextTr = tr && tr.nextElementSibling;\r\n\r\n    //如果是最后一行就查找下个区域的第一个可聚焦元素\r\n    if (nextTr === null) {\r\n        orderOfHotKey &&\r\n            jumpToNextModuleFocusItem({ currentModuleId: moduleId, ViewModel, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    if (nextTr.getAttribute('tabindex') === '-1') {\r\n        findNextRowTd({ tr: nextTr, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    var div = nextTr.querySelector('td [tabindex=\"0\"]');\r\n    var td = findParentTd(div);\r\n\r\n    let cellIdentity = getCellIdentity(td);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n    executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\n/**\r\n * @desc 判断业务组是否配置快捷键，如果没有就在本区域内循环 反之根据orderOfHotKey跳转下个区域\r\n * @param currentModuleId {string} 当前的区域ID\r\n * @param ViewModel 全局变量\r\n * @param orderOfHotKey {array} 区域展示顺序\r\n */\r\n\r\nfunction perceptionHotKeyConfig({ currentModuleId, ViewModel, orderOfHotKey }) {\r\n    if (orderOfHotKey && orderOfHotKey.length === 0) {\r\n        findFirstFocusItemInCurrentModule({ currentModuleId, ViewModel });\r\n    } else {\r\n        orderOfHotKey &&\r\n            jumpToNextModuleFocusItem({ currentModuleId, ViewModel, orderOfHotKey });\r\n    }\r\n}\r\n\r\nfunction findFirstFocusItemInCurrentModule({ currentModuleId, ViewModel }) {\r\n    let id = `${CONFIG.hotKeyModuleIdPrefix}-${currentModuleId}`;\r\n    let tableTr = document.querySelector(`#${id} table tbody tr`);\r\n    let tds = tableTr.querySelectorAll('td');\r\n\r\n    let firstFocusItem = Array.prototype.find.call(tds, function (td) {\r\n        return td.querySelector('[tabindex=\"0\"]') !== null;\r\n    });\r\n\r\n    let cellIdentity = getCellIdentity(firstFocusItem);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n\r\n    var div = firstFocusItem.querySelector('[tabindex=\"0\"]');\r\n    div && executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\nfunction jumpToNextModuleFocusItem({ currentModuleId, ViewModel, orderOfHotKey }) {\r\n    let nextModuleId = calculateNextModuleId(currentModuleId, orderOfHotKey);\r\n\r\n    let nextModuleKeyMap = keyByModuleId[nextModuleId];\r\n\r\n    if (nextModuleKeyMap === undefined) return;\r\n\r\n    let type = nextModuleKeyMap.type;\r\n    if (type === MODULE_TYPE.cardTable || type === MODULE_TYPE.editTable) {\r\n        //如果是table类型就获取当前table显示的页签\r\n        let activeTableKeyMap = keyByModuleId[nextModuleKeyMap.activeTable];\r\n        let firstItemDom = document.querySelector(`div[${activeTableKeyMap.firstItem}]`);\r\n        let div = firstItemDom.querySelector('[tabindex=\"0\"]');\r\n\r\n        if (div === null) {\r\n            let td = firstItemDom.parentElement;\r\n            findNextSiblings({ td, ViewModel, moduleId: activeTableKeyMap.moduleId, orderOfHotKey });\r\n        } else {\r\n            let td = findParentTd(div);\r\n\r\n            /**\r\n       * @desc 表格编辑后会导致页面重新渲染导致聚焦状态丢失，因此enter键跳转的需要在全局记录一下，为操作的连续性渲染完成后重新聚焦做标识\r\n       * @type {string}\r\n       */\r\n            let cellIdentity = getCellIdentity(td);\r\n            cellIdentity\r\n                ? ViewModel.enterTriggerCellId = cellIdentity\r\n                : '';\r\n            executeAutoFocus({ div, ViewModel });\r\n        }\r\n\r\n    } else {\r\n        findNextFocusItemInForm(nextModuleKeyMap, nextModuleId);\r\n    }\r\n}\r\n\r\nfunction calculateNextModuleId(currentModuleId, orderOfHotKey) {\r\n    let orderOfHotKeyLen = orderOfHotKey.length;\r\n\r\n    let nextModuleIndex = orderOfHotKey.indexOf(currentModuleId) + 1 === orderOfHotKeyLen\r\n        ? 0\r\n        : orderOfHotKey.indexOf(currentModuleId) + 1;\r\n    return orderOfHotKey[nextModuleIndex];\r\n}\r\n\r\nfunction executeAutoFocus({ div, ViewModel }) {\r\n    if (div !== null) {\r\n        ViewModel.shouldAutoFocus = true;\r\n        div.ncExecuteFocus = true;\r\n        div.focus();\r\n        delete div.ncExecuteFocus;\r\n    }\r\n}\r\n\r\nexport {\r\n    findNextFocusItemInTable,\r\n    executeAutoFocus,\r\n};\r\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-09-05 14:33:22\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-02-21 14:57:42\r\n */\r\n//import EditTableStore from \"../../../EditTableStore\";\r\n\r\nimport { EditTableStore } from '@platform/table-core';\r\nimport { isArray } from '../../../../tableLibs/utils';\r\nimport { hookFactory } from '@platform/template';\r\n\r\nexport class TabsStore extends EditTableStore {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // 合并一下属性  不然会导致  get 方法取不到值 by bbqin\r\n        this.store = {\r\n            ...this.store,\r\n            //最大化\r\n            tableSwitch: { maxVisible: false },\r\n            activeCell: null,\r\n            //控制页签显隐性 \r\n            hideTabsCode: {},\r\n        };\r\n    }\r\n\r\n    /*** 最大化控制 */\r\n    openMaxView(isShow) {\r\n        this.setStore(['tableSwitch', 'maxVisible'], isShow)\r\n    }\r\n\r\n    isMaxView() {\r\n        return this.getStore(['tableSwitch', 'maxVisible']);\r\n    }\r\n\r\n    /** 隐藏表格 */\r\n    toggleTableShow = flag => {\r\n        this.setStore(['tableSwitch', 'tableVisible'], flag);\r\n    }\r\n    // liuming\r\n    getActiveCell() {\r\n        return this.getStore(['activeCell']);\r\n    }\r\n    // liuming\r\n    setActiveCell(param, shouldForceUpdate = false) {\r\n        this.setStore(['activeCell'], param, shouldForceUpdate);\r\n\r\n    }\r\n\r\n    // 清理validated\r\n    clearValidated(shouldForceUpdate = true) {\r\n        let validateFailed = this.getCache(['validateFailed']);\r\n        if (validateFailed) {\r\n            for (let tableId in validateFailed) {\r\n                if (validateFailed[tableId]) {\r\n                    for (let tabId in validateFailed[tableId]) {\r\n                        if (validateFailed[tableId][tabId]) {\r\n                            for (let rowKeyValue in validateFailed[tableId][tabId]) {\r\n                                if (validateFailed[tableId][tabId][rowKeyValue]) {\r\n                                    // 先判断一下行\r\n                                    let data = this.getStore('data');\r\n                                    let row = data && data.query(rowKeyValue);\r\n                                    if (!row) {\r\n                                        delete validateFailed[tableId][tabId][rowKeyValue];\r\n                                    } else {\r\n                                        for (let attrcode in validateFailed[tableId][tabId][rowKeyValue]) {\r\n                                            if (attrcode) {\r\n                                                let cellProps = this.getCellProps({ rowKeyValue, attrcode });\r\n                                                cellProps.validated !== false && (delete validateFailed[tableId][tabId][rowKeyValue][attrcode])\r\n                                            }\r\n                                        }\r\n                                        if (Object.keys(validateFailed[tableId][tabId][rowKeyValue]).length === 0) {\r\n                                            delete validateFailed[tableId][tabId][rowKeyValue];\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        shouldForceUpdate && this.refresh();\r\n    }\r\n\r\n    getHooks() {\r\n        return {\r\n            ...this.getTableHooks(),\r\n            openMaxView: this.openMaxView.bind(this),\r\n            isMaxView: this.isMaxView.bind(this),\r\n            toggleTableShow: this.toggleTableShow.bind(this),\r\n            getActiveCell: this.getActiveCell.bind(this),\r\n            setActiveCell: this.setActiveCell.bind(this),\r\n            clearValidated: this.clearValidated.bind(this),\r\n        };\r\n    };\r\n}\r\n\r\nexport default hookFactory(TabsStore)\r\n","/*\r\n * @Descripttion: CardTable表格的store\r\n * @version: \r\n * @Author: renyjk\r\n * @Date: 2020-06-29 13:41:41\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-01-15 14:11:38\r\n */\r\n\r\nimport { TabsStore } from '../TabsTable/store';\r\nimport { hookFactory } from '@platform/template';\r\nimport { CONFIG, utils } from '@platform/table-core';\r\nconst { isArray, isWrongFalse, isObject } = utils;\r\nconst { ROW_STATUS } = CONFIG;\r\n\r\n//-----------行操作API-----------//\r\n//---- cardTable 所有修改数据的 API, 在修改数据前，都要对store进行缓存，因为单据都有取消按钮\r\n/******\r\n设置缓存数据的时机: \r\n    setSaveData 没有判断  直接缓存\r\n    updateTableData： 没有判断 直接缓存\r\n    //设置完所有数据后，就对数据进行了缓存\r\n    //更新数据时，领域判断是否同步缓存\r\n    setTableData： 根据条件判断\r\n    updateDataByRowId  根据条件判断\r\n    updateDataByIndexs  根据条件判断\r\n    updateDiffDataByRowId 根据条件判断\r\n\r\n重置缓存数据时，将数据还原   \r\n    //取消时，领域调用api重置数据\r\n    resetTableData\r\n*****/\r\n\r\nexport class MetaStore extends TabsStore {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // 合并一下属性  不然会导致  get 方法取不到值 by bbqin\r\n        this.store = {\r\n            ...this.store,\r\n            tableSwitch: {\r\n                ...this.store.tableSwitch,\r\n                ListViewVisible: false, //行展开\r\n\r\n            },\r\n\r\n            //记录当前激活状态表格的区域编码\r\n            activeTableCode: '',\r\n\r\n            //行展开\r\n            expandedRowKeys: [],\r\n            //侧拉\r\n            tableSideBox: {\r\n                sideBoxVisible: false,\r\n                status: 'edit',\r\n                index: -1,\r\n                record: null,\r\n            },\r\n            //全部展开收起\r\n\r\n            //孙表数据\r\n            // eslint-disable-next-line object-curly-newline\r\n            grandTable: {\r\n                // rowid1: {\r\n                //     code1:{ rows:[] },\r\n                //     code2:{ rows:[] },\r\n                //     code3:{ rows:[] }\r\n                // },\r\n                // rowid2:{\r\n                //     code1:{ rows:[] },\r\n                //     code2:{ rows:[] },\r\n                // }\r\n            },\r\n\r\n            //存孙表store引用\r\n            grandTableStore: {},\r\n            grandTableIds: [],\r\n\r\n        }\r\n        // console.log(this.store, this.tableSwitch);\r\n    }\r\n\r\n    /**\r\n     * 行展开视图控制\r\n     * @param {*} record  行数据\r\n     */\r\n    toggleRowView = record => {\r\n        //let cardTableStore = this.TableStore[tableId];\r\n        let expandedRowKeys = this.getStore('expandedRowKeys');\r\n\r\n        //console.log(\"expandedRowKeys:---\", expandedRowKeys)\r\n\r\n        let indexNum = expandedRowKeys.indexOf(String(record.rowid));\r\n        if (indexNum != -1) {\r\n            expandedRowKeys.splice(indexNum, 1);\r\n            record.expandRowStatus = false;\r\n        } else {\r\n            expandedRowKeys.push(String(record.rowid));\r\n            record.expandRowStatus = true;\r\n        }\r\n        if (expandedRowKeys.length > 0) {\r\n            //this.myTable[tableId].state.table.showXScroll = false;\r\n        } else {\r\n            //this.myTable[tableId].state.table.showXScroll = true;\r\n        }\r\n\r\n        //console.log('expandedRowKeys', expandedRowKeys)\r\n        this.setStore('expandedRowKeys', expandedRowKeys, true);\r\n    }\r\n\r\n    /**\r\n     * 显示侧拉窗\r\n     * @param {*string}  type      type为add和edit\r\n     * @param {*object} record    行数据\r\n     * @param {*number} index     行index\r\n     * @param {*function} callback 展开回调\r\n     * @param {*function} flag //???  TODO \r\n     */\r\n    showSideBox = (status, record, index) => {\r\n        //console.log(\"tableSideBox---执行---\")\r\n        if (status === 'add') {\r\n            record = this.addTableRow(index);\r\n            //存旧值逻辑应该放 addTableRow 方法内部\r\n            //this.saveRowsOldValue([record]);\r\n            index = this.getVisibleRows().length - 1;\r\n        }\r\n        status = status === 'browse' ? 'browse' : 'edit';\r\n        this.setStore('tableSideBox', {\r\n            ...this.tableSideBox,\r\n            status,\r\n            record,\r\n            index,\r\n            sideBoxVisible: true,\r\n        });\r\n    }\r\n\r\n    closeSideBox = () => {\r\n        this.setStore('tableSideBox', {\r\n            ...this.tableSideBox,\r\n            sideBoxVisible: false,\r\n        });\r\n    }\r\n\r\n    /*** 全部展开控制 */\r\n    openListView = isShow => {\r\n        this.setStore(['tableSwitch', 'ListViewVisible'], isShow)\r\n    }\r\n\r\n    /**\r\n     * 设置孙表数据\r\n     */\r\n    setGrandTableData = ({ rowid, tableId, data, shouldForceUpdate = true, isCache = true, isDiffUpdate = false }) => {\r\n        let tableSideBoxRecord = this.getStore(['tableSideBox', 'record']);\r\n        let grandTableStore = this.getStore('grandTableStore');\r\n\r\n        let grandTable = this.get('grandTable');\r\n        if (!grandTable[rowid]) grandTable[rowid] = {};\r\n        if (!grandTable[rowid][tableId]) grandTable[rowid][tableId] = {};\r\n\r\n        //全量更新时，补全rowid\r\n        if (data && isArray(data.rows) && !isDiffUpdate) {\r\n            data.rows = data.rows.map(item => {\r\n                item.rowid = item.rowid || this.generateRowKey();\r\n                return item;\r\n            })\r\n        }\r\n        // 如果业务侧传了data  但是没传rows 会导致切换数据不正确\r\n        if (data && !data.rows) {\r\n            console.warn('not get data.rows, maybe grandTableData error');\r\n            data.rows = [];\r\n        }\r\n        //若为差异更新，则\r\n        if (isDiffUpdate) {\r\n            //根据rowid 对比更新孙表数据\r\n            let oldData = grandTable[rowid][tableId].rows || [];\r\n            data.rows = data.rows.map(newRow => {\r\n                // 若该行数据，旧值中已存在，则合并新行和旧行\r\n                if (newRow.rowid) {\r\n                    let index = oldData.findIndex(e => e.rowid === newRow.rowid);\r\n                    if (index !== -1) {\r\n                        newRow.values = {\r\n                            ...oldData[index].values,\r\n                            ...newRow.values,\r\n                        }\r\n                    }\r\n                    //否则为新增行，生成rowid\r\n                } else {\r\n                    newRow.rowid = this.generateRowKey();\r\n                }\r\n                return newRow;\r\n            })\r\n            grandTable[rowid][tableId].rows = data.rows;\r\n        } else {\r\n            //全量更新数据\r\n            grandTable[rowid][tableId] = data;\r\n        }\r\n\r\n        //同步侧拉数据\r\n        if (tableSideBoxRecord && tableSideBoxRecord.rowid === rowid && grandTableStore[tableId]) {\r\n            grandTableStore[tableId].setData({ data: grandTable[rowid][tableId].rows, shouldForceUpdate: false })\r\n        }\r\n        this.setStore('grandTable', grandTable, shouldForceUpdate);\r\n\r\n        if (isCache) {\r\n            let grandTableData = this.getCache([\"grandTableData\"]);\r\n            if (!grandTableData) grandTableData = {};\r\n            if (!grandTableData[rowid]) grandTableData[rowid] = {};\r\n            grandTableData[rowid][tableId] = JSON.parse(JSON.stringify(data));\r\n            this.setCache([\"grandTableData\"], grandTableData);\r\n\r\n            //_saveAllData(tableId, null); // TODO 缓存表格初始全数据 zh\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取所有孙表数据\r\n     */\r\n    getAllGrandData = isDeepCopy => {\r\n        let grandTableIds = this.get('grandTableIds');\r\n        let grandTableStore = this.get('grandTableStore');\r\n        let cacheGrandTable = this.get('grandTable');\r\n        let editRecord = this.get('tableSideBox').record;\r\n        let editRowid = editRecord && editRecord.rowid;\r\n        if (editRowid) {\r\n            let currentGrandTable = {};\r\n            for (let rowid in cacheGrandTable) {\r\n                if (rowid === editRowid) {\r\n                    currentGrandTable[rowid] = {};\r\n                    grandTableIds.forEach(grandCode => {\r\n                        currentGrandTable[rowid][grandCode] = { rows: grandTableStore[grandCode].getAllRows(isDeepCopy) }\r\n                    })\r\n                } else {\r\n                    currentGrandTable[rowid] = cacheGrandTable[rowid];\r\n                }\r\n            }\r\n            return currentGrandTable;\r\n        } else {\r\n            return cacheGrandTable;\r\n        }\r\n    }\r\n\r\n    getViewGrandData = view => {\r\n        let grandTableIds = this.get('grandTableIds');\r\n        let grandTableStore = this.get('grandTableStore');\r\n        let cacheGrandTable = this.get('grandTable');\r\n        let editRecord = this.get('tableSideBox').record;\r\n        let editRowid = editRecord && editRecord.rowid;\r\n        if (editRowid) {\r\n            let currentGrandTable = {};\r\n            for (let rowid in cacheGrandTable) {\r\n                if (rowid === editRowid) {\r\n                    currentGrandTable[rowid] = {};\r\n                    grandTableIds.forEach(grandCode => {\r\n                        currentGrandTable[rowid][grandCode] = { rows: grandTableStore[grandCode].getViewData(view) }\r\n                    })\r\n                } else {\r\n                    currentGrandTable[rowid] = cacheGrandTable[rowid];\r\n                }\r\n            }\r\n            return currentGrandTable;\r\n        } else {\r\n            return cacheGrandTable;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 过滤当前子表所有孙表的空行\r\n     *  { \r\n     *      grandTableCode1: { keys:[], rule='except' },\r\n     *      grandTableCode2: { keys:[], rule='except' },\r\n     *  }\r\n     */\r\n    filterEmptyGrandRows = (granTableConfig = {}, shouldForceUpdate = true) => {\r\n        //孙表所有数据\r\n        let cacheGrandTable = this.get('grandTable');\r\n        let newGrandData = {};\r\n\r\n        for (let rowid in cacheGrandTable) {\r\n            let currentRowGrandData = cacheGrandTable[rowid];\r\n            newGrandData[rowid] = {};\r\n            for (let tableCode in currentRowGrandData) {\r\n                let keys = null;\r\n                let rule = 'except';\r\n                if (granTableConfig[tableCode]) {\r\n                    if (isArray(granTableConfig[tableCode].keys)) {\r\n                        keys = granTableConfig[tableCode].keys;\r\n                    }\r\n                    if (isArray(granTableConfig[tableCode].rule)) {\r\n                        rule = granTableConfig[tableCode].rule;\r\n                    }\r\n                }\r\n\r\n                let grandTableRows = currentRowGrandData[tableCode].rows;\r\n                newGrandData[rowid][tableCode] = { rows: [] };\r\n\r\n                if (isArray(grandTableRows)) {\r\n                    let newRows = [];\r\n                    grandTableRows.forEach((item, index) => {\r\n                        let values = item.values;\r\n                        let valueKeys = Object.keys(values).filter(\r\n                            item => item != \"numberindex\",\r\n                        );\r\n                        if (isArray(keys) && (rule == \"except\" || rule == \"include\")) {\r\n                            valueKeys = valueKeys.filter(val => {\r\n                                return rule == \"except\"\r\n                                    ? keys.every(key => {\r\n                                        return val !== key;\r\n                                    })\r\n                                    : keys.includes(val);\r\n                            });\r\n                        } else {\r\n                            console.warn(\"Invalid params \", rule, keys);\r\n                        }\r\n\r\n                        let flag = valueKeys.every(one => isWrongFalse(values[one].value));\r\n\r\n                        if (!flag) {\r\n                            newRows.push(item);\r\n                        }\r\n                    });\r\n\r\n                    newGrandData[rowid][tableCode].rows = newRows;\r\n                }\r\n            }\r\n        }\r\n        this.setStore('grandTable', newGrandData, shouldForceUpdate);\r\n    }\r\n\r\n    /**\r\n     * 删除完整的孙表数据中的数据\r\n     */\r\n    deleteGrandData = ({ rowidList, delAll }) => {\r\n        if (delAll) {\r\n            //全部删除\r\n            this.setStore('grandTable', {});\r\n            return;\r\n        }\r\n        //根据rowidList删除数据\r\n        if (isArray(rowidList)) {\r\n            let grandTable = this.get('grandTable');\r\n            rowidList.forEach(rowid => {\r\n                delete grandTable[rowid];\r\n            });\r\n            this.setStore('grandTable', grandTable);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: 复写设置表格数据\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    setTableData(data = {}, { isCache = true, isTop = false, shouldForceUpdate = true } = {}) {\r\n        // 将表格全展开重置成false\r\n        // tempData.showListView = false; // TODO\r\n        super.setTableData(data, { isCache, isTop, shouldForceUpdate });\r\n        // TODO 单元格聚焦问题\r\n        // let cell = autoFocus && getCellDom(tableId);\r\n        //     let cellIdentity = cell && getCellIdentity(cell);\r\n        // lastCellItemFocus(cellIdentity);\r\n    }\r\n\r\n    /**\r\n     * @description: 设置表格状态\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    setTableStatus(status, { shouldForceUpdate = true } = {}) {\r\n        if (status === 'edit') {\r\n            //编辑态时，收回所有展开行  // TODO\r\n            // closeExpandedRow.call(this, tableId);\r\n        }\r\n        super.setTableStatus(status, { shouldForceUpdate });\r\n    }\r\n\r\n    /**\r\n     * @description: 卡片表格的和普通编辑表的 有细微区别\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    addTableRow(index, defaultValue = {}, shouldForceUpdate = true, { autoFocus = false, isAutoAddRow, callback } = {}) {\r\n        this.setStore(['tableSwitch', 'ListViewVisible'], false, false);\r\n        return super.addTableRow(index, defaultValue, shouldForceUpdate, { autoFocus, isAutoAddRow, callback });\r\n        // TODO  自动聚焦部分  也可在更底层做\r\n    }\r\n\r\n    /**\r\n     * @description: 取消编辑  回到上次状态\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    resetTableData() {\r\n        let data = this.getCache(['afterDel']) || this.getCache(['base']) || { rows: [] };\r\n\r\n        // TODO  清理一些全局提示\r\n        // clearOneTypeToast('danger');\r\n        this.setTableStatus('browse', { shouldForceUpdate: false });\r\n        this.setTableData(data, { isCache: true, isTop: true, shouldForceUpdate: !this.isUpdatePage });\r\n        // TODO  更新孙表\r\n        // 有孙表的情况\r\n        let grandTableIds = this.get('grandTableIds');\r\n        if (isArray(grandTableIds) && grandTableIds.length > 0) {\r\n            let grandTableCacheData = this.getCache([\"grandTableData\"]);\r\n            if (isObject(grandTableCacheData)) {\r\n                Object.keys(grandTableCacheData).forEach(rowid => {\r\n                    Object.keys(grandTableCacheData[rowid]).forEach(grandId => {\r\n                        this.setGrandTableData({\r\n                            rowid,\r\n                            tableId: grandId,\r\n                            data: grandTableCacheData[rowid][grandId],\r\n                            shouldForceUpdate: false,\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: 钩子\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    getHooks() {\r\n        return {\r\n            //模板\r\n            ...super.getHooks(),\r\n            toggleRowView: this.toggleRowView.bind(this),\r\n            showSideBox: this.showSideBox.bind(this),\r\n            closeSideBox: this.closeSideBox.bind(this),\r\n            setGrandTableData: this.setGrandTableData.bind(this),\r\n            getAllGrandData: this.getAllGrandData.bind(this),\r\n            getViewGrandData: this.getViewGrandData.bind(this),\r\n            //getRowIdFromPkcode: this.getRowIdFromPkcode,\r\n            deleteGrandData: this.deleteGrandData.bind(this),\r\n            openListView: this.openListView.bind(this),\r\n            openMaxView: this.openMaxView.bind(this),\r\n            setTableData: this.setTableData.bind(this),\r\n            setTableStatus: this.setTableStatus.bind(this),\r\n            addTableRow: this.addTableRow.bind(this),\r\n            resetTableData: this.resetTableData.bind(this),\r\n            filterEmptyGrandRows: this.filterEmptyGrandRows.bind(this),\r\n        };\r\n    }\r\n}\r\n\r\nconst MetaCardTableStore = hookFactory(MetaStore);\r\n\r\nexport default MetaCardTableStore;","/*\r\n * @Descripttion: CardTable的 Store\r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-06-28 13:37:53\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-02-21 14:37:50\r\n */\r\n\r\nimport { hookFactory } from '@platform/template';\r\nimport { MetaStore } from './components/SingleCardTable/store';\r\nimport { utils } from '@platform/table-core';\r\nconst { isArray } = utils;\r\n\r\nclass TableStore extends MetaStore {\r\n\r\n    constructor(props = {}) {\r\n        super(props);\r\n\r\n        // 合并一下属性  不然会导致  get 方法取不到值 by bbqin\r\n        this.store = {\r\n            ...this.store,\r\n            // moduleId\r\n            name: props.name || '',\r\n            // 所有CardTable的store  （目前是指cardTable的store）\r\n            tableStores: {},\r\n            // 所有CardTable的数据 \r\n            // tableDatas: {}, // 不备份了\r\n            // 初始模板\r\n            meta: {},\r\n            // 所有页签的数据 按照页签id区分\r\n            // allTabsData: {}, // 不备份了\r\n            // 所有表格的状态数据\r\n            // allTabsStatus: {},  // 不备份了\r\n            // 多语\r\n            json: {},\r\n            // 当前缺少项的页签集合\r\n            errorTabIds: [],\r\n\r\n            // 布局\r\n            layout: 'horizontal',\r\n\r\n            currentTab: {\r\n                // 当前状态\r\n                status: 'browse',\r\n                // 当前操作页签\r\n                tabId: '',\r\n                tableId: '',\r\n                // ...\r\n            },\r\n        }\r\n\r\n        //console.log('12131', this.getHooks());\r\n    }\r\n\r\n    /**\r\n     * @description: 复写\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    getStore(paths) {\r\n        return super.get(paths);\r\n    }\r\n\r\n    /**\r\n     * @description: 复写\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    setStore(paths, value, shouldForceUpdate = true, callback) {\r\n        let res = super.set(paths, value);\r\n        shouldForceUpdate && this.forceUpdate(callback);\r\n        return res;\r\n    }\r\n\r\n    // 多来源页签的布局\r\n    setLayout(layout, shouldForceUpdate = true) {\r\n        layout = layout || this.getStore(['currentTab', 'layout']);\r\n        this.setStore(['currentTab', 'layout'], layout === 'vertical' ? 'vertical' : 'horizontal', shouldForceUpdate);\r\n    }\r\n\r\n\r\n    /**\r\n     * @description: 获取模板的属性\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    _getMetaRelation() {\r\n        let { gridrelation = {}, containerrelation = {} } = this.getMeta();\r\n        return { gridrelation, containerrelation };\r\n    }\r\n\r\n    /**\r\n     * @description: 获取所有的tabs\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    _getTabs(name) {\r\n        name = name || this.getStore('name');\r\n        let { containerrelation } = this._getMetaRelation();\r\n        return containerrelation[name] || [];\r\n    }\r\n\r\n    /**\r\n     * @description: 批量操作子表\r\n     * @param {type} \r\n     * @return: \r\n     */\r\n    _batchTabsTable(func, name) {\r\n        name = name || this.getStore('name');\r\n        if (!name) { console.warn('not find name[%s] tableStore ') }\r\n\r\n        let { gridrelation, containerrelation } = this._getMetaRelation();\r\n\r\n        let tabs = this._getTabs(name);\r\n\r\n        //let layout = this.getLayout(name);\r\n\r\n        let stores = this.getStore('tableStores');\r\n\r\n        console.log(name, tabs, gridrelation, containerrelation, stores);\r\n\r\n        // 先简单处理下\r\n        // if (layout === 'horizontal' && isArray(tabs[0])) {\r\n        //     tabs = [tabs[0]]; // 设置全部也不是不行 并不行  data 还没有初始化  如果初始化了 应该可以\r\n        // }\r\n\r\n        let res = tabs.map(ids => {\r\n            ids.map(id => {\r\n                if (!id) {\r\n                    return console.warn('invalid id');\r\n                }\r\n\r\n                let currentStore = stores[id];\r\n\r\n                if (name && id === name) {\r\n                    currentStore = this;\r\n                }\r\n\r\n                if (!currentStore) {\r\n                    console.warn(`tableId 为${id} 表格，没有初始化对应的Store，请不要进行批操作。`);\r\n                }\r\n\r\n                return currentStore && func(currentStore, id, name, tabs);\r\n            });\r\n        });\r\n\r\n        return res;\r\n    }\r\n\r\n    // 设置多来源的所有数据\r\n    setTabsTableData(data, shouldForceUpdate = true, name) {\r\n\r\n        if (!data) {\r\n            data = {};\r\n        }\r\n\r\n        this._batchTabsTable((store, id) => {\r\n            if (!data[id]) {\r\n                console.warn(\"not find id[%s] data\", id);\r\n            }\r\n            if (data[id]) {\r\n                //let activeTableCode = store.getStore('activeTableCode');\r\n                store.setTableData(data[id], {\r\n                    //shouldForceUpdate: shouldForceUpdate //&& id === activeTableCode && //初始化更新时，业务数字无法更新\r\n                    shouldForceUpdate: false\r\n                });\r\n            }\r\n\r\n        }, name)\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    // 重置所有页签的数据\r\n    resetTabsTableData(shouldForceUpdate = false, name) {\r\n        this._batchTabsTable((store, id) => {\r\n            if (store) {\r\n                store.resetTableData();\r\n            }\r\n        }, name);\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    // 获取所有行的数据\r\n    getTabsTableData(name) {\r\n        let res = {};\r\n        this._batchTabsTable((store, id) => {\r\n            if (store) {\r\n                let data = store.getData();\r\n                res[id] = { rows: data };\r\n            }\r\n        }, name);\r\n        console.log(res);\r\n        return res;\r\n    }\r\n\r\n    // 设置所有页签（cardTable）的状态\r\n    setTabsTableStatus(status = {}, shouldForceUpdate = true, name, callback) {\r\n        this._batchTabsTable((store, id) => {\r\n            if (status[id]) {\r\n                let activeTableCode = store.getStore('activeTableCode');\r\n                let oldStatus = store.getTableProps('status') || 'browse';\r\n                store.setTableStatus(status[id], { shouldForceUpdate: activeTableCode === id && shouldForceUpdate });\r\n                callback && callback(id, store, oldStatus);\r\n            }\r\n        }, name);\r\n        // shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    // 获取多页签所有的 stores\r\n    getTabsStores(id, name) {\r\n        name = name || this.getStore('name');\r\n        if (!name) { console.warn('not find name[%s] tableStore ', name) }\r\n        let res = Object.assign({}, { [name]: this }, this.getStore('tableStores'));\r\n        return id ? res[id] : res;\r\n    }\r\n\r\n    // 添加stores 缓存数据中\r\n    addTabStore(id, store, pattern, shouldForceUpdate = false) {\r\n        let tableStores = this.getStore('tableStores');\r\n        tableStores[id] = store;\r\n        this.setStore('tableStores', tableStores, shouldForceUpdate);\r\n    }\r\n\r\n    //设置页签显示隐藏\r\n    setTabsTableShow(mainId, flagObj, shouldForceUpdate = true) {\r\n        let tabs = this._getTabs(mainId);\r\n        let stores = this.getStore('tableStores');\r\n        if (isArray(tabs)) {\r\n            tabs.forEach((item) => {\r\n                //tabs每一项是一个垂直排列的表格\r\n                let mainCode = item[0];\r\n                if (stores[mainCode]) {\r\n                    let hideTabsCode = stores[mainCode].getStore('hideTabsCode');\r\n                    for (let code in flagObj) {\r\n                        if (item.includes(code)) {\r\n                            hideTabsCode[code] = !flagObj[code];\r\n                        }\r\n                    }\r\n                    stores[mainCode].setStore('hideTabsCode', hideTabsCode, shouldForceUpdate);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    //设置当前激活页签\r\n    setTabsTableActive(mainId, activeCode, shouldForceUpdate = true) {\r\n        let tabs = this._getTabs(mainId);\r\n        let stores = this.getStore('tableStores');\r\n        if (isArray(tabs)) {\r\n            tabs.forEach((item) => {\r\n                if (item.includes(activeCode)) {\r\n                    let mainCode = item[0];\r\n                    let tableSwitch = stores[mainCode].getStore('tableSwitch');\r\n                    tableSwitch.activeCode = activeCode;\r\n                    stores[mainCode] && stores[mainCode].setStore('tableSwitch', tableSwitch, shouldForceUpdate);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    //获取当前激活页签\r\n    getTabsTableActive(mainId) {\r\n        let tabs = this._getTabs(mainId);\r\n        let stores = this.getStore('tableStores');\r\n        if (isArray(tabs)) {\r\n            return tabs.map((item) => {\r\n                let mainCode = item[0];\r\n                if (stores[mainCode]) {\r\n                    return stores[mainCode].getStore('tableSwitch').activeCode;\r\n                }\r\n            })\r\n        }\r\n        return [];\r\n    }\r\n\r\n    getHooks() {\r\n        return {\r\n            ...super.getHooks(),\r\n            //模板\r\n            // // all\r\n            getStore: this.getStore.bind(this),\r\n            setStore: this.setStore.bind(this),\r\n\r\n            setLayout: this.setLayout.bind(this),\r\n            // getLayout: this.getLayout.bind(this),\r\n            setTabsTableData: this.setTabsTableData.bind(this),\r\n            resetTabsTableData: this.resetTabsTableData.bind(this),\r\n            getTabsTableData: this.getTabsTableData.bind(this),\r\n            setTabsTableStatus: this.setTabsTableStatus.bind(this),\r\n            getTabsStores: this.getTabsStores.bind(this),\r\n            addTabStore: this.addTabStore.bind(this),\r\n            setTabsTableShow: this.setTabsTableShow.bind(this),\r\n            setTabsTableActive: this.setTabsTableActive.bind(this),\r\n            getTabsTableActive: this.getTabsTableActive.bind(this),\r\n        };\r\n    }\r\n}\r\n\r\nexport default hookFactory(TableStore);","import React, { Component } from \"react\";\r\n\r\nimport { CONFIG, utils } from '@platform/table-core';\r\nimport { Item } from \"@platform/template\";\r\nimport { getSysFieldid, getLangCode, getMultiLang, formatNumber, formatDatetime } from \"@platform/api\";\r\nimport \"./index.less\";\r\nconst defaultColor = CONFIG.defaultColor;\r\nconst {\r\n    isWrong,\r\n    isObject,\r\n    isArray,\r\n    isNullOrVoid,\r\n    changeTime,\r\n    getRandomPassword,\r\n    formatAcuracy,\r\n\r\n} = utils;\r\n\r\nexport default class SingleRowExpand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { json: {} };\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        //加载多语\r\n        let callback = json => {\r\n            this.setState({ json });\r\n        };\r\n        getMultiLang({ moduleId: \"table_cardTable\", callback });\r\n    }\r\n\r\n    content = (metaItems, width, record) => {\r\n        //展开区域高度动态计算，解决操作列固定，展开行时出现位置错乱问题\r\n        let expandStyleData = this.expandLayout(width);\r\n        let itemWidth = expandStyleData.expandItemWidth;\r\n        let col = expandStyleData.col;\r\n        let gridNum = 0;\r\n\r\n        return metaItems.map((item, index) => {\r\n            let {\r\n                attrcode: ICode,\r\n                itemtype: IType,\r\n                scale: IScale,\r\n                languageMeta: LanguageMeta,\r\n                color,\r\n            } = item;\r\n            let [values, value, display, scale] = [record.values];\r\n            // 如果有这个键取这个键的value值，否则为null\r\n            value = isObject(values[ICode]) && values[ICode].value;\r\n            display = isObject(values[ICode]) ? values[ICode].display : null;\r\n            scale = isObject(values[ICode])\r\n                ? !isWrong(values[ICode].scale) && values[ICode].scale != \"-1\"\r\n                    ? +values[ICode].scale\r\n                    : +IScale || 0\r\n                : +IScale || 0;\r\n            // 浏览态全展开的label颜色\r\n            color = defaultColor.includes(color) ? \"\" : color;\r\n            let isLast = index + 1 === metaItems.length;\r\n            if (index != 0 && item.isnextrow) {\r\n                let currentrowBlankGrid = col - (gridNum % col);\r\n                gridNum += currentrowBlankGrid;\r\n                return (\r\n                    <div\r\n                        className=\"expanded-row-item\"\r\n                        style={{\r\n                            float: \"left\",\r\n                            width: `${itemWidth * currentrowBlankGrid}%`,\r\n                            height: \"28px\",\r\n                        }}\r\n                    />\r\n                );\r\n            }\r\n            let newWidth = itemWidth;\r\n            if (item.colnum && item.colnum > 1) {\r\n                if (item.colnum >= col) {\r\n                    newWidth *= col;\r\n                    gridNum += col;\r\n                } else {\r\n                    let num = Number(item.colnum);\r\n                    newWidth *= num;\r\n                    gridNum += num;\r\n                }\r\n            } else {\r\n                gridNum++;\r\n            }\r\n            return (\r\n                <div\r\n                    fieldid={getSysFieldid(item.attrcode)}\r\n                    className=\"expanded-row-item\"\r\n                    key={index}\r\n                    style={{\r\n                        float: \"left\",\r\n                        width: `${newWidth}%`,\r\n                        marginBottom: isLast && \"5px\",\r\n                    }}\r\n                >\r\n                    <div style={{ color }} className=\"expanded-row-item-label\">\r\n                        {`${item.label}:`}\r\n                        <span className=\"expanded-row-item-label-colon\" />\r\n                    </div>\r\n                    <div className=\"expanded-row-item-control\">\r\n                        <div className=\"expanded-row-item-control-wrapper\">\r\n                            <span>\r\n                                {this.handleBrowse(\r\n                                    IType,\r\n                                    display,\r\n                                    value,\r\n                                    scale,\r\n                                    ICode,\r\n                                    LanguageMeta,\r\n                                    values,\r\n                                    item && item.datatype,\r\n                                    item && item.options,\r\n                                    item && item.multiple,\r\n                                    record,\r\n                                )}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    handleBrowse = (\r\n        IType,\r\n        display,\r\n        value,\r\n        scale,\r\n        attrcode,\r\n        languageMeta,\r\n        values,\r\n        datatype,\r\n        options,\r\n        multiple,\r\n        record,\r\n    ) => {\r\n        let json = this.state.json;\r\n        let { mainCode, tabsStore, rowIndex } = this.props\r\n        let mainStore = tabsStore[mainCode]\r\n        let initSwitch = mainStore.getStore(\"tableSwitch\");\r\n        let { activeCode } = initSwitch;\r\n        let currentMainCode = activeCode;\r\n        let currentStore = tabsStore[currentMainCode]\r\n        // 特殊处理下逻辑型  枚举类型\r\n        if (\r\n            datatype === \"32\" &&\r\n            [\"select\", \"checkbox\", \"radio\"].includes(IType) &&\r\n            isArray(options) &&\r\n            !display &&\r\n            value !== null &&\r\n            value !== undefined\r\n        ) {\r\n            if (IType === \"checkbox\" || multiple) {\r\n                let dispalyList = options\r\n                    .filter(item => value.includes(item.value))\r\n                    .map(option => {\r\n                        return option.display;\r\n                    });\r\n                return dispalyList.join(\",\");\r\n            } else {\r\n                let { display } =\r\n                    options.filter(item => item.value == value)[0] || {};\r\n                return display;\r\n            }\r\n        }\r\n\r\n        switch (true) {\r\n            case CONFIG.displayTypes.includes(IType):\r\n                return display || value;\r\n            case CONFIG.boolean.includes(IType):\r\n                return value == \"Y\" || value == true\r\n                    ? json[\"cardTable001\"]\r\n                    : json[\"cardTable002\"];\r\n            case CONFIG.timeTypes.includes(IType):\r\n                if (IType === \"datetimepicker\") {\r\n                    return formatDatetime(changeTime(value, \"YYYY-MM-DD HH:mm:ss\"), 'datetime');\r\n                } else if (IType === \"timepicker\") {\r\n                    return formatDatetime(value, 'time');\r\n                } else if (IType === \"datePickerNoTimeZone\") {\r\n                    return formatDatetime(value, 'date');\r\n                }\r\n                return formatDatetime(changeTime(value), 'date');\r\n            case IType === \"label\":\r\n                return isNullOrVoid(display) ? value : display || value;\r\n            case IType === \"number\":\r\n                // 表格浏览态加了四舍五入\r\n                return formatNumber(formatAcuracy(value, scale));\r\n            case IType === \"password\":\r\n                // 密码框浏览态显示***\r\n                return value && getRandomPassword();\r\n            case IType === \"residtxt\": // 对多语的处理\r\n                let LangCode = getLangCode();\r\n                let loginLang = languageMeta.filter(i => i.languageCode == LangCode);\r\n                if (loginLang.length > 0) {\r\n                    loginLang[0].index === \"1\" ? (loginLang[0].index = \"\") : \"\";\r\n                    if (\r\n                        values[attrcode + loginLang[0].index] &&\r\n                        values[attrcode + loginLang[0].index].value\r\n                    ) {\r\n                        value = values[attrcode + loginLang[0].index].value;\r\n                        return value;\r\n                    }\r\n                    return value;\r\n                }\r\n                return value;\r\n            case IType === \"attachment\": // 对多语的处理\r\n                let rowKeyValue = record.rowid\r\n                return <Item\r\n                    browse={false}\r\n                    itemtype={IType}\r\n                    attrcode={attrcode}\r\n                    setFieldValue={({ value: val }) => currentStore.setCellValue({ rowKey: 'rowid', rowKeyValue, rowIndex, attrcode, value: val })}\r\n                    getFieldValue={() => currentStore.getCellValue({ rowKey: 'rowid', rowKeyValue, rowIndex, attrcode })}\r\n                    path={[rowKeyValue, attrcode, 'single']}\r\n                />\r\n            default:\r\n                return isNullOrVoid(display) ? value : display || value;\r\n        }\r\n    };\r\n\r\n    expandLayout = width => {\r\n        let expandItemWidth = 33.333333;\r\n        let col = 3;\r\n        if (width) {\r\n            if (width < 600) {\r\n                expandItemWidth = 100;\r\n                col = 1;\r\n            }\r\n            if (width >= 600 && width < 900) {\r\n                expandItemWidth = 50;\r\n                col = 2;\r\n            }\r\n            if (width >= 900 && width < 1230) {\r\n                expandItemWidth = 33.333333;\r\n                col = 3;\r\n            }\r\n            if (width >= 1230 && width < 1820) {\r\n                expandItemWidth = 25;\r\n                col = 4;\r\n            }\r\n            if (width >= 1820) {\r\n                expandItemWidth = 20;\r\n                col = 5;\r\n            }\r\n        }\r\n        return { expandItemWidth, col };\r\n    };\r\n\r\n    render() {\r\n        let { moduleId, mainCode, record, meta } = this.props;\r\n        if (\r\n            !meta.gridrelation ||\r\n            !meta.gridrelation[moduleId] ||\r\n            !meta.gridrelation[moduleId].destBrowseAreaCode) {\r\n            console.error(`没有配置模板，meta.gridrelation.${moduleId}.destBrowseAreaCode值是undefined`)\r\n            return\r\n        }\r\n        let viewId = meta.gridrelation[moduleId].destBrowseAreaCode;\r\n\r\n        //字段是否显示可配置\r\n        let metaItems = meta[viewId].items.filter(item => !!item.visible);\r\n        let b = document.querySelector(`#js_cardTable_${mainCode} .u-table-scroll .u-table-body`);\r\n        let width = 0\r\n        if (b) {//兼容dom不存在\r\n            width = b.getBoundingClientRect().width;\r\n            this.tableBodyWidth = width;\r\n        } else {\r\n            width = this.tableBodyWidth || 0\r\n        }\r\n\r\n        return (\r\n            //宽度动态计算：表格宽度-固定列宽度\r\n            viewId ?\r\n                <article\r\n                    style={{\r\n                        width: `${width - 35}px`,\r\n                        position: \"relative\",\r\n                        zIndex: 2,\r\n                    }}\r\n                    //fieldid=\"expand-area\"\r\n                    className=\"cardTable-view-item\"\r\n                >\r\n                    {this.content(metaItems, width, record)}\r\n                </article> : null\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CONFIG } from '@platform/table-core';\r\nimport { Item, ItemProvider } from \"@platform/template\";\r\nimport { getSysFieldid, getLangCode, isWrong, isObj, isArray, isNullOrVoid, changeTime, getRandomPassword, formatAcuracy, typeFormat, formatNumber, formatDatetime } from '@platform/api';\r\nimport './index.less'\r\n\r\nconst defaultColor = CONFIG.defaultColor;\r\nconst expandLayout = width => {\r\n    let expandItemWidth = 33.333333;\r\n    let col = 3;\r\n    if (width) {\r\n        if (width < 600) {\r\n            expandItemWidth = 100;\r\n            col = 1;\r\n        }\r\n        if (width >= 600 && width < 900) {\r\n            expandItemWidth = 50;\r\n            col = 2;\r\n        }\r\n        if (width >= 900 && width < 1230) {\r\n            expandItemWidth = 33.333333;\r\n            col = 3;\r\n        }\r\n        if (width >= 1230 && width < 1820) {\r\n            expandItemWidth = 25;\r\n            col = 4;\r\n        }\r\n        if (width >= 1820) {\r\n            expandItemWidth = 20;\r\n            col = 5;\r\n        }\r\n    }\r\n    return { expandItemWidth, col };\r\n};\r\n\r\n@ItemProvider\r\nexport default class AllRowsExpand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageSize: 0,\r\n            viewStartIndex: 0,\r\n            viewEndIndex: 0,\r\n            DOMStartIndex: 0,\r\n            DOMEndIndex: 0,\r\n            heightOfFirstLine: 0,\r\n            heightOfLastLine: 0,\r\n            json: {},\r\n        };\r\n\r\n        let { meta, mainCode, tableDom } = this.props;\r\n        if (!meta.gridrelation ||\r\n            !meta.gridrelation[mainCode] ||\r\n            !meta.gridrelation[mainCode].destBrowseAreaCode) {\r\n            console.error(`没有配置模板，meta.gridrelation.${mainCode}.destBrowseAreaCode值是undefined`)\r\n            return;\r\n        }\r\n        // id\r\n        this.viewId = meta.gridrelation[mainCode].destBrowseAreaCode;\r\n        //模板\r\n        this.metaItems = meta[this.viewId].items\r\n            .filter(item => !!item.visible);\r\n        let width = tableDom.clientWidth;\r\n        let col = expandLayout(width).col;\r\n        // 每一行行高\r\n        this.lineHeight = Math.ceil(this.metaItems.length / col) * 36 + 25;\r\n        // 需要渲染的数据源\r\n        this.scrollHeight = 300;\r\n        this._OFFSET = 10;\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.calculate(this.props);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (nextProps.mainCode !== this.props.mainCode) {\r\n            let { meta, mainCode, tableDom } = nextProps;\r\n            if (!meta.gridrelation ||\r\n                !meta.gridrelation[mainCode] ||\r\n                !meta.gridrelation[mainCode].destBrowseAreaCode) {\r\n                console.error(`没有配置模板，meta.gridrelation.${mainCode}.destBrowseAreaCode值是undefined`)\r\n                return;\r\n            }\r\n            // id\r\n            this.viewId = meta.gridrelation[mainCode].destBrowseAreaCode;\r\n            //模板\r\n            this.metaItems = meta[this.viewId].items\r\n                .filter(item => !!item.visible);\r\n\r\n            let width = tableDom.clientWidth;\r\n            let col = expandLayout(width).col;\r\n            // 每一行行高\r\n            this.lineHeight = Math.ceil(this.metaItems.length / col) * 36 + 25;\r\n\r\n            this.calculate(nextProps);\r\n            this.setTableAreaHeight();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTableAreaHeight();\r\n\r\n    }\r\n\r\n    setTableAreaHeight = () => {\r\n        let windowHeight = document.body.clientHeight;\r\n        if (!windowHeight) { return }\r\n        let header = document.querySelector('.cardTable-tabs')\r\n        if (!header) { return }\r\n        let headerHeight = header.clientHeight;\r\n        let tableAreaHeight = windowHeight - headerHeight - 24\r\n        if (this.state.tableAreaHeight !== tableAreaHeight) {\r\n            this.setState({ tableAreaHeight })\r\n        }\r\n    }\r\n\r\n    handleScroll = e => {\r\n        e.stopPropagation();\r\n        let { viewStartIndex } = this.state;\r\n        let { viewStartIndex: currentViewStartIndex } = this.getViewIndex();\r\n        if (viewStartIndex !== currentViewStartIndex) {\r\n            this.calculate(this.props);\r\n        }\r\n    };\r\n\r\n    getViewIndex = () => {\r\n        let height = this.lineHeight;\r\n        let scrollHeight = this.scrollHeight;\r\n        let DOM = this.getThisDOM();\r\n        let viewStartIndex = Math.floor(DOM.scrollTop / height),\r\n            pageSize = Math.ceil(scrollHeight / height),\r\n            viewEndIndex = viewStartIndex + pageSize - 1;\r\n        return {\r\n            viewStartIndex,\r\n            viewEndIndex,\r\n            pageSize,\r\n        };\r\n    };\r\n\r\n    getThisDOM = () => ReactDOM.findDOMNode(this) || { scrollTop: 0 };\r\n\r\n    calculate = props => {\r\n        let DOM = this.getThisDOM(),\r\n            { viewStartIndex, viewEndIndex, pageSize } = this.getViewIndex(),\r\n            { DOMStartIndex, DOMEndIndex } = this.getDOMIndex(viewStartIndex, viewEndIndex, props),\r\n            { heightOfFirstLine, heightOfLastLine } = this.getHeightOfFirstAndLastLineByDOMIndex(\r\n                DOMStartIndex,\r\n                DOMEndIndex,\r\n                props,\r\n            );\r\n        let prevScrollTop = DOM.scrollTop;\r\n        this.setState(\r\n            {\r\n                pageSize,\r\n                viewStartIndex,\r\n                viewEndIndex,\r\n                DOMStartIndex,\r\n                DOMEndIndex,\r\n                heightOfFirstLine,\r\n                heightOfLastLine,\r\n            },\r\n            () => {\r\n                DOM.scrollTop = prevScrollTop;\r\n            },\r\n        );\r\n    };\r\n\r\n    getHeightOfFirstAndLastLineByDOMIndex = (viewStartIndex, viewEndIndex, props) => {\r\n        let height = this.lineHeight;\r\n        let data = props.data.filter(item => item.status !== '3');\r\n        let heightOfFirstLine = viewStartIndex * height,\r\n            heightOfLastLine = (data.length - viewEndIndex - 1) * height;\r\n        return {\r\n            heightOfFirstLine,\r\n            heightOfLastLine,\r\n        };\r\n    };\r\n\r\n    getDOMIndex = (viewStartIndex, viewEndIndex, props) => {\r\n        let data = props.data.filter(item => item.status !== '3');\r\n        let DOMStartIndex = viewStartIndex - this._OFFSET,\r\n            DOMEndIndex = viewEndIndex + this._OFFSET;\r\n        DOMStartIndex < 0 && (DOMStartIndex = 0);\r\n        DOMEndIndex > data.length - 1 && (DOMEndIndex = data.length - 1);\r\n        return {\r\n            DOMStartIndex,\r\n            DOMEndIndex,\r\n        };\r\n    };\r\n\r\n    handleBrowse = (\r\n        IType,\r\n        display,\r\n        value,\r\n        scale,\r\n        attrcode,\r\n        languageMeta,\r\n        values,\r\n        datatype,\r\n        options,\r\n        multiple,\r\n        record,\r\n        rowIndex,\r\n    ) => {\r\n        let json = this.props.langJson;\r\n        let { getCellValue, setCellValue } = this.props\r\n        // 特殊处理下逻辑型  枚举类型\r\n        if (\r\n            datatype === \"32\" &&\r\n            [\"select\", \"checkbox\", \"radio\"].includes(IType) &&\r\n            isArray(options) &&\r\n            !display &&\r\n            value !== null &&\r\n            value !== undefined\r\n        ) {\r\n            if (IType === \"checkbox\" || multiple) {\r\n                let dispalyList = options\r\n                    .filter(item => value.includes(item.value))\r\n                    .map(option => {\r\n                        return option.display;\r\n                    });\r\n                return dispalyList.join(\",\");\r\n            } else {\r\n                let { display } =\r\n                    options.filter(item => item.value == value)[0] || {};\r\n                return display;\r\n            }\r\n        }\r\n\r\n        switch (true) {\r\n            case CONFIG.displayTypes.includes(IType):\r\n                return display || value;\r\n            case CONFIG.boolean.includes(IType):\r\n                return value == \"Y\" || value == true\r\n                    ? json[\"table_yes\"]\r\n                    : json[\"table_no\"];\r\n            case CONFIG.timeTypes.includes(IType):\r\n                if (IType === \"datetimepicker\") {\r\n                    return formatDatetime(changeTime(value, \"YYYY-MM-DD HH:mm:ss\"), 'datetime');\r\n                } else if (IType === \"timepicker\") {\r\n                    return formatDatetime(value, 'time');\r\n                } else if (IType === \"datePickerNoTimeZone\") {\r\n                    return formatDatetime(value, 'date');\r\n                }\r\n                return formatDatetime(changeTime(value), 'date');\r\n            case IType === \"label\":\r\n                return isNullOrVoid(display) ? value : display || value;\r\n            case IType === \"number\":\r\n                // 表格浏览态加了四舍五入\r\n                return formatNumber(formatAcuracy(value, scale));\r\n            case IType === \"password\":\r\n                // 密码框浏览态显示***\r\n                return value && getRandomPassword();\r\n            case IType === \"residtxt\": // 对多语的处理\r\n                let LangCode = getLangCode();\r\n                let loginLang = languageMeta.filter(i => i.languageCode == LangCode);\r\n                if (loginLang.length > 0) {\r\n                    loginLang[0].index === \"1\" ? (loginLang[0].index = \"\") : \"\";\r\n                    if (\r\n                        values[attrcode + loginLang[0].index] &&\r\n                        values[attrcode + loginLang[0].index].value\r\n                    ) {\r\n                        value = values[attrcode + loginLang[0].index].value;\r\n                        return value;\r\n                    }\r\n                    return value;\r\n                }\r\n                return value;\r\n            case IType === \"attachment\": // 对多语的处理\r\n                let rowKeyValue = record.rowid\r\n                return <Item\r\n                    browse={false}\r\n                    itemtype={IType}\r\n                    attrcode={attrcode}\r\n                    setFieldValue={({ value: val }) => setCellValue({ rowKey: 'rowid', rowKeyValue, rowIndex, attrcode, value: val })}\r\n                    getFieldValue={() => getCellValue({ rowKey: 'rowid', rowKeyValue, rowIndex, attrcode })}\r\n                    path={[rowKeyValue, attrcode, 'all']}\r\n                />\r\n            default:\r\n                return isNullOrVoid(display) ? value : display || value;\r\n        }\r\n    };\r\n\r\n    expandedList = (record, index) => {\r\n        let { tableDom } = this.props;\r\n        if (this.viewId) {\r\n            let width = tableDom.offsetWidth;\r\n            let itemWidth = expandLayout(width).expandItemWidth;\r\n\r\n            return (\r\n                <div className=\"card-table-expand-list cf\" fieldid={getSysFieldid('list-item')} num={index}>\r\n                    <div>\r\n                        {this.metaItems.map(item => {\r\n                            let {\r\n                                attrcode: ICode,\r\n                                itemtype: IType,\r\n                                scale: IScale,\r\n                                languageMeta: LanguageMeta,\r\n                                color,\r\n                            } = item;\r\n\r\n                            let [values, value, display, scale] = [record.values];\r\n                            // 如果有这个键取这个键的value值，否则为null\r\n                            value = isObj(values[ICode])\r\n                                ? typeFormat(values[ICode].value, IType)\r\n                                : null;\r\n                            display = isObj(values[ICode]) ? values[ICode].display : null;\r\n                            scale = isObj(values[ICode])\r\n                                ? !isWrong(values[ICode].scale) && values[ICode].scale != '-1'\r\n                                    ? +values[ICode].scale\r\n                                    : +IScale || 0\r\n                                : +IScale || 0;\r\n                            // 浏览态全展开的label颜色\r\n                            color = defaultColor.includes(color) ? '' : color;\r\n                            return (\r\n                                <div\r\n                                    className=\"expanded-list-item\"\r\n                                    fieldid={getSysFieldid(item.attrcode)}\r\n                                    style={{\r\n                                        float: 'left',\r\n                                        width: `${itemWidth}%`,\r\n                                    }}\r\n                                    key={ICode}\r\n                                >\r\n                                    <div style={{ color }} className=\"expanded-list-item-label\">\r\n                                        {`${item.label}:`}\r\n                                        <span className=\"expanded-list-item-label-colon\" />\r\n                                    </div>\r\n                                    <div className=\"expanded-list-item-control\">\r\n                                        <div className=\"expanded-list-item-control-wrapper\">\r\n                                            <span>\r\n                                                {this.handleBrowse(\r\n                                                    IType,\r\n                                                    display,\r\n                                                    value,\r\n                                                    scale,\r\n                                                    ICode,\r\n                                                    LanguageMeta,\r\n                                                    values,\r\n                                                    item && item.datatype,\r\n                                                    item && item.options,\r\n                                                    item && item.multiple,\r\n                                                    record,\r\n                                                    index,\r\n                                                )}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { config, langJson, name, maxVisible, tableDom, adaptionHeight, otherAreaHeight = 0 } = this.props;\r\n        let { DOMStartIndex, DOMEndIndex, heightOfFirstLine, heightOfLastLine } = this.state;\r\n        let tableHeight = tableDom.offsetHeight\r\n        let visibleRows = this.props.data.filter(item => item.status !== '3');\r\n        let styleObj = {}\r\n        if (maxVisible) {\r\n            styleObj.height = this.state.tableAreaHeight || '93%'\r\n        } else if (adaptionHeight) {\r\n            let windowHeight = document.body.clientHeight;\r\n            let cardTableArea = document.querySelector('.cardTable-table-area')\r\n            styleObj.maxHeight = 300\r\n            styleObj.height = 300\r\n            if (cardTableArea) {\r\n                let top = cardTableArea.getBoundingClientRect().top;\r\n                let expandHeight = windowHeight - top - 8 - otherAreaHeight;\r\n                if (expandHeight < 210) { expandHeight = 210 }\r\n                styleObj.maxHeight = expandHeight\r\n                styleObj.height = expandHeight\r\n            }\r\n        } else {\r\n            styleObj.maxHeight = `${tableHeight > 300 ? tableHeight : 300}px`\r\n            styleObj.minHeight = `${tableHeight > 300 ? tableHeight : 300}px`\r\n        }\r\n        return (\r\n            <div\r\n                className=\"lightapp-component-cardTable-view\"\r\n                style={styleObj}\r\n                onScroll={this.handleScroll}\r\n            >\r\n                <div\r\n                    className=\"card-table-expand-wraps\"\r\n                    fieldid={getSysFieldid(`${(config && config.fieldid) || name}_list-area`)}\r\n\r\n                >\r\n                    {visibleRows.length ? (\r\n                        <div>\r\n                            <div style={{ height: heightOfFirstLine }} />\r\n                            {visibleRows.slice(DOMStartIndex, DOMEndIndex + 1).map((item, index) => (\r\n                                this.expandedList(item, DOMStartIndex + index)\r\n                            ))}\r\n                            < div style={{ height: heightOfLastLine }} />\r\n                        </div>\r\n\r\n                    )\r\n\r\n                        : (\r\n                            <div className=\"no-data-li\">\r\n                                <div className=\"no-data-placeholder\">\r\n                                    <i className=\"no-data\" />\r\n                                    <span className=\"no-data-title\">{langJson['table0033']}</span>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport { HotKeys } from 'react-hotkeys';\r\nimport { ViewModel } from '@platform/api';\r\nimport { getFirstItem, setValueOfActiveTable } from '../../../../../WithKeyboardChange/createKeyMap';\r\nimport { executeAutoFocus } from '../../../../../WithKeyboardChange/util/findNextFocusItemInTable';\r\nimport { stopEnterHotKey } from '../../../../../WithKeyboardChange/config/stopEnterHotKey';\r\nimport calculateNeedJumpTimes from '../../../../../WithKeyboardChange/util/calculateNeedJumpTimes';\r\n\r\nfunction findParentTd(el) {\r\n    while (el.parentElement) {\r\n        el = el.parentElement;\r\n        if (el.tagName === 'TD') {\r\n            return el;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst keyMap = {\r\n    nextTabHandler: ['right', 'down'],\r\n    nextTabUSRHandler: ['shift+right'],\r\n    prevTabHandler: ['left', 'up'],\r\n    prevTabUSLHandler: ['shift+left'],\r\n    expand: ['space'],\r\n    enter: ['enter'],\r\n};\r\n\r\n/**\r\n * @author bbqin\r\n * @param {*} props\r\n * @description  tab页签的hotkey逻辑\r\n * @return {null}\r\n */\r\nexport function TabHotKey(props) {\r\n    let {\r\n        hotKeyboard = true,\r\n        wrapperId,\r\n        headerId,\r\n        activeKey,\r\n        moduleId,\r\n        ...others\r\n    } = props || {};\r\n\r\n    /**\r\n     * @description 获取活跃元素\r\n     * @param {*} comboKey\r\n     */\r\n    function getActiveTabElement(comboKey) {\r\n        let wrapper = document.querySelector(`#${wrapperId}`);\r\n        let activeTabTitle = document.querySelector(`#${headerId} li.active`);\r\n        if (!activeTabTitle) {\r\n            return null;\r\n        }\r\n        if (\r\n            !comboKey &&\r\n            activeTabTitle.firstElementChild === document.activeElement\r\n        ) {\r\n            return activeTabTitle;\r\n        }\r\n        if (comboKey && wrapper && wrapper.contains(document.activeElement)) {\r\n            return activeTabTitle;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * @description 获取将要聚焦的元素\r\n     * @param {*} dir\r\n     * @param {*} comboKey\r\n     */\r\n    function getWillActiveTabElement(dir) {\r\n        let activeTabTitle = document.querySelector(`#${headerId} li.tabs-item.active`),\r\n            // first = document.querySelector(`#${headerId} li.tabs-item:first-child`),\r\n            // last = document.querySelector(`#${headerId} li.tabs-item:last-child`),\r\n            $li = document.querySelector(`#${headerId} li.tabs-item`) || [],\r\n            lilen = $li.length,\r\n            first = $li[0],\r\n            last = $li[lilen - 1],\r\n            willActiveElement = activeTabTitle;\r\n        if (dir === 'prev' && activeTabTitle.previousElementSibling) {\r\n            willActiveElement = activeTabTitle.previousElementSibling;\r\n        }\r\n        if (dir === 'prev' && !activeTabTitle.previousElementSibling) {\r\n            willActiveElement = last;\r\n        }\r\n        if (dir === 'next' && activeTabTitle.nextElementSibling) {\r\n            willActiveElement = activeTabTitle.nextElementSibling;\r\n        }\r\n        if (dir === 'next' && !activeTabTitle.nextElementSibling) {\r\n            willActiveElement = first;\r\n        }\r\n\r\n        return willActiveElement;\r\n    }\r\n    setValueOfActiveTable({ moduleId, activeKey });\r\n    return hotKeyboard ? (\r\n        <HotKeys\r\n            keyMap={keyMap}\r\n            handlers={{\r\n                nextTabHandler: () => {\r\n                    let activeTabTitle = getActiveTabElement(false);\r\n                    // console.log(e, document.activeElement, activeTabTitle);\r\n                    // 如果当前focus元素在页签下\r\n                    if (activeTabTitle) {\r\n                        // console.log(\"next tab\");\r\n                        let next = getWillActiveTabElement('next');\r\n                        next.firstElementChild.focus();\r\n                        next.click();\r\n                        // e.preventDefault();\r\n                    }\r\n                },\r\n                nextTabUSRHandler: e => {\r\n                    let activeTabTitle = getActiveTabElement(e.shiftKey);\r\n                    // 如果当前focus元素在页签下\r\n                    if (activeTabTitle) {\r\n                        // console.log(\"next tab\");\r\n                        let next = getWillActiveTabElement('next');\r\n                        // next.firstElementChild.className += ' focused';\r\n                        next.firstElementChild.focus();\r\n                        next.click();\r\n                        // e.preventDefault();\r\n                    }\r\n                },\r\n                prevTabHandler: () => {\r\n                    let activeTabTitle = getActiveTabElement(false);\r\n                    // 如果当前focus元素在页签下\r\n                    if (activeTabTitle) {\r\n                        // console.log('prev tab');\r\n                        let prev = getWillActiveTabElement('prev');\r\n                        prev.firstElementChild.focus();\r\n                        prev.click();\r\n                        // e.preventDefault();\r\n                    }\r\n                },\r\n                prevTabUSLHandler: e => {\r\n                    let activeTabTitle = getActiveTabElement(e.shiftKey);\r\n                    // 如果当前focus元素在页签下\r\n                    if (activeTabTitle) {\r\n                        // console.log('prev tab');\r\n                        let prev = getWillActiveTabElement('prev');\r\n                        prev.firstElementChild.focus();\r\n                        prev.click();\r\n                        // e.preventDefault();\r\n                    }\r\n                },\r\n                expand: e => {\r\n                    // let wrapper = document.querySelector(`#${wrapperId}`);\r\n                    let activeTabTitle = document.querySelector(`#${headerId}`);\r\n                    // 如果当前focus元素在页签下\r\n                    if (activeTabTitle.contains(document.activeElement)) {\r\n                        e.preventDefault();\r\n                        console.log('sapce trigger!');\r\n                        // e.preventDefault();\r\n                        activeTabTitle.querySelector('i').click();\r\n                    }\r\n                },\r\n                enter: e => {\r\n                    let target = e.target;\r\n                    if (stopEnterHotKey(e.target)) return;\r\n\r\n                    let container = document.getElementById(headerId);\r\n                    let item = getFirstItem(activeKey);\r\n                    if (item && container.contains(target)) {\r\n                        let div = document.querySelector(`div[${item}] [tabindex=\"0\"]`);\r\n\r\n                        //判断当前行是否可以编辑\r\n                        let nextFocusTd = div && findParentTd(div);\r\n                        let nextFocusTr = nextFocusTd && nextFocusTd.parentElement;\r\n                        if (nextFocusTr && nextFocusTr.getAttribute('tabindex') === '-1') {\r\n                            let needJumpTimes = 0;\r\n                            needJumpTimes = calculateNeedJumpTimes(nextFocusTr, needJumpTimes, 'down');\r\n                            let needJumpItemCode = item.replace(/\\d+$/, needJumpTimes);\r\n                            div = document.querySelector(`div[${needJumpItemCode}] [tabindex=\"0\"]`);\r\n                        }\r\n                        executeAutoFocus({ div, ViewModel });\r\n                        div = null;\r\n                    }\r\n                },\r\n            }}\r\n            className=\"tabs-hotkeys-wrapper\"\r\n            focused={true}\r\n            attach={document.body}\r\n            {...others}\r\n        >\r\n            {props.children}\r\n        </HotKeys>\r\n    ) : null;\r\n}\r\n\r\nexport default TabHotKey;\r\n","import { config as CONFIG } from '@platform/api'\r\n\r\n/**\r\n *\r\n * @param element 元素\r\n * @return boolean\r\n */\r\nexport function stopEnterHotKey(element) {\r\n    return element.className &&\r\n\t\telement.className.includes(CONFIG.stopEnterHotKey);\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Tooltip, Table, MaxBox, Dropdown, Menu, ScrollElement } from \"@platform/base\";\r\nimport { lib, utils, CONFIG, handleSortcolumns } from \"@platform/table-core\";\r\nimport classnames from \"classnames\";\r\nimport { getSysFieldid, pageTo, getLangCode } from \"@platform/api\";\r\nimport AllRowsExpand from \"../AllRowsExpand\";\r\nimport TabHotKey from \"../TabHotkey\";\r\n\r\nconst Item = Menu.Item;\r\nimport \"./index.less\";\r\n\r\nconst {\r\n    formatColumn,\r\n    hotkey,\r\n    selectRow,\r\n    checkCol,\r\n    indexCol,\r\n    errorCol,\r\n    selectable,\r\n    excel,\r\n    total,\r\n    columnSort,\r\n    contextMenu,\r\n    filter,\r\n} = lib;\r\nconst {\r\n    uuidv4,\r\n    excelPackageData,\r\n    polymerizeComponents,\r\n    isFunction,\r\n    isArray,\r\n    isString,\r\n    isNumber,\r\n    isEmptyValue,\r\n    isObject,\r\n    isUndefined,\r\n    getMetaIsTotal,\r\n    isWrong,\r\n} = utils;\r\n\r\nconst MetaTable = polymerizeComponents(Table, [\r\n    columnSort,\r\n    formatColumn,\r\n    selectRow,\r\n    errorCol,\r\n    total,\r\n    checkCol,\r\n    indexCol,\r\n    filter,\r\n    selectable,\r\n    excel,\r\n    hotkey,\r\n    contextMenu,\r\n], {\r\n    name: 'cardTable',\r\n    type: 'hoc',\r\n    user: 'platform',\r\n});\r\n\r\nconst { ROW_STATUS } = CONFIG;\r\n\r\nexport default class TabsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isEllipsis: true }\r\n        //当前激活页签\r\n        this.currentMainCode = this.props.mainCode;\r\n        //页签主区域Store\r\n        this.mainStore = this.props.tabsStore[this.props.mainCode];\r\n\r\n        // 当前激活页签状态存在主区域store\r\n        let oldSwitch = this.mainStore.getStore(\"tableSwitch\");\r\n        let initSwitch = {\r\n            ...oldSwitch,\r\n            //activeCode: this.props.mainCode,\r\n            activeCode: oldSwitch.activeCode\r\n                ? oldSwitch.activeCode\r\n                : this.props.mainCode,\r\n        };\r\n        this.mainStore.setStore(\"tableSwitch\", initSwitch, false);\r\n\r\n        //当前单来源表格Store\r\n        this.currentStore = this.mainStore;\r\n        this.currentStore.setStore(\"activeTableCode\", this.currentMainCode, false);\r\n        this.currentConfig = this.props.tabsConfig[this.currentMainCode] || {};\r\n        // 孙表使用的是TabsTable\r\n        if (this.props.isGrandTable) {\r\n            for (let source of this.props.metaTabs) {\r\n                // if (!props.tabsStore[source].getRef().length) {\r\n                props.tabsStore[source].setRef(this);\r\n                // }\r\n            }\r\n        }\r\n\r\n        //是否所有页签都隐藏\r\n        this.isAllTabsHide = true;\r\n\r\n        this.currentData = [];\r\n\r\n        this.uuid = uuidv4();\r\n        typeof window === 'object' && (window[this.uuid] = this.props.tabsStore);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { grandComponentDidMount } = this.currentConfig;\r\n        isFunction(grandComponentDidMount) && grandComponentDidMount();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.props.isGrandTable) {\r\n            for (let source of this.props.metaTabs) {\r\n                this.props.tabsStore[source].removeRef(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(nextProps, nextState) {\r\n        let { cardTableComponentUpdate } = this.props;\r\n        let { getData } = this.currentStore;\r\n        let data = getData([ROW_STATUS.delete, ROW_STATUS.filter]);\r\n        cardTableComponentUpdate && cardTableComponentUpdate(this.props, data);\r\n    }\r\n\r\n    //页签切换\r\n    tabChange = code => {\r\n        // 当前激活页签状态存在主区域store\r\n        let initSwitch = this.mainStore.getStore(\"tableSwitch\");\r\n        let { activeCode } = initSwitch;\r\n        //API调用导致页签改变，视图不变时，不更新\r\n        if (activeCode === code) {\r\n            return;\r\n        }\r\n\r\n        initSwitch.activeCode = code;\r\n\r\n        let { tabsStore, tabsConfig } = this.props;\r\n        let meta = this.currentStore.getStore(\"meta\");\r\n\r\n\r\n        let config = {};\r\n        let mainAreaCode = '';\r\n        let currentCode = code;\r\n\r\n        //获取当前激活Store\r\n        if (meta) {\r\n            mainAreaCode = this.getMainCode(meta, code);\r\n            this.currentMainCode = mainAreaCode;\r\n            this.currentStore = tabsStore[mainAreaCode];\r\n            config = tabsConfig[mainAreaCode] || {};\r\n        } else {\r\n            this.currentStore = tabsStore[code];\r\n            this.currentMainCode = code;\r\n            // 可以没有配置参数\r\n            config = tabsConfig[code] || {};\r\n            mainAreaCode = code;\r\n        }\r\n        // 调整下更新顺序 避免下面会调离取不到值\r\n        this.currentStore.setStore(\"activeTableCode\", this.currentMainCode, false);\r\n        this.mainStore.setStore(\"tableSwitch\", initSwitch, true);\r\n        const { onTabChange } = config;\r\n        isFunction(onTabChange) && onTabChange(mainAreaCode, currentCode);\r\n    };\r\n    //圆角切换\r\n    tabsAngleToggle = () => {\r\n        //显示隐藏属性存主Store\r\n        // console.log(this.currentMainCode, this.props.mainCode)\r\n        let { tabsStore, mainCode, tabsConfig, metaTabs } = this.props;\r\n        let { getStore, setStore } = tabsStore[mainCode];\r\n        let tableSwitch = getStore(\"tableSwitch\");\r\n        tableSwitch.tableVisible = !tableSwitch.tableVisible;\r\n        setStore(\"tableSwitch\", tableSwitch, true);\r\n\r\n        //监听当前页签组的全部事件\r\n        for (let code of metaTabs) {\r\n            let { onHeadAngleToggle } = tabsConfig[code];\r\n            isFunction(onHeadAngleToggle) &&\r\n                onHeadAngleToggle(code, tableSwitch.tableVisible);\r\n        }\r\n    };\r\n\r\n    onAllCheckChange = () => {\r\n        let { tabsConfig } = this.props;\r\n        let { selectedChange, onSelectedAll } =\r\n            tabsConfig[this.currentMainCode] || {};\r\n        let {\r\n            setRowsSelected,\r\n            getSelectedRows,\r\n            getCheckInfo,\r\n            getData,\r\n        } = this.currentStore;\r\n        let { checkedAll } = getCheckInfo() || {};\r\n        let oldLen = getSelectedRows().length;\r\n        checkedAll = !checkedAll;\r\n\r\n        setRowsSelected({}, checkedAll, true);\r\n\r\n        let newLen = getSelectedRows().length;\r\n\r\n        isFunction(onSelectedAll) &&\r\n            onSelectedAll(this.currentMainCode, checkedAll, getData().length);\r\n        isFunction(selectedChange) &&\r\n            selectedChange(this.currentMainCode, newLen, oldLen);\r\n    };\r\n\r\n    // 框选等操作\r\n    onBatchSelected(rows = [], hotkey) {\r\n        let { tabsConfig } = this.props;\r\n        let { onBatchSelected } = tabsConfig[this.currentMainCode] || {};\r\n\r\n        let {\r\n            getTableProps,\r\n            setRowsSelected,\r\n            getRowProps,\r\n            getTrueRowIndex,\r\n            setTableProps,\r\n        } = this.currentStore;\r\n        let rowKey = getTableProps(\"rowKey\");\r\n\r\n        // 清空所有\r\n        setRowsSelected({}, false, false);\r\n\r\n        rows.forEach(row => {\r\n            let rowKeyValue = row[rowKey];\r\n            let selected = !getRowProps({ rowKeyValue }, \"selected\");\r\n\r\n            let values = row.values || row,\r\n                isSagaStatus = values && values.saga_status && values.saga_status.value === '1';\r\n            // 错误行禁用\r\n            if (isSagaStatus) {\r\n                return;\r\n            }\r\n\r\n            setRowsSelected({ rowKeyValues: rowKeyValue }, selected, false);\r\n\r\n            // setTableProps(\"currentIndex\", getTrueRowIndex({ rowKeyValue }), false);\r\n        });\r\n        // 更新\r\n        this.forceUpdate && this.forceUpdate();\r\n        console.log(rows);\r\n        onBatchSelected && onBatchSelected(this.currentMainCode, rows);\r\n    }\r\n\r\n    onCheckChange = (record, index, isUnique = false) => {\r\n        let { tabsConfig } = this.props;\r\n        let { selectedChange, onSelected } =\r\n            tabsConfig[this.currentMainCode] || {};\r\n\r\n        let {\r\n            getTableProps,\r\n            setRowsSelected,\r\n            getRowProps,\r\n            getSelectedRows,\r\n            getTrueRowIndex,\r\n            setTableProps,\r\n        } = this.currentStore;\r\n        let rowKey = getTableProps(\"rowKey\");\r\n        let rowKeyValue = record[rowKey];\r\n        let selected = !getRowProps({ rowKeyValue }, \"selected\");\r\n        let oldLen = getSelectedRows().length;\r\n\r\n        if (isUnique) {\r\n            // 清理所有\r\n            setRowsSelected({}, false, false);\r\n        }\r\n\r\n        // 特殊情况 如果当前选择 选择行时 依然选中\r\n        if (!selected && isUnique && oldLen > 1) {\r\n            selected = true;\r\n        }\r\n        setRowsSelected({ rowKeyValues: rowKeyValue }, selected);\r\n\r\n        setTableProps(\"currentIndex\", selected ? getTrueRowIndex({ rowIndex: index }) : -1, false);\r\n\r\n        let newLen = getSelectedRows().length;\r\n        // 选中选项的回调函数\r\n        isFunction(onSelected) &&\r\n            onSelected(this.currentMainCode, record, index, selected);\r\n        isFunction(selectedChange) &&\r\n            selectedChange(this.currentMainCode, newLen, oldLen);\r\n    };\r\n\r\n    //排序回调\r\n    sortChange = (sortParam, sortData) => {\r\n        let sortObj = {};\r\n        let { activeCode } = this.mainStore.getStore(\"tableSwitch\");\r\n        let meta = this.getCurrentMeta(activeCode);\r\n        sortParam.forEach(item => {\r\n            sortObj[item.field] = item;\r\n        });\r\n        // 处理排序多表头\r\n        handleSortcolumns({ columns: meta, sortObj });\r\n\r\n        let invisibleData = this.currentStore.getViewData('invisible') || [];\r\n        this.currentStore.setData({ data: [...sortData, ...invisibleData] });\r\n    };\r\n\r\n    //右键菜单点击函数\r\n    contextMenuClick = (btnCode, execCommandCopy, param, insertNum, rowIndex, isHotKey = false) => {\r\n        let { getData, getRowOldValue, insertRowsAfterIndex, deleteTableRows, getCache, getArrayMeta, getRows } = this.currentStore;\r\n        let { rightMenuClick, onBatchChange } = this.currentConfig;\r\n        let editCode = [\"delete\", 'insert_up', 'insert_down'];\r\n        let copyCode = [\"copy\", \"copy-row\", \"copy-column\"]\r\n        switch (true) {\r\n            case editCode.includes(btnCode):\r\n                if (isFunction(rightMenuClick)) {\r\n                    //删行、插行、插行并粘贴等右键按钮需要业务适配\r\n                    if (btnCode === 'insert_up') {\r\n                        let rows = Array(insertNum).fill({ values: {} });\r\n                        insertRowsAfterIndex(rows, rowIndex - 1);\r\n                    }\r\n                    if (btnCode === 'insert_down') {\r\n                        let rows = Array(insertNum).fill({ values: {} });\r\n                        insertRowsAfterIndex(rows, rowIndex);\r\n                    }\r\n                    if (btnCode === 'delete') {\r\n                        deleteTableRows({ rowIndexs: rowIndex })\r\n                    }\r\n                    rightMenuClick(btnCode, insertNum, rowIndex);\r\n                }\r\n                break;\r\n            case copyCode.includes(btnCode):\r\n                //选中表头\r\n                let activeHeads = getCache('activeSpecialCells');\r\n                //console.log(\"表头选中信息：\", activeHeads)\r\n                let arrayMeta = getArrayMeta(this.currentMainCode);\r\n                console.log(\"模板数据arrayMeta\", arrayMeta)\r\n                let { activeCode } = this.mainStore.getStore(\"tableSwitch\");\r\n                let currentMeta = this.getCurrentMeta(activeCode);\r\n                let activedCells = getCache(\"activedCells\");\r\n\r\n                if (isHotKey && !activedCells && !activeHeads) {\r\n                    return;\r\n                }\r\n\r\n                let selectedRows = [];\r\n                if (btnCode === 'copy' || btnCode === 'copy-row') {\r\n                    selectedRows = activedCells && getRows({ rowKeyValues: Object.keys(activedCells) });\r\n                } else if (btnCode === 'copy-column') {\r\n                    selectedRows = getData([ROW_STATUS.delete, ROW_STATUS.filter]);\r\n                }\r\n                isFunction(execCommandCopy) && execCommandCopy(activeHeads, currentMeta, activedCells, selectedRows, arrayMeta);\r\n                break;\r\n            case btnCode === \"paste\":\r\n                //调用复制粘贴回调事件\r\n                if (isFunction(onBatchChange)) {\r\n                    param = {\r\n                        ...param,\r\n                        langJson: this.props.langJson,\r\n                        rows: getData(),\r\n                        getRowOldValue: getRowOldValue,\r\n                        tableId: this.currentMainCode,\r\n                    }\r\n                    let data = excelPackageData(param);\r\n                    onBatchChange(data);\r\n                }\r\n                break;\r\n            case btnCode === \"insert_paste\":\r\n                //插行并粘贴\r\n                if (isFunction(onBatchChange)) {\r\n                    let rows = Array(insertNum).fill({ values: {} });\r\n                    insertRowsAfterIndex(rows, rowIndex);\r\n                    //插入空行\r\n                    param = {\r\n                        ...param,\r\n                        langJson: this.props.langJson,\r\n                        rows: getData(),\r\n                        getRowOldValue: getRowOldValue,\r\n                        tableId: this.currentMainCode,\r\n                    }\r\n                    let data = excelPackageData(param);\r\n                    onBatchChange(data);\r\n                }\r\n\r\n                break;\r\n        }\r\n    };\r\n\r\n    //获取激活页签meta\r\n    getCurrentMeta = activeCode => {\r\n        let tableMeta = this.currentStore.getStore(\"meta\");\r\n        if (tableMeta && tableMeta[activeCode]) {\r\n            return tableMeta[activeCode].items.get();\r\n        }\r\n        return [];\r\n    };\r\n\r\n    getMainCode = (meta, activeCode) => {\r\n        let { metaTabs } = this.props;\r\n        let mainCode = activeCode;\r\n        for (let code of metaTabs) {\r\n            if (meta.gridrelation && meta.gridrelation[code]) {\r\n                let relation = meta.gridrelation[code].tabRelation;\r\n                if (isArray(relation) && relation.includes(activeCode)) {\r\n                    mainCode = code;\r\n                }\r\n            }\r\n        }\r\n        return mainCode;\r\n    };\r\n\r\n    //获取当前数据模型\r\n    getCurrentModel = () => {\r\n        let { mainCode, tabsStore, tabsConfig } = this.props;\r\n        //最大化、激活页签、表格显示等页签级功能 状态存 主区域Store\r\n        let initSwitch = this.mainStore.getStore(\"tableSwitch\");\r\n        let { activeCode } = initSwitch;\r\n\r\n        this.currentMainCode = activeCode;\r\n        let meta = tabsStore[mainCode].getStore(\"meta\");\r\n        if (meta) {\r\n            this.currentMainCode = this.getMainCode(meta, activeCode);\r\n            tabsStore[this.currentMainCode].setStore(\"activeTableCode\", this.currentMainCode, false);\r\n            this.mainStore.setStore(\"tableSwitch\", initSwitch, false);\r\n        }\r\n        //当前激活页签主区域store和config\r\n        return {\r\n            store: tabsStore[this.currentMainCode],\r\n            config: tabsConfig[this.currentMainCode] || {},\r\n        };\r\n    };\r\n\r\n    //根据relation关系 获取页签\r\n    getTabs = (meta, activeCode) => {\r\n        let tabs = [];\r\n        let moreTabs = [];\r\n        let activeName = \"\";\r\n        if (meta) {\r\n            let { metaTabs } = this.props;\r\n            let hideTabsCode = this.mainStore.getStore(\"hideTabsCode\");\r\n            metaTabs &&\r\n                metaTabs.forEach(item => {\r\n                    let relation = meta.gridrelation && meta.gridrelation[item];\r\n                    if (relation && relation.tabRelation) {//亚军回来再看看改的对不对\r\n                        let tabRelation = relation.tabRelation;\r\n                        tabRelation &&\r\n                            tabRelation.forEach(elem => {\r\n\r\n                                if (!hideTabsCode[meta[elem].code] && meta[elem].areaVisible !== false) {\r\n                                    // if (tabs.length === 4) {\r\n                                    //     moreTabs.push({\r\n                                    //         name: meta[elem].name,\r\n                                    //         code: meta[elem].code,\r\n                                    //     });\r\n                                    //     if (meta[elem].code === activeCode)\r\n                                    //         activeName = meta[elem].name;\r\n                                    // } else {\r\n                                    this.isAllTabsHide = false;\r\n                                    tabs.push({\r\n                                        name: meta[elem].name,\r\n                                        code: meta[elem].code,\r\n                                    });\r\n                                    // }\r\n                                }\r\n                            });\r\n                    } else {\r\n                        if (meta[item] && (!hideTabsCode[meta[item].code] && meta[item].areaVisible !== false)) {\r\n                            // if (tabs.length === 4) {\r\n                            //     moreTabs.push({\r\n                            //         name: meta[item].name,\r\n                            //         code: meta[item].code,\r\n                            //     });\r\n                            //     if (meta[item].code === activeCode)\r\n                            //         activeName = meta[item].name;\r\n                            // } else {\r\n                            this.isAllTabsHide = false;\r\n                            tabs.push({\r\n                                name: meta[item].name,\r\n                                code: meta[item].code,\r\n                            });\r\n                            // }\r\n                        }\r\n                    }\r\n                });\r\n\r\n            // 没有页签时隐藏表格\r\n            if (tabs.length === 0) {\r\n                this.isAllTabsHide = true;\r\n            }\r\n\r\n            return { tabs, moreTabs, activeName };\r\n        }\r\n    };\r\n\r\n    //多余5个页签显示更多按钮\r\n    getMoreTabsItem = (moreTabs, activeCode, maincode) => {\r\n        return (\r\n            <Menu\r\n                onSelect={({ key }) => {\r\n                    this.tabChange(key);\r\n                }}\r\n            >\r\n                {moreTabs.map(item => {\r\n                    return (\r\n                        <Item\r\n                            key={item.code}\r\n                            className={classnames(\"tabs-item\", { active: item.code === activeCode })}\r\n                            onClick={this.tabChange.bind(this, item.code)}\r\n                        >\r\n                            <a tabIndex={0}>{item.name}{this.getValidateFailed(maincode, item.code) && <i className=\"iconfont icon-djgantanhao\"></i>}</a>\r\n                            <span className=\"active-line\" />\r\n                        </Item>\r\n                    );\r\n                })}\r\n            </Menu>\r\n        );\r\n    };\r\n\r\n    getValidateFailed(mainCode, code) {\r\n        let validateFailed = this.currentStore.getCache(['validateFailed', mainCode, code]);\r\n        // console.log(this.currentStore, validateFailed);\r\n        return validateFailed && Object.keys(validateFailed).length > 0;\r\n    }\r\n\r\n    isAreaEditable = (code, meta) => {\r\n        let isEditable = false;\r\n        if (meta && meta[code] && meta[code].items) {\r\n            if (meta[code].items.get().find((e => e.disabled !== true && e.visible === true))) {\r\n                isEditable = true\r\n            }\r\n        }\r\n        return isEditable;\r\n    }\r\n\r\n    //创建页签\r\n    createTableTabs = () => {\r\n        let { mainCode, tabsStore, langJson } = this.props;\r\n        //当前激活页签主区域store和config\r\n        let { getStore } = this.currentStore;\r\n\r\n        // 页签按钮、行展开、全部展开收起 存当前激活 Store\r\n        let {\r\n            tableHeadLeft,\r\n            tableHead,\r\n            hideSwitch,\r\n            hideMaxBtn = false,\r\n            showCheck,\r\n            hideBrowseCheckbox,\r\n            showEditIcon = true, //是否显示编辑小铅笔\r\n            showTotalNum = true, //是否显示总条数\r\n            initShowTotalNum = true, //数据懒加载,当表格展开后才加载数据，则默认表格总行数为0时不显示，有数据才显示总行数\r\n            showSelectedNum = true, //是否显示已选\r\n            showToggleAngle = true,\r\n        } = this.currentConfig;\r\n\r\n        showCheck = isUndefined(hideBrowseCheckbox) ? showCheck : status === \"browse\" ? !hideBrowseCheckbox[activeCode] : showCheck;\r\n\r\n        let { status = \"browse\" } = getStore(\"props\");\r\n\r\n        //获取模板页签配置\r\n        let meta = getStore(\"meta\");\r\n\r\n        //最大化、激活页签、表格显示等页签级功能 状态存 主区域Store\r\n        let tableSwitch = this.mainStore.getStore(\"tableSwitch\");\r\n        let { activeCode, tableVisible, maxVisible, ListViewVisible } = tableSwitch;\r\n\r\n        if (isUndefined(tableVisible) && meta && meta[mainCode]) {\r\n            let { isunfold = true } = meta[mainCode];\r\n            tableVisible = isunfold;\r\n            tableSwitch.tableVisible = tableVisible;\r\n            this.mainStore.setStore(\"tableSwitch\", tableSwitch, false);\r\n        }\r\n\r\n        let { tabs = [], moreTabs, activeName } = this.getTabs(meta, activeCode);\r\n        // tabs 数目来设置样式 UE要求\r\n        const isSingleTab = tabs.length <= 1;\r\n\r\n        //let thiscode = this.getMainCode(meta, activeCode);\r\n        //let checkNum = tabsStore[thiscode].getStore('selectedIndex').size;\r\n        let checkNum = isArray(this.currentData) ? this.currentData.filter((e => e.selected === true)).length : 0;\r\n\r\n        return (\r\n            !this.isAllTabsHide && <div\r\n                className={classnames(\"cardTable-tabs\", {\r\n                    \"hide-cardTable\": !tableVisible,\r\n                    \"show-cardTable\": tableVisible,\r\n                    \"tabs-toggle-angle\": showToggleAngle,\r\n                })}\r\n                fieldid={getSysFieldid(\"tabs-area\")}\r\n            >\r\n                <TabHotKey\r\n                    tabs={tabs}\r\n                    activeKey={activeCode}\r\n                    wrapperId={\"js_cardTable_\" + mainCode}\r\n                    headerId={\"js_lightTabs_header_\" + mainCode}\r\n                    moduleId={mainCode}\r\n                />\r\n                <div\r\n                    className={classnames(\"tabs-area\", { \"single-tabs-area\": isSingleTab })}\r\n                    id={`js_lightTabs_header_${mainCode}`}\r\n                >\r\n                    {showToggleAngle && <i\r\n                        className=\"cardTable-tabs-angle\"\r\n                        onClick={this.tabsAngleToggle}\r\n                    >\r\n                        <Tooltip\r\n                            placement=\"top\"\r\n                            overlay={tableVisible ? langJson['table-tabs-close'] : langJson['table-tabs-expand']}\r\n                            delayHide={1}\r\n                            delayShow={1000}\r\n                        >\r\n                            <span\r\n                                className={classnames(\r\n                                    \"iconfont icon table-tabs-icon\",\r\n                                    {\r\n                                        \"icon-right\": !tableVisible,\r\n                                        \"icon-bottom\": tableVisible,\r\n                                    },\r\n                                )}\r\n                            />\r\n                        </Tooltip>\r\n                    </i>}\r\n                    <ul\r\n                        className={classnames(\"tabs-wrapper\", { \"single-tab\": tabs.length <= 1 })}\r\n                    >\r\n                        {tabs.map((item, index) => {\r\n                            // 以item.code找到mainCode，，在根据mainCode找到store\r\n                            let maincode = this.getMainCode(meta, item.code);\r\n                            let totalNum = 0;\r\n                            if (!tabsStore || !tabsStore[maincode]) {\r\n                                console.warn(\r\n                                    \"not find tabsStore\",\r\n                                    tabsStore,\r\n                                    mainCode,\r\n                                );\r\n                            } else if (showTotalNum) {\r\n                                totalNum = tabsStore[maincode].getViewData(\"filter\").length;\r\n                            }\r\n\r\n                            let showErrorIcon = this.getValidateFailed(maincode, item.code);\r\n                            let editIconFlag = !isSingleTab && showEditIcon && status === 'edit' && this.isAreaEditable(item.code, meta);\r\n\r\n                            return <li\r\n                                key={item.code}\r\n                                className={classnames(\"tabs-item\", {\r\n                                    \"single-tab\": isSingleTab,\r\n                                    \"active\": !isSingleTab && item.code === activeCode,\r\n                                    \"has-edit-icon\": editIconFlag,\r\n                                    \"has-error-icon\": showErrorIcon,\r\n                                })}\r\n                                onClick={this.tabChange.bind(\r\n                                    this,\r\n                                    item.code,\r\n                                )}\r\n                            >\r\n                                <ScrollElement name={item.code}>\r\n                                    {editIconFlag && <i className='icon iconfont icon-yebj edit-icon'></i>}\r\n                                    <a tabIndex={0}>\r\n                                        {item.name}{(showTotalNum && totalNum === 0 && initShowTotalNum) || (showTotalNum && totalNum !== 0) && <span>{'(' + totalNum + ')'}</span>}\r\n                                        <span className=\"active-line\" />\r\n                                    </a>\r\n                                    {showErrorIcon && <i className=\"iconfont icon-djgantanhao error-icon\"></i>}\r\n                                    {index !== tabs.length - 1 && <span className=\"item-tap\"></span>}\r\n                                </ScrollElement>\r\n                            </li>\r\n                        })}\r\n\r\n                        {showCheck && <li key={'selectedNum'} className=\"tabs-item-selected-num\">{showSelectedNum && <span >{langJson && langJson['table0034']}{checkNum}{langJson && langJson['table0035']}</span>}</li>}\r\n                        <div className=\"cardTable-head-left\">\r\n                            {typeof tableHeadLeft === \"function\" && tableHeadLeft()}\r\n                        </div>\r\n                        <li key={'tabsSpace'} className=\"tabs-item-space-super\"></li>\r\n                        <li key={'button'} className=\"tabs-item-button-area\">\r\n                            <div\r\n                                className={classnames(\"btns-area\", { \"hide-btns\": !tableVisible })}\r\n                            >\r\n                                <div className=\"cardTable-btns\">\r\n                                    {/*全部展开按钮*/}\r\n                                    {status === \"edit\" ||\r\n                                        (isFunction(hideSwitch) && !hideSwitch()) ||\r\n                                        (\r\n                                            <Tooltip\r\n                                                placement=\"top\"\r\n                                                overlay={ListViewVisible ? langJson['table-view-list'] : langJson['table-view-card']}\r\n                                                delayHide={1}\r\n                                                delayShow={1000}\r\n                                            >\r\n                                                <span\r\n                                                    className={classnames(\r\n                                                        \"icon iconfont head-icon\",\r\n                                                        {\r\n                                                            \"icon-shituqiehuan\": ListViewVisible,\r\n                                                            \"icon-shituliebiaoqiehuan\": !ListViewVisible,\r\n                                                        },\r\n                                                    )}\r\n                                                    onClick={() => {\r\n                                                        let { openListView } = this.mainStore;\r\n                                                        openListView(!ListViewVisible);\r\n                                                    }}\r\n                                                />\r\n                                            </Tooltip>\r\n                                        )}\r\n                                    {/*最大化按钮*/}\r\n                                    {!hideMaxBtn && (\r\n                                        <Tooltip\r\n                                            placement=\"top\"\r\n                                            overlay={maxVisible ? langJson['table-zoom-normal'] : langJson['table-zoom-max']}\r\n                                            delayHide={1}\r\n                                            delayShow={1000}\r\n                                        >\r\n                                            <span\r\n                                                className={classnames(\r\n                                                    \"icon iconfont head-icon\",\r\n                                                    {\r\n                                                        \"icon-zuixiaohua\": maxVisible,\r\n                                                        \"icon-zuidahua\": !maxVisible,\r\n                                                    },\r\n                                                )}\r\n                                                onClick={() => {\r\n                                                    let { openMaxView } = this.mainStore;\r\n                                                    openMaxView(!maxVisible);\r\n                                                }}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"cardTable-head\">\r\n                                    {typeof tableHead === \"function\" && tableHead()}\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    getColSettiongParam = activeCode => {\r\n        let { mainCode } = this.props;\r\n        let { getStore, getConfig } = this.currentStore;\r\n        let meta = getStore('meta');\r\n        if (meta && meta[mainCode]) {\r\n            let currentMeta = meta[mainCode]\r\n            let config = getConfig()\r\n            return {\r\n                appcode: currentMeta.appcode || pageTo.getAppCode(),\r\n                pagecode: currentMeta.pagecode || pageTo.getPageCode(),\r\n                code: currentMeta.templateCode || meta.code,\r\n                pageid: currentMeta.pageid || meta.pageid,\r\n                areaCode: mainCode,\r\n                areaId: currentMeta.oid,\r\n                noColSetClass: config.noColSetClass,\r\n                colSetCallback: config.colSetCallback,\r\n                tableType: 'cardtable',\r\n                tabName: activeCode,\r\n            }\r\n        } else { return {} }\r\n    }\r\n\r\n    updateColumnAfterSetting = (newColumn, areaCode) => {\r\n        let { setMeta, getStore, setStore } = this.currentStore;\r\n        let meta = getStore(\"meta\");\r\n        let key = getStore(\"key\");\r\n        if (newColumn.length && areaCode) {\r\n            let finalColumn = [...meta[areaCode].items];\r\n\r\n            let sortIndexArr = [];\r\n            let sortObjArr = [];\r\n            newColumn.map(newItem => {\r\n                meta[areaCode].items.map((oldItem, index) => {\r\n                    if (newItem.attrcode === oldItem.attrcode) {\r\n                        oldItem.width = newItem.width;\r\n                        oldItem.islock = newItem.islock;\r\n                        oldItem.visible = newItem.visible;\r\n                        sortIndexArr.push(index);\r\n                        sortObjArr.push(oldItem);\r\n                    }\r\n                });\r\n            });\r\n            sortIndexArr.sort((a, b) => a - b);\r\n            sortIndexArr.map((item, index) => {\r\n                finalColumn[item] = sortObjArr[index];\r\n            });\r\n            meta[areaCode].items = finalColumn;\r\n            setMeta(meta, areaCode)\r\n\r\n            setStore('key', (key + 1))\r\n        }\r\n    }\r\n\r\n    onBeforeEvent = async params => {\r\n        //当前激活页签主区域store和config\r\n        let currentModel = this.getCurrentModel();\r\n        this.currentStore = currentModel.store;\r\n        this.currentConfig = currentModel.config;\r\n\r\n        let {\r\n            onBeforeEvent,\r\n        } = this.currentConfig;\r\n        let {\r\n            getTrueRowIndex,\r\n            setTableProps,\r\n        } = this.currentStore;\r\n\r\n        let {\r\n            record,\r\n            rowKey,\r\n            rowKeyValue,\r\n            rowIndex,\r\n            attrcode,\r\n            column,\r\n            value = {},\r\n            validated,\r\n            event,\r\n            triggerType, // onClick || onFocus\r\n        } = params;\r\n\r\n        // 用于解决点击前赋值不上的问题\r\n        setTableProps(\"currentIndex\", getTrueRowIndex({ rowIndex: rowIndex }), false);\r\n        setTableProps(\r\n            \"currentInfo\",\r\n            { record, index: rowIndex },\r\n            false,\r\n        );\r\n\r\n        // 处理校验状态\r\n        if (validated === false) {\r\n            let name = this.currentStore.getStore(\"name\");\r\n            let activeCode = this.mainStore.getStore(['tableSwitch', 'activeCode']);\r\n            let validateFailed = this.mainStore.getCache(['validateFailed', name, activeCode]);\r\n\r\n            if (validateFailed && validateFailed[rowKeyValue]) {\r\n                let oldLen = Object.keys(validateFailed).length;\r\n                delete validateFailed[rowKeyValue][attrcode];\r\n\r\n                if (oldLen > 0 && Object.keys(validateFailed[rowKeyValue]).length === 0) {\r\n                    delete validateFailed[rowKeyValue];\r\n                    this.mainStore.refresh();\r\n                }\r\n            }\r\n        }\r\n\r\n        // 检验输入字符长度\r\n        if (\r\n            triggerType === \"onFocus\" &&\r\n            column.maxlength\r\n        ) {\r\n            event.target.isFlag = false;\r\n            event.target.addEventListener(\r\n                \"compositionstart\",\r\n                e => {\r\n                    e.target.isFlag = true;\r\n                },\r\n                false,\r\n            );\r\n            event.target.addEventListener(\r\n                \"compositionend\",\r\n                e => {\r\n                    e.target.isFlag = false;\r\n                    let flag = e.target.isFlag;\r\n                    let val = e.target.defaultValue;\r\n                    // if (!flag && val.length > item.maxlength) {\r\n                    //     // val = val.substring(0, count);\r\n                    //     val = val.substring(0, item.maxlength);\r\n                    //     rows[index].values[item.attrcode].value = val;\r\n                    //     toast({\r\n                    //         color: 'danger',\r\n                    //         title: `${json && json['table_tips']}`,\r\n                    //         // content: `${json && json['table_tips_content']}${item.maxlength / 2}${json && json['table_maxlength_unit']}`\r\n                    //         content: `${json && json['table_tips_content']}${item.maxlength}${json && json['table_maxlength_unit']}`\r\n                    //     });\r\n                    //     e.target && e.target.blur();\r\n                    // }\r\n                },\r\n                false,\r\n            );\r\n            // TODO this.setState({ table: this.state.table });\r\n        }\r\n        // 多语控件都不走这里\r\n        if (column.itemtype !== \"residtxt\") {\r\n            // onFocus 和value  用于批量更改   zhanghengh 18/6/29 先注释，以后可能有用\r\n            this.currentStore.setCache(\"oldBatchData\", {\r\n                // TODO  转换为过滤后的index\r\n                // 在onchange时缓存列数据的key 和value  用于批量更改   zhanghengh 18/6/29\r\n                batchChangeIndex: rowIndex,\r\n                batchChangeKey: column.attrcode,\r\n                batchChangeValue: value.value,\r\n                batchChangeDisplay: value.display,\r\n                // batchChangeValue: isMulti ? theValue : theValue.value,\r\n                // batchChangeDisplay: isMulti ? null : theValue.display\r\n            });\r\n        } else {\r\n            // 这里批改多语存值可能没用，之后在看一下，先留着\r\n            // 多语批改\r\n            // 这里是多语文本的编辑显示逻辑\r\n            // attrcode字段对应的value是主语言\r\n            // 显示规则是有登陆语言显示登陆语言，登陆语言通过getLangCode获得，没有登陆语言显示主语言，attrcode字段对应的value，主语言语言在没有，就什么也不显示\r\n            // index为1比较特殊 取value[attrcode]\r\n            let loginCode = getLangCode(),\r\n                loginIndex = column.languageMeta.find(e => e.languageCode === loginCode)?.index || '',\r\n                loginValue = value[attrcode + loginIndex] || value[attrcode]|| value;\r\n\r\n            this.currentStore.setCache(\"oldBatchData\", {\r\n                batchChangeIndex: rowIndex,\r\n                batchChangeKey: column.attrcode,\r\n                batchChangeValue: loginValue.value,\r\n                batchChangeDisplay: null,\r\n            });\r\n        }\r\n\r\n        // 有一些操作要放在这里处理 设置行状态等等\r\n        if (isFunction(onBeforeEvent)) {\r\n            return (\r\n                (await onBeforeEvent({\r\n                    ...params,\r\n                    moduleId: this.currentMainCode,\r\n                })) !== false\r\n            );\r\n        }\r\n        return true;\r\n    };\r\n\r\n    onAfterEvent = async params => {\r\n        //当前激活页签主区域store和config\r\n        let currentModel = this.getCurrentModel();\r\n        this.currentStore = currentModel.store;\r\n        this.currentConfig = currentModel.config;\r\n\r\n        let {\r\n            autoAddRow = {},\r\n            onAfterEvent,\r\n        } = this.currentConfig;\r\n        let {\r\n            getTableProps,\r\n            setCellValue,\r\n        } = this.currentStore;\r\n\r\n        let {\r\n            record,\r\n            rowKey,\r\n            rowKeyValue,\r\n            rowIndex,\r\n            attrcode,\r\n            column,\r\n            value = {},\r\n            oldValue = {},\r\n            componentValue,\r\n            event,\r\n            triggerType = \"onChange\", // onChange || onBlur\r\n            isTriggerModal = false,\r\n        } = params;\r\n\r\n        let activeCode = this.mainStore.getStore(['tableSwitch', 'activeCode']);\r\n\r\n        // 多语 获取当前的code\r\n        if (\r\n            column.itemtype === \"residtxt\" &&\r\n            isObject(componentValue)\r\n        ) {\r\n            for (let key in componentValue) {\r\n                if (componentValue[key].current) {\r\n                    // value.value = componentValue[key];\r\n                    // oldValue.value = store.getRowOldValue(record[rowKey], key);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 新旧值\r\n        oldValue.value =\r\n            oldValue.value ||\r\n            this.currentStore.getRowOldValue(\r\n                record[rowKey],\r\n                attrcode,\r\n            );\r\n\r\n        if (triggerType === \"onBlur\") {\r\n            /*\r\n            * onBlur编辑后 和 切换控件状态\r\n            * 1、input类型    line   编辑后 + 切状态\r\n            *                model  编辑后\r\n            * 2、uninput类型  line   切状态\r\n            *                model  无编辑后  无切状态\r\n            */\r\n\r\n            // 这一段可以考虑去除  输入 类型\r\n            if (isString(value.value)) {\r\n                value.value = value.value.trim();\r\n            }\r\n\r\n            // 当数值类型只输入一个'-'的时候就将它赋值成0\r\n            if (\r\n                column.itemtype === \"number\" &&\r\n                value.value === \"-\"\r\n            ) {\r\n                value.value = 0;\r\n                this.currentStore.setCellValue({\r\n                    rowKeyValue,\r\n                    attrcode,\r\n                    value,\r\n                });\r\n            }\r\n\r\n            // 侧拉里面的状态\r\n            if (\r\n                column.itemtype === \"select\" &&\r\n                isTriggerModal\r\n            ) {\r\n                this.currentStore.setCellProps(\r\n                    rowKeyValue,\r\n                    attrcode,\r\n                    { open: false },\r\n                );\r\n            }\r\n\r\n            if (column.itemtype === \"residtxt\") {\r\n                if (isTriggerModal) {\r\n                    // 当侧拉的情况下\r\n                    // 多语  登陆语言值 赋值给主语言\r\n                    // tableModeldata.values[item.attrcode] = {\r\n                    //     ...tableModeldata.values[item.attrcode],\r\n                    //     value: val[item.attrcode].value\r\n                    // };\r\n                } else {\r\n                    // 当表体的情况下\r\n                }\r\n                // 多语  登陆语言值 赋值给主语言\r\n                // 主语言没值时，取登录语言的值\r\n                if (!record.values[attrcode]?.value) {\r\n                    let loginCode = getLangCode(),\r\n                        loginIndex = column.languageMeta.find(e => e.languageCode === loginCode)?.index || '',\r\n                        loginValue = componentValue[attrcode + loginIndex] || componentValue[attrcode];\r\n                    setCellValue({ rowKey, rowKeyValue, rowIndex, attrcode, value: loginValue });\r\n                }\r\n            }\r\n\r\n            // 多语控件都不走这里\r\n            if (column.itemtype !== \"residtxt\") {\r\n                // 在onblur时缓存列数据的key 和value  用于批量更改   zhanghengh 18/6/29\r\n                // pageScope.batchData[moduleId] = {\r\n                //     batchChangeIndex: outputIndex,\r\n                //     batchChangeKey: item.attrcode,\r\n                //     batchChangeValue: record.values[item.attrcode] ? record.values[item.attrcode].value : '',\r\n                //     batchChangeDisplay: record.values[item.attrcode] ? record.values[item.attrcode].display : ''\r\n                // };\r\n            } else {\r\n                // 多语批改\r\n                // 这里是多语文本的编辑显示逻辑\r\n                // attrcode字段对应的value是主语言\r\n                // 显示规则是有登陆语言显示登陆语言，登陆语言通过getLangCode获得，没有登陆语言显示主语言，attrcode字段对应的value，主语言语言在没有，就什么也不显示\r\n                // const cellData = record.values[item.attrcode];\r\n                // let value = isObj(cellData) ? (cellData.value ? cellData.value : null) : null;\r\n                // const LangCode = getLangCode();\r\n                // const loginLang = item.languageMeta.filter(i => i.languageCode == LangCode);\r\n                // if (loginLang.length > 0) {\r\n                //     loginLang[0].index === '1' ? (loginLang[0].index = '') : '';\r\n                //     if (\r\n                //         record.values[item.attrcode + loginLang[0].index] &&\r\n                //         record.values[item.attrcode + loginLang[0].index].value\r\n                //     ) {\r\n                //         value = record.values[item.attrcode + loginLang[0].index].value;\r\n                //     }\r\n                // }\r\n                // pageScope.batchData[moduleId] = {\r\n                //     batchChangeIndex: outputIndex,\r\n                //     batchChangeKey: item.attrcode,\r\n                //     batchChangeValue: value,\r\n                //     batchChangeDisplay: null\r\n                // };\r\n            }\r\n        }\r\n\r\n        // 设置状态  放在  onAfterEvent 事件之前 避免onAfterEvent 修改record报错\r\n        this.currentStore.setCellProps(\r\n            rowKeyValue,\r\n            attrcode,\r\n            { isEdit: false },\r\n        );\r\n\r\n        // 有一些操作要放在这里处理 设置行状态等等\r\n\r\n        let next =\r\n            isFunction(onAfterEvent) &&\r\n            onAfterEvent(\r\n                {\r\n                    ...params,\r\n                    moduleId: this.currentMainCode,\r\n                    activeCode: activeCode,\r\n                },\r\n                this.currentStore,\r\n            ) !== false;\r\n\r\n        // 多语 获取当前的code\r\n        if (\r\n            column.itemtype === \"residtxt\" &&\r\n            isObject(componentValue)\r\n        ) {\r\n            for (let key in componentValue) {\r\n                this.currentStore.saveRowOldValue(\r\n                    record[rowKey],\r\n                    key,\r\n                    componentValue[key].value,\r\n                );\r\n            }\r\n        } else {\r\n            this.currentStore.saveRowOldValue(\r\n                record[rowKey],\r\n                attrcode,\r\n                value.value,\r\n            );\r\n        }\r\n\r\n        if (!next) {\r\n            console.log(\"not next to run\");\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * 自动增行\r\n         * 增一行的条件：\r\n         * 1、最后一行\r\n         * 2、isAddRow 为true\r\n         * 3、当前单元格值不为空\r\n         */\r\n\r\n        let viewLen = this.currentStore.getVisibleRows(\r\n            false,\r\n            true,\r\n        ).length;\r\n        let isSwitch_browseDisabled =\r\n            column.itemtype === \"switch_browse\" &&\r\n            column.disabled; // 开关且不可编辑\r\n        let validValue = column.itemtype === 'residtxt' ? value : value.value;\r\n        validValue = column.itemtype === 'refer' ? componentValue : value;\r\n        const isEmpty = isEmptyValue(validValue, column.itemtype);\r\n        const tableStatus = getTableProps('status');\r\n\r\n        if (\r\n            viewLen == rowIndex + 1 &&\r\n            autoAddRow.enabled &&\r\n            !isSwitch_browseDisabled &&\r\n            !isEmpty &&\r\n            tableStatus === \"edit\"\r\n        ) {\r\n            // 添加自动增行后的回调\r\n            this.currentStore.addTableRow(\r\n                undefined,\r\n                autoAddRow.defaultValue,\r\n                true,\r\n                {\r\n                    callback: newRow => {\r\n                        autoAddRow.callback && autoAddRow.callback(this.currentMainCode, newRow);\r\n                    },\r\n                    isAutoAddRow: true,\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    createContent = () => {\r\n        let {\r\n            mainCode,\r\n            expandedRowKeys,\r\n            expandedRowRender,\r\n            langJson,\r\n            renderItems,\r\n            getHotKeyConfig,\r\n            onCellHyperlinkTo,\r\n            isHorizontal,\r\n            isGrandson,\r\n        } = this.props;\r\n        //当前激活页签主区域store和config\r\n        let currentModel = this.getCurrentModel();\r\n        this.currentStore = currentModel.store;\r\n        this.currentConfig = currentModel.config;\r\n\r\n        let {\r\n            fieldid,\r\n            autoAddRow = {},\r\n            onChange,\r\n            onBeforeEvent,\r\n            onAfterEvent,\r\n            onBodyScroll,\r\n            lazyload = true,\r\n            onRowClick,\r\n            onRowDoubleClick,\r\n            rowClassName,\r\n            cellClassName,\r\n            hideBrowseCheckbox,\r\n            onBatchChange,\r\n            onBatchSelected,\r\n            high_selectable = {},\r\n            high_filter = {},\r\n            handleFilterCallBack,\r\n            handleResetCallBack,\r\n            hideTableTabs = false,\r\n            onCellKeyDown,\r\n            multipleRowCell,\r\n            cancelCustomRightMenu = false, showWidthAndHeightConfig = true,\r\n            addBlankCol,\r\n            sort,\r\n            otherAreaHeight, adaptionHeight, watchSeachHeight, height,\r\n            rightMenuClick,\r\n            customTabs = {},\r\n            focusIndex,\r\n            foldCacheId, //对于没有appcode，pagecode..的表格，做折行缓存的标志\r\n            hideRightMenu = false,\r\n            ...othersConfig\r\n        } = this.currentConfig;\r\n        let {\r\n            getTableProps,\r\n            setCellValue,\r\n            getCellValue,\r\n            getCellProps,\r\n            getStore,\r\n            setStore,\r\n            getData,\r\n            getCheckInfo,\r\n            hasSelected,\r\n            getTrueRowIndex,\r\n            setActiveCell, getActiveCell,\r\n            setTableProps,\r\n            setSelectedIndex,\r\n        } = this.currentStore;\r\n\r\n        if (hideRightMenu) {\r\n            cancelCustomRightMenu = true;\r\n            high_selectable.enable = false;\r\n            showWidthAndHeightConfig = false;\r\n        }\r\n        let tableSwitch = this.mainStore.getStore(\"tableSwitch\");\r\n        let { activeCode, tableVisible, maxVisible, ListViewVisible } = tableSwitch;\r\n\r\n        let meta = getStore('meta');\r\n        if (isUndefined(tableVisible) && meta && meta[mainCode]) {\r\n            let { isunfold = true } = meta[mainCode];\r\n            tableVisible = isunfold;\r\n            tableSwitch.tableVisible = tableVisible;\r\n            this.mainStore.setStore(\"tableSwitch\", tableSwitch, false);\r\n        }\r\n        let { status = \"browse\", rowKey } = getStore(\"props\");\r\n\r\n        this.currentData = getData([ROW_STATUS.delete, ROW_STATUS.filter]);\r\n        // arrcolumns\r\n        let arrColumns = this.currentStore.getArrayMeta(activeCode);\r\n        let colSettingParam = this.getColSettiongParam(activeCode)\r\n        let isTotal = this.currentConfig.showTotal || getMetaIsTotal(this.currentStore.getArrayMeta(activeCode, false));\r\n        let extraAreaHeight = isNumber(otherAreaHeight) && !Number.isNaN(otherAreaHeight) ? otherAreaHeight : 0;\r\n        let adaption = maxVisible || !!(isUndefined(height) && !maxVisible && isHorizontal && adaptionHeight);\r\n        let tableMaxHeight = !maxVisible && this.currentConfig.height ? this.currentConfig.height : 300;//cardtable默认高度\r\n        let tableHight = !maxVisible && this.currentConfig.height ? { minHeight: this.currentConfig.height } : { minHeight: '60px' }; //cardtable设置自定义高度的\r\n        let showTableArea = tableVisible;\r\n        if (status === 'browse') {\r\n            showTableArea = showTableArea && !ListViewVisible;\r\n        }\r\n        //没有表格，不能全展开，会报错\r\n        if (!this.table) { ListViewVisible = false }\r\n\r\n        // focusInex\r\n        focusIndex = focusIndex || getTableProps('focusIndex');\r\n\r\n        // 默认开启 框选 high_selectable.enable\r\n        //high_selectable.enable = high_selectable.enable || true;\r\n\r\n        // 默认启用快捷键选中 只有快捷键选中行\r\n        if (isUndefined(high_selectable.enable)) {\r\n            high_selectable.enable = true;\r\n            // high_selectable.disabled = isUndefined(high_selectable.disabled) ? 'slide' :\r\n            //     (isArray(high_selectable.disabled) ? high_selectable.disabled : [high_selectable.disabled]);\r\n            // high_selectable.single = high_selectable.single || false;\r\n            // // 不开启\r\n            // high_selectable.selectCell = isUndefined(high_selectable.selectCell) ? false : high_selectable.selectCell;\r\n        }\r\n        // console.log(high_selectable);\r\n        // 是否框选(批选)\r\n        const isBatchSelect = isUndefined(high_selectable.selectCell) ? true : high_selectable.selectCell;\r\n        const haveMeta = this.getCurrentMeta(activeCode).length ? true : false\r\n        return (\r\n            <div\r\n                className={classnames(\"cardTable-wrapper\", { \"cardTable-close\": !tableVisible })}\r\n                id={\"js_cardTable_\" + mainCode}\r\n                fieldid={getSysFieldid(\r\n                    `${fieldid || mainCode}_table-area`,\r\n                )}\r\n                data-uuid={this.uuid}\r\n            >\r\n                {/*页签区域*/}\r\n                {!hideTableTabs && this.createTableTabs()}\r\n\r\n                {\r\n                    isFunction(customTabs[activeCode]) ?\r\n                        /*支持自定义页签内容*/\r\n                        customTabs[activeCode](activeCode) :\r\n                        /*表格区域  hideTableTabs 隐藏是要显示表体内容  不然表格不展示了*/\r\n                        (hideTableTabs || !this.isAllTabsHide) && <div\r\n                            className=\"cardTable-table-area\"\r\n                            ref={dom => {\r\n                                this.table = ReactDOM.findDOMNode(dom);\r\n                            }}\r\n                        >\r\n                            {showTableArea && haveMeta && (\r\n                                <MetaTable\r\n                                    ref={dom => {\r\n                                        this.tableDom = ReactDOM.findDOMNode(dom);\r\n                                    }}\r\n                                    focusIndex={focusIndex}\r\n                                    fieldid={fieldid}\r\n                                    onBodyScroll={onBodyScroll}\r\n                                    lazyload={lazyload}\r\n                                    columns={this.getCurrentMeta(activeCode)}\r\n                                    onCellHyperlinkTo={(record, attrcode, value) => {\r\n                                        onCellHyperlinkTo &&\r\n                                            onCellHyperlinkTo(\r\n                                                record,\r\n                                                attrcode,\r\n                                                value,\r\n                                                this.currentMainCode,\r\n                                            );\r\n                                    }}\r\n                                    scroll={{\r\n                                        x: true,\r\n                                        y: tableMaxHeight,\r\n                                    }}\r\n                                    // 表格body高度设置\r\n                                    bodyStyle={{ ...tableHight }}\r\n                                    langJson={langJson} // 给单元格用\r\n                                    data={this.currentData}\r\n                                    name={this.currentMainCode}\r\n                                    rowKey={rowKey}\r\n                                    status={status}\r\n                                    isTotal={isTotal}\r\n                                    renderItems={renderItems[this.currentMainCode]}\r\n                                    getHotKeyConfig={getHotKeyConfig}\r\n                                    sortBack={sort}\r\n                                    sortChange={(sortParam, sortData) =>\r\n                                        this.sortChange(sortParam, sortData)\r\n                                    } //排序的回调\r\n                                    setCellValue={params => {\r\n                                        let {\r\n                                            rowKey,\r\n                                            rowKeyValue,\r\n                                            rowIndex,\r\n                                            attrcode,\r\n                                            column,\r\n                                            value = {},\r\n                                            triggerType, // onChange || onSelect ...\r\n                                        } = params;\r\n\r\n                                        // 因为timepicker的value特殊，所以特殊转换一下start，有问题在看一下\r\n                                        if (column.itemtype === \"timepicker\") {\r\n                                            if (value.value && value.value.format) {\r\n                                                value.value = value.value.format(\r\n                                                    \"hh:mm:ss\",\r\n                                                );\r\n                                            }\r\n                                        }\r\n\r\n                                        // 适配多语 //这是最新适配的多语  也可以放在 setCellValue 里  TODO\r\n                                        setCellValue({\r\n                                            rowKey,\r\n                                            rowKeyValue,\r\n                                            rowIndex,\r\n                                            attrcode,\r\n                                            value,\r\n                                            callback: (props, value, rowKeyValue, attrcode) => {\r\n                                                if (props && value.validated === false && (\r\n                                                    (isWrong(props.value) && !isWrong(value.value)) ||\r\n                                                    (isWrong(props.display) && !isWrong(props.display))\r\n                                                )\r\n                                                ) {\r\n                                                    delete value.validated;\r\n                                                    // activeCode\r\n                                                    // name\r\n                                                    let name = this.currentStore.getStore(\"name\");\r\n                                                    let activeCode = this.mainStore.getStore(['tableSwitch', 'activeCode']);\r\n                                                    let validateFailed = this.mainStore.getCache(['validateFailed', name, activeCode]);\r\n\r\n                                                    if (validateFailed && validateFailed[rowKeyValue]) {\r\n                                                        let oldLen = Object.keys(validateFailed).length;\r\n                                                        delete validateFailed[rowKeyValue][attrcode];\r\n\r\n                                                        if (oldLen > 0 && Object.keys(validateFailed[rowKeyValue]).length === 0) {\r\n                                                            delete validateFailed[rowKeyValue];\r\n                                                            this.mainStore.refresh();\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            },\r\n                                        }); // 这里就是onChange 和 onBlur 的集合\r\n\r\n                                        let next =\r\n                                            isFunction(onChange) &&\r\n                                            onChange(params) !== false;\r\n                                        if (!next) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        // 数值类型的实时校验 TODO 需要找轩轩进行适配\r\n                                        // let flag = isInputType\r\n                                        //     ? item.itemtype !== 'number'\r\n                                        //         ? foolValue.target\r\n                                        //             ? foolValue.target.isFlag\r\n                                        //             : false\r\n                                        //         : false\r\n                                        //     : false;\r\n                                        // if (!flag && item.maxlength && isInputType && valueChange && foolValue) {\r\n\r\n                                        //     if (!flag && valueChange.length > item.maxlength) {\r\n                                        //         valueChange = rows[index].values[item.attrcode].value;\r\n                                        //         toast({\r\n                                        //             color: 'danger',\r\n                                        //             title: `${json && json['table_tips']}`,\r\n                                        //             // content: `${json && json['table_tips_content']}${item.maxlength / 2}${json && json['table_maxlength_unit']}`\r\n                                        //             content: `${json && json['table_tips_content']}${item.maxlength}${json && json['table_maxlength_unit']}`\r\n                                        //         });\r\n                                        //         foolValue.target && foolValue.target.blur();\r\n                                        //     }\r\n\r\n                                        //     rows[index].values[item.attrcode].value = valueChange;\r\n                                        // }\r\n\r\n                                        // 老版的批改 TODO  分为多语和非多语两种情况\r\n                                        // 处理单元格变化的数据zhnghengh\r\n                                        // let theValue = handleChangeData(item.itemtype === 'refer', foolValue, valueChange, item);\r\n                                        if (column.itemtype !== \"residtxt\") {\r\n                                            let isMulti = column.isMultiSelectedEnabled;\r\n                                            this.currentStore.setCache(\"oldBatchData\", {\r\n                                                // TODO  转换为过滤后的index\r\n                                                // 在onchange时缓存列数据的key 和value  用于批量更改   zhanghengh 18/6/29\r\n                                                batchChangeIndex: rowIndex,\r\n                                                batchChangeKey: column.attrcode,\r\n                                                batchChangeValue: value.value,\r\n                                                batchChangeDisplay: value.display,\r\n                                                // batchChangeValue: isMulti ? theValue : theValue.value,\r\n                                                // batchChangeDisplay: isMulti ? null : theValue.display\r\n                                            });\r\n                                        } else {\r\n                                            // 多语批改\r\n                                            this.currentStore.setCache(\"oldBatchData\", {\r\n                                                batchChangeIndex: rowIndex,\r\n                                                batchChangeKey: column.attrcode,\r\n                                                batchChangeValue: value.value,\r\n                                                batchChangeDisplay: null,\r\n                                            });\r\n                                        }\r\n\r\n                                        // 编辑关联项  放在 onAfterEvent 中\r\n\r\n                                        // 把status置为1，标识修改     状态不为1的不动 (比如用户自己set但是状态为2的)\r\n                                        let rowStatus = this.currentStore.getRowProps(\r\n                                            { rowKeyValue },\r\n                                            \"status\",\r\n                                        );\r\n                                        if (rowStatus == ROW_STATUS.origin) {\r\n                                            this.currentStore.setRowProps(\r\n                                                { rowKeyValue },\r\n                                                { status: ROW_STATUS.edit },\r\n                                            );\r\n                                        }\r\n                                    }}\r\n                                    getCellProps={getCellProps}\r\n                                    getCellValue={getCellValue}\r\n                                    tableId={this.currentMainCode}\r\n                                    store={this.currentStore}\r\n                                    expandedRowKeys={expandedRowKeys || []}\r\n                                    expandedRowRender={expandedRowRender}\r\n                                    //复选框\r\n                                    checkInfo={getCheckInfo()}\r\n                                    onAllCheckChange={this.onAllCheckChange}\r\n                                    onCheckChange={(record, index) => this.onCheckChange(record, index)}\r\n                                    hasSelected={({\r\n                                        rowKey,\r\n                                        rowKeyValue,\r\n                                        rowIndex,\r\n                                    }) => {\r\n                                        return hasSelected(rowKeyValue);\r\n                                    }}\r\n                                    setSelectedIndex={(\r\n                                        { record, rowKey, rowIndex },\r\n                                        e,\r\n                                    ) => {\r\n                                        // 为了避免和新开发的行框选点选区域选事件冲突\r\n                                        if (\r\n                                            high_selectable &&\r\n                                            high_selectable.enable &&\r\n                                            e &&\r\n                                            (e.ctrlKey || e.shiftKey || e.metaKey)\r\n                                        ) {\r\n                                            return;\r\n                                        }\r\n                                        let rowKeyValue = record[rowKey];\r\n                                        let values = record.values || record;\r\n                                        // 错误行禁用\r\n                                        if (values && values.saga_status && values.saga_status.value === '1') {\r\n                                            return;\r\n                                        }\r\n                                        //点击行即勾选复选框\r\n                                        if (status !== 'edit' && (isUndefined(hideBrowseCheckbox)\r\n                                            ? this.currentConfig.showCheck\r\n                                            : status === \"browse\"\r\n                                                ? !hideBrowseCheckbox[activeCode]\r\n                                                : this.currentConfig.showCheck) && !record.disabled) {\r\n                                            this.onCheckChange(record, rowIndex, true);\r\n                                        } else {\r\n                                            let isSelected = hasSelected(rowKeyValue);\r\n                                            !isSelected && setSelectedIndex([], 'clear');\r\n                                            !isSelected && setSelectedIndex([{ rowKey, rowKeyValue, rowIndex, pattern: 'add' }]);\r\n                                        }\r\n                                    }}\r\n                                    //业务事件\r\n                                    onCellKeyDown={(record, index, attrcode, column, e) => {\r\n                                        onCellKeyDown &&\r\n                                            onCellKeyDown(\r\n                                                this.currentMainCode,\r\n                                                record,\r\n                                                index,\r\n                                                attrcode,\r\n                                                column,\r\n                                                e,\r\n                                            );\r\n                                    }}\r\n                                    onBeforeEvent={this.onBeforeEvent}\r\n                                    onAfterEvent={this.onAfterEvent}\r\n                                    onRowClick={(record, index, e) => {\r\n                                        // 为了避免和新开发的行框选点选区域选事件冲突\r\n                                        if (\r\n                                            high_selectable &&\r\n                                            high_selectable.enable &&\r\n                                            e &&\r\n                                            (e.ctrlKey || e.shiftKey || e.metaKey)\r\n                                        ) {\r\n                                            return;\r\n                                        }\r\n                                        // 错误行禁用\r\n                                        let values = record.values || record;\r\n                                        if (\r\n                                            !values ||\r\n                                            !values.saga_status ||\r\n                                            values.saga_status.value !== \"1\"\r\n                                        ) {\r\n                                            setTableProps(\"currentIndex\", getTrueRowIndex({ rowIndex: index }), false);\r\n                                            setTableProps(\r\n                                                \"currentInfo\",\r\n                                                { record, index },\r\n                                                false,\r\n                                            );\r\n                                        }\r\n                                        isFunction(onRowClick) &&\r\n                                            onRowClick(\r\n                                                this.currentMainCode,\r\n                                                record,\r\n                                                index,\r\n                                                e,\r\n                                            );\r\n                                    }}\r\n                                    onRowDoubleClick={(record, index, e) => {\r\n                                        // 错误行禁用\r\n                                        let values = record.values || record;\r\n                                        if (\r\n                                            !values ||\r\n                                            !values.saga_status ||\r\n                                            values.saga_status.value !== \"1\"\r\n                                        ) {\r\n                                            setTableProps(\r\n                                                \"currentIndex\",\r\n                                                getTrueRowIndex({ rowIndex: index }),\r\n                                                false,\r\n                                            );\r\n                                            setTableProps(\r\n                                                \"currentInfo\",\r\n                                                { record, index },\r\n                                                false,\r\n                                            );\r\n                                        }\r\n                                        isFunction(onRowDoubleClick) &&\r\n                                            onRowDoubleClick(record, index, e);\r\n                                    }}\r\n                                    rowClassName={(record, current) => {\r\n                                        let currentCls = [];\r\n                                        if (isArray(rowClassName)) {\r\n                                            currentCls = rowClassName.filter(item => {\r\n                                                if (!isArray(item.index)) {\r\n                                                    item.index = [item.index];\r\n                                                }\r\n                                                return item.index.includes(current);\r\n                                            });\r\n                                            rowClassName = currentCls.reduce(\r\n                                                (total, item) => {\r\n                                                    return total + \" \" + item.className;\r\n                                                },\r\n                                                \"\",\r\n                                            );\r\n                                        }\r\n\r\n                                        // console.log(currentCls);\r\n                                        return isFunction(rowClassName)\r\n                                            ? rowClassName(record, current)\r\n                                            : rowClassName;\r\n                                    }}\r\n                                    cellClassName={({ record, rowIndex, attrcode }) => {\r\n                                        return (\r\n                                            isFunction(cellClassName) &&\r\n                                            cellClassName(record, rowIndex, attrcode)\r\n                                        );\r\n                                    }}\r\n                                    checkColConfig={{\r\n                                        showCheck: isUndefined(hideBrowseCheckbox)\r\n                                            ? this.currentConfig.showCheck\r\n                                            : status === \"browse\"\r\n                                                ? !hideBrowseCheckbox[activeCode]\r\n                                                : this.currentConfig.showCheck,\r\n                                        langJson: this.props.langJson,\r\n                                    }}\r\n                                    indexColConfig={{ showIndex: this.currentConfig.showIndex, langJson: this.props.langJson }}\r\n                                    totalConfig={{\r\n                                        showTotal: this.currentConfig.showTotal,\r\n                                        noTotalRows: this.currentConfig.noTotalRows,\r\n                                        noTotalCol: this.currentConfig.noTotalCol,\r\n                                        allowTotalRows: this.currentConfig\r\n                                            .allowTotalRows,\r\n                                        numberPd: 7,\r\n                                    }}\r\n                                    onCellMouseDown={(record, rowIndex, attrcode, column) => {\r\n                                        let booleanType = ['switch', 'checkbox_switch']\r\n                                        if (status === 'edit' && booleanType.includes(attrcode)) {\r\n                                            let params = { column, rowIndex, attrcode }\r\n                                            setActiveCell(params)\r\n                                        }\r\n                                    }}\r\n                                    excelConfig={{\r\n                                        tableId: this.currentMainCode,\r\n                                        onBatchChange: this.currentConfig.onBatchChange,\r\n                                        langJson: this.props.langJson,\r\n                                    }}\r\n                                    high_selectable={{\r\n                                        store: this.currentStore,\r\n                                        onSelect: (\r\n                                            activedCells = {},\r\n                                            activeSpecialCells = [],\r\n                                            hotkey,\r\n                                            { current, isBatch },\r\n                                        ) => {\r\n                                            // console.log(activedCells, hotkey, current);\r\n                                            let pervActivedCells = this.currentStore.getCache('activedCells') || {};\r\n\r\n                                            for (let rowKeyValue in activedCells) {\r\n                                                pervActivedCells[rowKeyValue] = pervActivedCells[rowKeyValue] || [];\r\n                                                for (let attrcode of activedCells[\r\n                                                    rowKeyValue\r\n                                                ]) {\r\n                                                    pervActivedCells[rowKeyValue].push(attrcode);\r\n                                                    isBatchSelect && this.currentStore.setCellProps(\r\n                                                        rowKeyValue,\r\n                                                        attrcode,\r\n                                                        {\r\n                                                            actived: true,\r\n                                                            leftLine: false,\r\n                                                            rightLine: false,\r\n                                                            topLine: false,\r\n                                                            bottomLine: false,\r\n                                                        },\r\n                                                        false,\r\n                                                    );\r\n                                                }\r\n                                            }\r\n\r\n                                            // 重新赋值\r\n                                            activedCells = pervActivedCells;\r\n\r\n                                            if (isBatch) {\r\n                                                let rows = [];\r\n                                                for (let rowKeyValue in activedCells) {\r\n                                                    // TODO\r\n                                                    rows.push(\r\n                                                        getStore(\"data\").query(rowKeyValue),\r\n                                                    );\r\n                                                }\r\n                                                if (onBatchSelected) {\r\n                                                    this.onBatchSelected(rows, hotkey)\r\n                                                } else {\r\n                                                    setSelectedIndex([], 'clear', false);\r\n                                                    rows.forEach(row => {\r\n                                                        let rowKeyValue = row[rowKey];\r\n                                                        let values = row.values || row,\r\n                                                            isSagaStatus = values && values.saga_status && values.saga_status.value === '1';\r\n                                                        // 错误行禁用\r\n                                                        if (isSagaStatus && row.disabled) {\r\n                                                            return;\r\n                                                        }\r\n\r\n                                                        let isSelected = hasSelected(rowKeyValue);\r\n\r\n                                                        !isSelected && setSelectedIndex([{ rowKey, rowKeyValue, pattern: 'add' }], 'add', false);\r\n                                                    });\r\n                                                }\r\n                                            }\r\n\r\n                                            hotkey === \"down\" &&\r\n                                                current &&\r\n                                                current.rowKeyValue &&\r\n                                                status === \"edit\" && \r\n                                                this.currentStore.setCellProps(\r\n                                                    current.rowKeyValue,\r\n                                                    current.attrcode,\r\n                                                    { showDrag: true },\r\n                                                    false,\r\n                                                );\r\n\r\n                                            // 缓存已选\r\n                                            this.currentStore.setCache(\r\n                                                \"activedCells\",\r\n                                                activedCells,\r\n                                            );\r\n                                            this.currentStore.setCache(\r\n                                                \"activedCell\",\r\n                                                current,\r\n                                            );\r\n\r\n                                            if (!isBatchSelect) {\r\n                                                this.currentStore.refresh();\r\n                                                return;\r\n                                            }\r\n                                            // 选中表头\r\n                                            let oldActiveSpecialCells = this.currentStore.getCache('activeSpecialCells') || [];\r\n                                            if (activeSpecialCells.length > 0 || (activeSpecialCells.length === 0 && oldActiveSpecialCells.length !== 0)) {\r\n                                                oldActiveSpecialCells.forEach(item => {\r\n                                                    // 不能用actived 会有冲突\r\n                                                    this.currentStore.setColumn(activeCode, { [item.attrcode]: { unitActive: false } }, false);\r\n                                                });\r\n                                                activeSpecialCells.forEach(item => {\r\n                                                    // 不能用actived 会有冲突\r\n                                                    this.currentStore.setColumn(activeCode, { [item.attrcode]: { unitActive: true } }, false);\r\n                                                });\r\n                                                this.currentStore.setCache('activeSpecialCells', activeSpecialCells);\r\n                                            }\r\n\r\n                                            // 修正边框\r\n                                            if (activedCells || activeSpecialCells) {\r\n                                                let arrayMeta = this.currentStore.getArrayMeta(activeCode, true),\r\n                                                    arrayMetaLen = arrayMeta.length;\r\n                                                let viewData = this.currentStore.getViewData('filter');\r\n                                                let linkObjMeta = arrayMeta.reduce((result, item, i, arr) => {\r\n                                                    let next = arr[i + 1] || {};\r\n                                                    let prev = arr[i - 1] || {};\r\n                                                    if (item.visible) {\r\n                                                        result[item.attrcode] = {\r\n                                                            prev: prev.attrcode,\r\n                                                            current: item.attrcode,\r\n                                                            next: next.attrcode,\r\n                                                        }\r\n                                                    }\r\n                                                    return result;\r\n                                                }, {});\r\n\r\n                                                viewData.forEach((row, i) => {\r\n                                                    let values = row.values;\r\n                                                    let prevRowValues = (viewData[i - 1] || {}).values || {};\r\n                                                    let nextRowValues = (viewData[i + 1] || {}).values || {};\r\n\r\n                                                    for (let attrcode in values) {\r\n                                                        let cell = values[attrcode];\r\n                                                        if (cell['actived']) {\r\n                                                            let prevCol = linkObjMeta[attrcode] && linkObjMeta[attrcode].prev;\r\n                                                            let nextCol = linkObjMeta[attrcode] && linkObjMeta[attrcode].next;\r\n\r\n                                                            cell['leftLine'] = !prevCol || !values[prevCol] || !values[prevCol]['actived'];\r\n\r\n                                                            cell['rightLine'] = !nextCol || !values[nextCol] || !values[nextCol]['actived'];\r\n\r\n                                                            cell['topLine'] = prevRowValues && (!prevRowValues[attrcode] || !prevRowValues[attrcode]['actived']);\r\n\r\n                                                            cell['bottomLine'] = nextRowValues && (!nextRowValues[attrcode] || !nextRowValues[attrcode]['actived']);\r\n                                                        }\r\n                                                    }\r\n                                                });\r\n\r\n                                                // console.log(linkObjMeta, viewData);\r\n                                            }\r\n                                            // 更新表格\r\n                                            this.currentStore.refresh();\r\n                                        },\r\n                                        getPrevSelector: key => {\r\n                                            const activedCells = this.currentStore.getCache('activedCells') || {},\r\n                                                prevSelector = {};\r\n                                            for (let rowKeyValue in activedCells) {\r\n                                                (activedCells[rowKeyValue] || []).forEach(attrcode => {\r\n                                                    prevSelector[`${rowKeyValue}@${attrcode}`] = true;\r\n                                                });\r\n                                            }\r\n                                            // console.log(activedCells, prevSelector, 'prevSelector');\r\n                                            return prevSelector;\r\n                                        },\r\n                                        onDeSelect: (deActiveCells, hotkey) => {\r\n                                            let prevActiveCells = this.currentStore.getCache('activedCells') || {};\r\n                                            let prevActiveCellsObj = {};\r\n                                            let prevActiveCellsArr = {};\r\n                                            // 转对象\r\n                                            for (let rowKeyValue in prevActiveCells) {\r\n                                                prevActiveCellsObj[rowKeyValue] = {};\r\n                                                for (let attrcode of prevActiveCells[rowKeyValue]) {\r\n                                                    prevActiveCellsObj[rowKeyValue][attrcode] = true;\r\n                                                }\r\n                                            }\r\n\r\n                                            // 清理数据\r\n                                            for (let rowKeyValue in deActiveCells) {\r\n                                                for (let attrcode of deActiveCells[rowKeyValue]) {\r\n                                                    if (prevActiveCellsObj[rowKeyValue][attrcode]) {\r\n                                                        delete prevActiveCellsObj[rowKeyValue][attrcode];\r\n                                                        // setCellProps(rowKeyValue, attrcode, { showDrag: false }, false);\r\n                                                        this.currentStore.setCellProps(rowKeyValue, attrcode, {\r\n                                                            actived: false,\r\n                                                            leftLine: false,\r\n                                                            rightLine: false,\r\n                                                            topLine: false,\r\n                                                            bottomLine: false,\r\n                                                        }, false);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n\r\n                                            // 转数组\r\n                                            for (let rowKeyValue in prevActiveCellsObj) {\r\n                                                prevActiveCellsArr[rowKeyValue] = [];\r\n                                                for (let attrcode in prevActiveCellsObj[rowKeyValue]) {\r\n                                                    prevActiveCellsArr[rowKeyValue].push(attrcode);\r\n                                                }\r\n                                            }\r\n\r\n                                            // 重新赋值\r\n                                            this.currentStore.setCache('activedCells', prevActiveCellsArr);\r\n                                        },\r\n                                        onClearData: (shouldForceUpdate = false, hotkey) => {\r\n                                            this.currentStore.setCache('activedCells', {});\r\n                                            this.currentStore.setCache('activeSpecialCells', []);\r\n                                            if (!isBatchSelect) {\r\n                                                return;\r\n                                            }\r\n                                            //let activedCells = this.currentStore.getCache('activedCells') || {};\r\n                                            //let activedCell = this.currentStore.getCache('activedCell');\r\n                                            let data =\r\n                                                this.currentStore.getData() || [];\r\n                                            let rowKey = this.currentStore.getTableProps(\r\n                                                \"rowKey\",\r\n                                            );\r\n                                            data.forEach(row => {\r\n                                                let values = row.values || row || {};\r\n                                                let rowKeyValue = row[rowKey];\r\n                                                for (let attrcode in values) {\r\n                                                    values[attrcode].showDrag &&\r\n                                                        this.currentStore.setCellProps(\r\n                                                            rowKeyValue,\r\n                                                            attrcode,\r\n                                                            { showDrag: false },\r\n                                                            false,\r\n                                                        );\r\n                                                    values[attrcode].actived &&\r\n                                                        this.currentStore.setCellProps(\r\n                                                            rowKeyValue,\r\n                                                            attrcode,\r\n                                                            {\r\n                                                                actived: false,\r\n                                                                leftLine: false,\r\n                                                                rightLine: false,\r\n                                                                topLine: false,\r\n                                                                bottomLine: false,\r\n                                                            },\r\n                                                            false,\r\n                                                        );\r\n                                                }\r\n                                            });\r\n                                            const columns = this.currentStore.getArrayMeta(activeCode, false) || [];\r\n                                            columns.forEach(item => {\r\n                                                item.unitActive && this.currentStore.setColumn(activeCode, { [item.attrcode]: { unitActive: false } }, false);\r\n                                            });\r\n                                            // 不更新表格\r\n                                            shouldForceUpdate && this.currentStore.refresh();\r\n                                        },\r\n                                        arrColumns: this.currentStore.getArrayMeta(activeCode, false),\r\n                                        data: this.currentData,\r\n                                        rowKey,\r\n                                        onBatchChange: (\r\n                                            activeCell = {},\r\n                                            activeCells = {},\r\n                                        ) => {\r\n                                            if (!isBatchSelect) {\r\n                                                return;\r\n                                            }\r\n                                            // activeCell = {}, activeCells = {}\r\n                                            // 开始  批改以下所有\r\n                                            activeCell = {\r\n                                                ...activeCell,\r\n                                                rowIndex: this.currentStore.getTrueRowIndex(\r\n                                                    {\r\n                                                        rowKeyValue:\r\n                                                            activeCell.rowKeyValue,\r\n                                                    },\r\n                                                ),\r\n                                                attrcode: activeCell.attrcode,\r\n                                                column: this.currentStore.getColumn(\r\n                                                    activeCode,\r\n                                                    activeCell.attrcode,\r\n                                                ),\r\n                                            };\r\n\r\n                                            // 表格数据  是否包含删除的数据 这里要斟酌下\r\n                                            // let rows = store.getViewData('filter');\r\n                                            let rows = this.currentStore.getData();\r\n\r\n                                            let pasteContent = [];\r\n                                            let activeCellValue =\r\n                                                getCellValue({\r\n                                                    rowKeyValue: activeCell.rowKeyValue,\r\n                                                    attrcode: activeCell.attrcode,\r\n                                                }) || {};\r\n                                            for (let rowKeyValue in activeCells) {\r\n                                                let attrcode =\r\n                                                    activeCells[rowKeyValue][0];\r\n                                                let isRefer =\r\n                                                    activeCell.column.itemtype ===\r\n                                                    \"refer\";\r\n                                                attrcode &&\r\n                                                    pasteContent.push(\r\n                                                        isRefer\r\n                                                            ? activeCellValue.display\r\n                                                            : activeCellValue.value,\r\n                                                    );\r\n                                            }\r\n\r\n                                            // console.log('onBatchChange trigger', activeCell, activeCells);\r\n\r\n                                            let param = {\r\n                                                pasteContent,\r\n                                                activeCell,\r\n                                                langJson,\r\n                                                rows,\r\n                                                getRowOldValue: this.currentStore\r\n                                                    .getRowOldValue,\r\n                                                tableId: this.currentMainCode,\r\n                                            };\r\n                                            let data = excelPackageData(param);\r\n                                            onBatchChange && onBatchChange(data);\r\n                                        },\r\n                                        isBatchSelect,\r\n                                        ...high_selectable,\r\n                                    }}\r\n                                    high_filter={{\r\n                                        alloweFilter: true,\r\n                                        langJson,\r\n                                        panelTitle: this.currentStore.getStore(['meta', this.currentMainCode, 'name']) || '',\r\n                                        filterData: this.currentStore.getViewData('filter'),\r\n                                        customColData: this.currentStore.getCache('customColData'),\r\n                                        rowKey,\r\n                                        isReset: this.currentStore.getStore('filterReset'),\r\n                                        arrColumns,\r\n                                        handleFilterCallBack: (params = {}) => {\r\n                                            let {\r\n                                                filteredRow,\r\n                                                filteredRowKeyValues,\r\n                                                columnStatus = {},\r\n                                                // 原始过滤条件\r\n                                                filterItemList,\r\n                                                // 当前过滤条件\r\n                                                afterFilterItemList,\r\n                                                afterFilterFactors,\r\n                                            } = params;\r\n\r\n                                            // console.log(params);\r\n\r\n                                            // 更新重置状态\r\n                                            this.currentStore.setStore('filterReset', false, false);\r\n\r\n                                            // 设置列状态  设置表格筛选图标\r\n                                            this.currentStore.setColumn(this.currentMainCode, columnStatus, false);\r\n\r\n                                            // 设置行状态\r\n                                            let data = this.currentStore.getData() || [];\r\n                                            data.forEach(row => {\r\n                                                if (filteredRowKeyValues.includes(row[rowKey])) {\r\n                                                    row.filter = false;\r\n                                                } else {\r\n                                                    row.filter = true;\r\n                                                }\r\n                                            });\r\n\r\n                                            // 处理已选等逻辑\r\n                                            let checkInfo = this.currentStore.getCheckInfo();\r\n                                            if (filteredRow && filteredRow.length) {\r\n                                                checkInfo.indeterminate = filteredRow.some(item => {\r\n                                                    let values = item.values || item;\r\n                                                    let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n                                                    return unSaga && item.selected;\r\n                                                });\r\n                                                checkInfo.checkedAll = filteredRow.every(item => {\r\n                                                    let values = item.values || item;\r\n                                                    let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n                                                    return !unSaga || item.selected;\r\n                                                });\r\n                                            }\r\n                                            this.currentStore.setStore([\"checkInfo\"], checkInfo, false);\r\n\r\n                                            // 更新 所有的更新放到弹窗关闭(onHide)时\r\n                                            this.currentStore.setData({ data, shouldForceUpdate: false });\r\n                                            handleFilterCallBack && handleFilterCallBack();\r\n                                        },\r\n                                        handleResetCallBack: params => {\r\n                                            let { filterItemList, columnStatus } = params;\r\n                                            // 更新重置状态\r\n                                            this.currentStore.setStore('filterReset', false, false);\r\n                                            // 设置行状态\r\n                                            let data = this.currentStore.getData() || [];\r\n                                            data.forEach(row => {\r\n                                                row.filter = false;\r\n                                                delete row.filterIndex;\r\n                                            });\r\n\r\n                                            // 处理已选等逻辑\r\n                                            let checkInfo = this.currentStore.getCheckInfo();\r\n                                            let viewData = this.currentStore.getViewData();\r\n                                            if (viewData && viewData.length) {\r\n                                                checkInfo.indeterminate = viewData.some(item => {\r\n                                                    let values = item.values || item;\r\n                                                    let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n                                                    return unSaga && item.selected;\r\n                                                });\r\n                                                checkInfo.checkedAll = viewData.every(item => {\r\n                                                    let values = item.values || item;\r\n                                                    let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n                                                    return !unSaga || item.selected;\r\n                                                });\r\n                                            }\r\n                                            this.currentStore.setStore([\"checkInfo\"], checkInfo, false);\r\n\r\n                                            // 更新 所有的更新放到弹窗关闭(onHide)时\r\n                                            this.currentStore.setData({ data, shouldForceUpdate: false });\r\n\r\n                                            // 列状态\r\n                                            this.currentStore.setColumn(this.currentMainCode, columnStatus, false);\r\n                                            handleResetCallBack && handleResetCallBack();\r\n                                        },\r\n                                        onHide: params => {\r\n                                            let { filterItemList, columnStatus } = params;\r\n                                            this.currentStore.setColumn(this.currentMainCode, columnStatus, true);\r\n                                            // console.log(params);\r\n                                        },\r\n                                        ...high_filter,\r\n                                    }}\r\n                                    contextMenuConfig={{\r\n                                        enable: high_selectable && high_selectable.enable && isBatchSelect,\r\n                                        status: status,\r\n                                        contextMenuClick: this.contextMenuClick,\r\n                                        showBusinessBtn: isFunction(rightMenuClick),\r\n                                        showPasteBtn: isFunction(onBatchChange),\r\n                                        langJson: this.props.langJson,\r\n                                    }}\r\n                                    high_hotkey={{\r\n                                        tableId: this.currentMainCode,\r\n                                        enable: true,\r\n                                        store: this.currentStore,\r\n                                    }}\r\n                                    // 点击单元格，单元格的浏览态编辑态切换时的回调\r\n                                    onCellStatusChange={params => {\r\n                                        let { isEdit, column } = params\r\n                                        if (isEdit) {\r\n                                            setActiveCell(params)\r\n                                        } else {\r\n                                            let cell = getActiveCell()\r\n                                            if (cell) {\r\n                                                let { oldColumn = {} } = cell\r\n                                                if (column.attrcode === oldColumn.attrcode) {\r\n                                                    setActiveCell(null)\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }}\r\n                                    //自适应高度\r\n                                    adaptionHeight={adaption}\r\n                                    cardType=\"card\"\r\n                                    otherAreaHeight={maxVisible ? 0 : extraAreaHeight}\r\n                                    //孙表不加悬浮滚动条\r\n                                    addAffixScroll={!isGrandson}\r\n                                    //折行回调\r\n                                    foldingRowChange={isEllipsis => {\r\n                                        this.setState({ isEllipsis })\r\n                                    }}\r\n                                    foldCacheId={foldCacheId}\r\n                                    bodyDisplayInRow={isUndefined(multipleRowCell) ? this.state.isEllipsis : !multipleRowCell}\r\n                                    //滚动条悬浮\r\n                                    autoAffixScroll\r\n                                    //——————————操作列————————————\r\n                                    colsSettingParam={colSettingParam}\r\n                                    cancelCustomRightMenu={cancelCustomRightMenu}\r\n                                    showWidthAndHeightConfig={showWidthAndHeightConfig}\r\n                                    updateColumnHandle={this.updateColumnAfterSetting}\r\n                                    key={this.currentStore.getStore('key')}\r\n                                    //——————————操作列end————————————\r\n                                    //空白列\r\n                                    addBlankCol={addBlankCol}\r\n                                    {...othersConfig}\r\n                                />\r\n                            )}\r\n                            {/*全展开*/}\r\n                            {status === \"browse\" && tableVisible && ListViewVisible ? (\r\n                                <AllRowsExpand\r\n                                    tableDom={this.table}\r\n                                    maxVisible={maxVisible}\r\n                                    adaptionHeight={adaption}\r\n                                    otherAreaHeight={extraAreaHeight}\r\n                                    mainCode={this.currentMainCode}\r\n                                    store={this.currentStore}\r\n                                    meta={getStore(\"meta\")}\r\n                                    data={this.currentData}\r\n                                    config={this.currentConfig}\r\n                                    langJson={langJson}\r\n                                    setCellValue={setCellValue}\r\n                                    getCellValue={getCellValue}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                }\r\n\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        let { maxVisible } = this.mainStore.getStore(\"tableSwitch\");\r\n        let { isGrandson } = this.props;\r\n        if (maxVisible) {\r\n            return <MaxBox zIndex={isGrandson ? 240 : 210} content={this.createContent()} />;\r\n        } else {\r\n            return this.createContent();\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-07-31 18:00:00\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2020-10-15 13:52:04\r\n */\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport TabsTable from \"../TabsTable\";\r\nimport { PubSub } from '@platform/api';\r\n\r\nconst AREACHANGECOMPLETE = 'areaChangeComplete';\r\n\r\nexport default class MultiTabsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //模板\r\n        this.multiCodeArr = null;\r\n        this.adaptionHeight = false;\r\n        this.isCalcHeight = false;\r\n        this.grandTable = null;\r\n        this.pubsub_token = null;\r\n\r\n        this.state = {\r\n            grandTableHeight: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getMultiMeta();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { grandTableMainId, grandGroup } = this.props;\r\n        if (grandTableMainId && Array.isArray(this.multiCodeArr) && this.multiCodeArr.length === 1) {\r\n            this.adaptionHeight = true;\r\n        } else if (Array.isArray(grandGroup) && grandGroup.length === 1) {\r\n            this.adaptionHeight = true;\r\n        }\r\n      \r\n        this.pubsub_token = PubSub.subscribe(AREACHANGECOMPLETE, this.handlePubSub);\r\n\r\n        window.addEventListener(\"resize\",this.calcGrandTableHeight);\r\n        \r\n    }\r\n\r\n    handlePubSub=()=>{\r\n        this.calcGrandTableHeight();\r\n    }\r\n\r\n    calcGrandTableHeight=()=>{\r\n        if(this.adaptionHeight && this.props.isCalcHeight){\r\n            //currentTop计算不准确\r\n            let currentTop = ReactDOM.findDOMNode(this.grandTable)?.getBoundingClientRect().top;\r\n            let grandTableHeight = document.body.offsetHeight - currentTop - 80 -8;\r\n            this.isCalcHeight = true;\r\n            this.setState({\r\n                grandTableHeight\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.isCalcHeight && this.grandTable) {\r\n            this.isCalcHeight = true;\r\n            this.calcGrandTableHeight();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        PubSub.unsubscribe(this.pubsub_token);\r\n        window.removeEventListener(\"resize\",this.calcGrandTableHeight);\r\n    }\r\n\r\n    getMultiMeta = () => {\r\n        let { meta, grandTableMainId } = this.props;\r\n        //孙表横向多页签的主表区域编码\r\n        let containerrelation = meta.containerrelation;\r\n        if (\r\n            grandTableMainId &&\r\n            containerrelation &&\r\n            Array.isArray(containerrelation[grandTableMainId])\r\n        ) {\r\n            this.multiCodeArr = containerrelation[grandTableMainId];\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let {\r\n            grandTableStore,\r\n            grandTableMainId,\r\n            grandGroup,\r\n            grandTableConfig,\r\n            renderItems,\r\n            getHotKeyConfig,\r\n            cardTableComponentUpdate,\r\n            langJson,\r\n        } = this.props;\r\n\r\n        let { grandTableHeight } = this.state;\r\n\r\n        if (this.adaptionHeight && grandTableHeight) {\r\n            for (let grandId in grandTableConfig) {\r\n                if (!grandTableConfig[grandId]) grandTableConfig[grandId] = {}\r\n                grandTableConfig[grandId].height = grandTableHeight;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"grandTable-wrapper\" ref={(dom => this.grandTable = dom)}>\r\n                {grandTableMainId && Array.isArray(this.multiCodeArr) ?\r\n                    this.multiCodeArr.map((item, index) => {\r\n                        let mainCode = item[0];\r\n                        return (\r\n                            <TabsTable\r\n                                key={index}\r\n                                //单来源页签属性\r\n                                mainCode={mainCode}\r\n                                renderItems={renderItems}\r\n                                getHotKeyConfig={getHotKeyConfig}\r\n                                cardTableComponentUpdate={cardTableComponentUpdate}\r\n\r\n                                //多页签store及多页签config\r\n                                tabsStore={grandTableStore}\r\n                                tabsConfig={grandTableConfig}\r\n                                metaTabs={item}\r\n                                isGrandTable={true}\r\n                                langJson={langJson}\r\n                                //孙表标志\r\n                                isGrandson={true}\r\n                            />\r\n                        );\r\n                    }) : (\r\n                        grandGroup.map((item, index) => {\r\n                            let moduleId = item.grandTableId;\r\n                            return <TabsTable\r\n                                key={index}\r\n                                //单来源页签属性\r\n                                mainCode={moduleId}\r\n                                renderItems={renderItems}\r\n                                getHotKeyConfig={getHotKeyConfig}\r\n                                cardTableComponentUpdate={cardTableComponentUpdate}\r\n\r\n                                //多页签store及多页签config\r\n                                tabsStore={{ [moduleId]: grandTableStore[moduleId] }}\r\n                                tabsConfig={{ [moduleId]: grandTableConfig[moduleId] }}\r\n                                metaTabs={[moduleId]}\r\n                                isGrandTable={true}\r\n                                langJson={langJson}\r\n                                //孙表标志\r\n                                isGrandson={true}\r\n                            />\r\n                        })\r\n                    )\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Sidebox, Button } from '@platform/base';\r\nimport { getMultiLang, getSysFieldid } from '@platform/api';\r\nimport { utils, CONFIG } from '@platform/table-core';\r\nimport Form from '@platform/form';\r\nimport MultiTabsTable from './MultiTabsTable';\r\n\r\nconst { isFunction, isArray, isObject, isBoolean } = utils;\r\nconst { ROW_STATUS } = CONFIG;\r\nimport \"./index.less\";\r\n\r\nexport default class TableSideBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            json: {},\r\n            index: this.props.index,\r\n            buttonDisabled: [],\r\n            clientWidth: 0,\r\n        };\r\n        this.formStore = Form.useForm();\r\n\r\n        //当前index\r\n        this.index = this.props.index;\r\n        //当前\r\n        this.record = this.props.data;\r\n        this.grandTableConfig = {};\r\n        if (this.props.config && isArray(this.props.config.grandGroup)) {\r\n            this.props.config.grandGroup.forEach(item => {\r\n                this.grandTableConfig[item.grandTableId] = item.grandTableConfig;\r\n            });\r\n        }\r\n\r\n        this.props.store.setTableProps('currentIndex', this.index, false);\r\n        this.props.store.setStore(['tableSideBox', 'index'], this.index, false);\r\n        this.props.store.setStore(['tableSideBox', 'record'], this.record, false);\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        //加载多语\r\n        let callback = json => {\r\n            this.setState({ json });\r\n        };\r\n        getMultiLang({ moduleId: 'table_cardTable', callback });\r\n\r\n        this.setState({\r\n            clientWidth: document.body.clientWidth\r\n        })\r\n        let tableData = this.props.store.getViewData();\r\n        let length = tableData.length;\r\n        this.setFormMeta();\r\n        this.updateSideBox(true, length);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.calcSideBoxWidth);\r\n    }\r\n\r\n    calcSideBoxWidth = () => {\r\n        this.setState({\r\n            clientWidth: document.body.clientWidth\r\n        })\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        let { onClose, store, index } = nextProps;\r\n        let tableRows = store.getViewData();\r\n        // 删除到最后一行时避免报错\r\n        if (!tableRows[index]) {\r\n            console.warn('not find data, please check!');\r\n            this.record = {};\r\n            store.setTableProps('currentIndex', -1, false);\r\n            store.setStore(['tableSideBox', 'index'], -1, false);\r\n            store.setStore(['tableSideBox', 'record'], null, false);\r\n            isFunction(onClose) && onClose();\r\n            return;\r\n        } else {\r\n            this.index = index;\r\n            this.record = tableRows[index];\r\n        }\r\n\r\n        //如何准备判读是否需要更新？----待优化\r\n\r\n        //--- 1.业务组setMeta 会更新meta; \r\n        //----2.业务调用表格API 会更新record\r\n        //----3.业务修改孙表 会更新孙表数据\r\n        // 更新下模板 有个问题是 给侧拉设置setQueryCondition\r\n        // 业务组依靠修改引用 修改了meta\r\n        // this.formStore.setMeta(this.formMeta, this.formMainCode);\r\n        //将外部更新的数据 同步到孙表中\r\n        //this.saveGrandTableData();\r\n\r\n        //将外部更新数据 同步到表格表格中\r\n        this.setFormMeta();\r\n        this.updateSideBox(false, tableRows.length, true);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // 清理内存\r\n        this.formStore = null;\r\n        window.removeEventListener(\"resize\", this.calcSideBoxWidth);\r\n    }\r\n\r\n    //设置表单模板\r\n    setFormMeta = () => {\r\n        let { status, mainCode, store } = this.props;\r\n        let meta = store.getStore('meta');\r\n        let destEditAreaCode = meta && meta.gridrelation && meta.gridrelation[mainCode].destEditAreaCode;\r\n        let formMainCode = '';\r\n        let formMeta = { formrelation: {} };\r\n        if (isArray(destEditAreaCode)) {\r\n            formMainCode = destEditAreaCode[0];\r\n            formMeta.formrelation[formMainCode] = [];\r\n            destEditAreaCode.forEach((item, index) => {\r\n                formMeta[item] = {\r\n                    ...meta[item],\r\n                    items: [],\r\n                };\r\n                if (index !== 0) {\r\n                    formMeta.formrelation[formMainCode].push(item);\r\n                }\r\n                let newItems = [];\r\n                meta[item].items.forEach(element => {\r\n                    let newItem = Object.assign({}, element);\r\n                    if (isFunction(element.render)) {\r\n                        let oldRender = element.render;\r\n                        if (!newItem.renderStatus) { newItem.renderStatus = 'edit' };\r\n                        let isEditRender = newItem.renderStatus === 'edit' && status === 'edit';\r\n                        let isBrowseRender = newItem.renderStatus === 'browse' && status === 'browse';\r\n                        // 判断显示render状态\r\n                        if (isEditRender || isBrowseRender) {\r\n                            newItem.render = (attrcode, values) => {\r\n                                return oldRender(\r\n                                    values[attrcode],\r\n                                    {\r\n                                        rowid: this.record.rowid,\r\n                                        status: this.record.status,\r\n                                        values: values,\r\n                                    },\r\n                                    this.index,\r\n                                );\r\n                            }\r\n                        } else {\r\n                            newItem.render = null;\r\n                        }\r\n                    }\r\n                    newItems.push(newItem);\r\n                });\r\n                formMeta[item].items = newItems;\r\n            });\r\n        }\r\n        this.formMeta = formMeta;\r\n        this.formMainCode = formMainCode;\r\n        if (this.formMainCode) {\r\n            this.formStore.setMeta(this.formMeta, this.formMainCode);\r\n        }\r\n\r\n    };\r\n\r\n    // 增行按钮函数\r\n    handleAdd = () => {\r\n        let { config, mainCode, store } = this.props;\r\n        let { modelAddRow, modelAddDefaultValue } = config;\r\n\r\n        //增行之前同步孙表数据\r\n        this.saveGrandTableData();\r\n\r\n        // 侧拉增行默认值\r\n        const defaultValue = isFunction(modelAddDefaultValue) && modelAddDefaultValue();\r\n        store.addTableRow({ defaultValue });\r\n        let tableRows = store.getViewData();\r\n        let length = tableRows.length;\r\n        this.index = length - 1;\r\n        this.record = tableRows[this.index] || {}; //defaultValue\r\n        this.updateSideBox(false, length);\r\n\r\n        // 侧拉增行后的回掉  index 2005给业务组的是上一行的index\r\n        isFunction(modelAddRow) && modelAddRow(mainCode, this.index - 1, { afterAddRowid: this.record.rowid });\r\n    };\r\n\r\n    // 删行按钮函数\r\n    handleDel = () => {\r\n        let { config, mainCode, store } = this.props;\r\n\r\n        let { modelDelRow, grandGroup } = config;\r\n        let tableRows = store.getViewData();\r\n        let length = tableRows.length;\r\n\r\n        // 兼容筛选时的侧拉\r\n        // tableScope.filterAllData &&\r\n        //     (currentModelIndex = rows.findIndex(\r\n        //         (row) =>\r\n        //             row.rowid === tableScope.filterAllData[modelIndex].rowid\r\n        //     ));\r\n\r\n        // 删除前，当前位置的行的rowid\r\n        let beforeDelRowid = tableRows[this.index].rowid;\r\n\r\n        if (length === 1) {\r\n            //若只有一行，则关闭侧拉\r\n            store.closeSideBox();\r\n        } else {\r\n            //若为最后一行，删除后侧拉显示上一行; 否则显示下一行\r\n            if (this.index === length - 1) {\r\n                this.index = length - 2;\r\n            } else {\r\n                //this.index ++;\r\n            }\r\n            this.record = tableRows[this.index] || {};\r\n            //更新侧拉数据\r\n            this.updateSideBox(false, length - 1);\r\n        }\r\n\r\n        //删除表格行\r\n        store.deleteTableRows({ rowKeyValues: beforeDelRowid });\r\n        //删除孙表数据\r\n        // if (isArray(grandGroup)) {\r\n        //     this.deleteGrandTableByRowid(beforeDelRowid);\r\n        // }\r\n\r\n        isFunction(modelDelRow) && modelDelRow(mainCode, { beforeDelRowid });\r\n    };\r\n\r\n    pageButtonClick = name => {\r\n        let { store, config } = this.props;\r\n        let tableData = store.getViewData();\r\n        let { sideRowChange } = config;\r\n        let length = tableData.length;\r\n        switch (name) {\r\n            case 'first':\r\n                if (this.index !== 0) {\r\n                    this.index = 0;\r\n                }\r\n                break;\r\n            case 'prev':\r\n                if (this.index !== 0) {\r\n                    this.index = this.index - 1;\r\n                }\r\n                break;\r\n            case 'next':\r\n                if (this.index !== length - 1) {\r\n                    this.index = this.index + 1;\r\n                }\r\n                break;\r\n            case 'end':\r\n                if (this.index !== length - 1) {\r\n                    this.index = length - 1;\r\n                }\r\n                break;\r\n        }\r\n\r\n        //数据同步到孙表数据结构中\r\n        this.saveGrandTableData();\r\n\r\n\r\n        this.record = tableData[this.index] || {};\r\n        this.updateSideBox(false, length);\r\n        isFunction(sideRowChange) && sideRowChange(this.record);\r\n\r\n    };\r\n\r\n    //更新孙表数据\r\n    saveGrandTableData = () => {\r\n        let { config, store } = this.props;\r\n        let { grandGroup } = config;\r\n\r\n        let rowid = this.record.rowid;\r\n        let grandTableData = store.getStore('grandTable');\r\n        let grandTableStore = store.getStore('grandTableStore');\r\n        let grandValidateFailed = store.getCache('grandValidateFailed') || {};\r\n        isArray(grandGroup) &&\r\n            grandGroup.forEach(item => {\r\n                let currentStore = grandTableStore[item.grandTableId];\r\n                let grandData = currentStore.getData();\r\n                if (!grandTableData[rowid]) grandTableData[rowid] = {};\r\n                grandTableData[rowid][item.grandTableId] = { rows: grandData };\r\n                // 同步信息\r\n                const validateFailed = grandValidateFailed[rowid] || {};\r\n                grandValidateFailed[rowid] = JSON.parse(JSON.stringify(currentStore.getCache('validateFailed') || {}));\r\n            });\r\n        // console.log(grandValidateFailed);\r\n        store.setCache('grandValidateFailed', grandValidateFailed);\r\n        store.setStore('grandTable', grandTableData, false);\r\n    };\r\n\r\n    //删除孙表数据\r\n    deleteGrandTableByRowid = rowid => {\r\n        let { config, store } = this.props;\r\n        let { grandGroup } = config;\r\n\r\n        let grandTableData = store.getStore('grandTable');\r\n        isArray(grandGroup) &&\r\n            grandGroup.forEach(item => {\r\n                delete grandTableData[rowid][item.grandTableId];\r\n                if(Object.keys(grandTableData[rowid]).length === 0){\r\n                    delete grandTableData[rowid];\r\n                }\r\n            });\r\n        store.setStore('grandTable', grandTableData, false);\r\n    };\r\n\r\n    //更新侧拉数据\r\n    updateSideBox = (initMeta, length, notUpdateTable) => {\r\n        let { status, config, store } = this.props;\r\n        let { grandGroup } = config;\r\n        let { buttonDisabled } = this.state;\r\n        if (length === 1) {\r\n            buttonDisabled = new Array(true, true, true, true);\r\n        } else if (this.index === length - 1) {\r\n            buttonDisabled = new Array(false, false, true, true);\r\n        } else if (this.index === 0) {\r\n            buttonDisabled = new Array(true, true, false, false);\r\n        } else {\r\n            buttonDisabled = new Array(false, false, false, false);\r\n        }\r\n        //更新标题\r\n        this.setState({\r\n            index: this.index,\r\n            buttonDisabled,\r\n        });\r\n\r\n        store.setTableProps('currentIndex', this.index, false);\r\n        store.setStore(['tableSideBox', 'index'], this.index, false);\r\n        store.setStore(['tableSideBox', 'record'], this.record, false);\r\n\r\n        //设置表单数据\r\n        //formStore.reset();\r\n        let formValue = this.record.values;\r\n        // disabled等属性的重置\r\n        let formMetaItemsObj = {};\r\n        (this.formStore.getMetaItems(this.formMainCode) || []).forEach(item => {\r\n            item && this.formStore.setItemAttribute(item.attrcode, 'disabled', !!item.disabled, false);\r\n        });\r\n        // 先清空所有的值  再重新设置 避免切换页签时 值出现缓存情况 --bbq\r\n        this.formStore.emptyAllFormValue();\r\n        this.formStore.setAllFormValue(formValue);\r\n        // 处理一下disabled等属性\r\n        for (let key in formValue) {\r\n            let formItem = formValue[key];\r\n            isObject(formItem) && isBoolean(formItem.disabled) && this.formStore.setItemAttribute(key, 'disabled', formItem.disabled, false);\r\n        }\r\n\r\n        this.formStore.setStatus(status);\r\n\r\n        //设置孙表数据\r\n        let rowid = this.record.rowid;\r\n        let grandTableData = store.getStore('grandTable');\r\n        let grandTableStore = store.getStore('grandTableStore');\r\n        let grandValidateFailed = store.getCache('grandValidateFailed') || {};\r\n        // console.log(grandValidateFailed, 'grandValidateFailedgrandValidateFailedgrandValidateFailed');\r\n        isArray(grandGroup) &&\r\n            grandGroup.forEach(item => {\r\n                let grandStore = grandTableStore[item.grandTableId];\r\n                if (!notUpdateTable) {\r\n                    if (grandTableData[rowid] && grandTableData[rowid][item.grandTableId]) {\r\n                        let grandData = grandTableData[rowid][item.grandTableId];\r\n                        if (grandData && grandData.rows) grandStore.setData({ data: grandData.rows });\r\n                    } else {//不存在该孙表数据，为新增行\r\n                        grandStore.setData({ data: [] });\r\n                        if (!grandTableData[rowid]) grandTableData[rowid] = {};\r\n                        grandTableData[rowid][item.grandTableId] = { rows: [] };\r\n                    }\r\n                }\r\n\r\n                // 记录校验状态\r\n                const validateFailed = grandValidateFailed[rowid];\r\n                if (grandStore && validateFailed) {\r\n                    // for (let tableId in validateFailed) {\r\n                    const table = validateFailed[item.grandTableId];\r\n                    // let isRefresh = false;\r\n                    if (table) {\r\n                        // 缓存状态\r\n                        grandStore.setCache('validateFailed', validateFailed);\r\n                        for (let tabId in table) {\r\n                            const rows = table[tabId];\r\n                            if (rows) {\r\n                                for (let rowKeyValue in rows) {\r\n                                    if (rowKeyValue) {\r\n                                        let row = rows[rowKeyValue];\r\n                                        if (row) {\r\n                                            for (let attrcode in row) {\r\n                                                // debugger;\r\n                                                grandStore.setCellProps(rowKeyValue, attrcode, { validated: false }, false);\r\n                                            }\r\n                                        }\r\n                                        // isRefresh = true;\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                        // isRefresh && store.refresh();\r\n                    }\r\n                    // }\r\n                }\r\n\r\n                initMeta && grandStore.setStore('meta', store.getStore('meta'));\r\n            });\r\n    };\r\n\r\n    //注册侧拉按钮\r\n    getButtons = () => {\r\n        let { store, index, data, config = {}, mainCode, status } = this.props;\r\n        let { modelFooter, hideModelSave, modelSave, hideAdd, modelAddRowBefore, hideDel, modelDelRowBefore } = config;\r\n        let json = this.state.json;\r\n        return (\r\n            <span className=\"card-table-modal-header-btns\">\r\n                <span className=\"card-table-modal-header-customer\">\r\n                    {isFunction(modelFooter) && modelFooter(mainCode, this.index, store, this.record)}\r\n                </span>\r\n                {/* 整单保存 */}\r\n                <Button\r\n                    fieldid=\"tableModel-save\"\r\n                    style={{ display: (hideModelSave || status === 'browse') ? 'none' : 'inline-block' }}\r\n                    className=\"btn-save btn-card-table-model\"\r\n                    onClick={() => {\r\n                        isFunction(modelSave) && modelSave(this.index);\r\n                    }}\r\n                >\r\n                    {json['cardTable003']}\r\n                </Button>\r\n                {/* 增行 */}\r\n                <Button\r\n                    fieldid=\"tableModel-add\"\r\n                    className=\"btn-add btn-card-table-model\"\r\n                    style={{ display: (hideAdd || status === 'browse') ? 'none' : 'inline-block' }}\r\n                    onClick={async () => {\r\n                        if (isFunction(modelAddRowBefore)) {\r\n                            let isContinue = await modelAddRowBefore(mainCode, this.index);\r\n                            if (isContinue) {\r\n                                this.handleAdd();\r\n                            }\r\n                        } else {\r\n                            this.handleAdd();\r\n                        }\r\n                    }}\r\n                >\r\n                    {json['cardTable004']}\r\n                </Button>\r\n                {/* 删行 */}\r\n                <Button\r\n                    fieldid=\"tableModel-del\"\r\n                    className=\"btn-del btn-card-table-model\"\r\n                    style={{ display: (hideDel || status === 'browse') ? 'none' : 'inline-block' }}\r\n                    onClick={async () => {\r\n                        if (isFunction(modelDelRowBefore)) {\r\n                            let isContinue = await modelDelRowBefore(mainCode, this.index, this.record);\r\n                            if (isContinue) {\r\n                                this.handleDel();\r\n                            }\r\n                        } else {\r\n                            this.handleDel();\r\n                        }\r\n                    }}\r\n                >\r\n                    {json['cardTable005']}\r\n                </Button>\r\n            </span>\r\n        );\r\n    };\r\n\r\n    //关闭侧拉\r\n    sideBoxClose = () => {\r\n        let { onClose, config, store } = this.props;\r\n        let { modelClose } = config;\r\n\r\n        this.saveGrandTableData();\r\n\r\n        // store.setTableProps('currentIndex', this.index, false);\r\n        store.setStore(['tableSideBox', 'index'], -1, false);\r\n        store.setStore(['tableSideBox', 'record'], null, false);\r\n\r\n        isFunction(onClose) && onClose();\r\n        isFunction(modelClose) && modelClose();\r\n    };\r\n\r\n    //表单编辑后，保存表单数据到子表行\r\n    formAfterEvent = prams => {\r\n        let { areaId, attrcode, curMetaItem, value, oldValue, allValue, singleFormCode, componentValue } = prams;\r\n\r\n        let { config, mainCode, store } = this.props;\r\n        let { onAfterEvent } = config;\r\n\r\n        this.record.values = allValue;\r\n        if (this.record.status === ROW_STATUS.origin) {\r\n            this.record.status = ROW_STATUS.edit;\r\n\r\n        }\r\n        // 根据rowid 更新表格数据\r\n        let rows = store.setRows({ rows: [this.record] });\r\n        this.record = this.record || (rows ? rows[0] : {});\r\n\r\n        isFunction(onAfterEvent) &&\r\n            onAfterEvent({\r\n                moduleId: mainCode,\r\n                record: this.record,\r\n                rowKey: 'rowid',\r\n                rowKeyValue: this.record.rowid,\r\n                rowIndex: this.index,\r\n                attrcode: attrcode,\r\n                value: value,\r\n                oldValue: oldValue,\r\n                componentValue,\r\n                isTriggerModal: true,\r\n                //event,\r\n                column: curMetaItem,\r\n                //triggerType\r\n            }, store);\r\n    };\r\n\r\n    formBeforeEvent = async (moduleId, attrcode, value, values, column) => {\r\n        let { config, mainCode } = this.props;\r\n        let { onBeforeEvent } = config;\r\n        if (isFunction(onBeforeEvent)) {\r\n            return (await onBeforeEvent({\r\n                moduleId: mainCode,\r\n                record: this.record,\r\n                rowKey: 'rowid',\r\n                rowKeyValue: this.record.rowid,\r\n                rowIndex: this.index,\r\n                attrcode: attrcode,\r\n                value: value,\r\n                isTriggerModal: true,\r\n                //event,\r\n                column,\r\n                //triggerType\r\n            })) !== false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { show, config, store, mainCode, renderItems, getHotKeyConfig, cardTableComponentUpdate, langJson = {} } = this.props;\r\n        let { sideTitle, grandGroup, grandTableMainId = '', modalCustomerArea } = config;\r\n        let { json, clientWidth } = this.state;\r\n        let title = isFunction(sideTitle)\r\n            ? sideTitle(this.state.index)\r\n            : `${json['cardTable006']} ${this.state.index + 1}`;\r\n        let grandTableStore = store.getStore('grandTableStore');\r\n\r\n        console.log('clientWidth:', clientWidth)\r\n\r\n        return (\r\n            <Sidebox\r\n                className={'card-table-sidebox'}\r\n                mask={true}\r\n                show={show}\r\n                title={title}\r\n                showButton={true}\r\n                buttonDisabled={this.state.buttonDisabled}\r\n                onClose={this.sideBoxClose}\r\n                maskClose={this.sideBoxClose}\r\n                buttonClick={this.pageButtonClick}\r\n                //propContainer={}\r\n                width={clientWidth > 1100 ? '1100px' : clientWidth + 'px'}\r\n                getHeaderBtns={this.getButtons}\r\n            >\r\n                {/* 使用表单创建侧拉表头 */}\r\n                <div fieldid={getSysFieldid(`${mainCode}_form-area`)}>\r\n                    <Form\r\n                        //meta={this.formMeta}\r\n                        name={this.formMainCode}\r\n                        //status={status}\r\n                        config={{\r\n                            onAfterEvent: this.formAfterEvent,\r\n                            onBeforeEvent: this.formBeforeEvent,\r\n                        }}\r\n                        store={this.formStore}\r\n                    //init={}\r\n                    />\r\n                </div>\r\n                {/* 使用TabsTable创建侧拉表体 */}\r\n                {isArray(grandGroup) && (\r\n                    <MultiTabsTable\r\n                        grandGroup={grandGroup}\r\n                        meta={store.getStore('meta')}\r\n                        // 传递孙表的多语\r\n                        langJson={langJson}\r\n                        grandTableMainId={grandTableMainId}\r\n                        grandTableStore={grandTableStore}\r\n                        grandTableConfig={this.grandTableConfig}\r\n                        renderItems={renderItems}\r\n                        getHotKeyConfig={getHotKeyConfig}\r\n                        cardTableComponentUpdate={cardTableComponentUpdate}\r\n                        isCalcHeight={isFunction(modalCustomerArea) ? false : true}\r\n\r\n                    />\r\n                )}\r\n\r\n                {isFunction(modalCustomerArea) && modalCustomerArea()}\r\n            </Sidebox>\r\n        );\r\n    }\r\n}\r\n","/*\r\n * @Descripttion: CardTable表格\r\n * @version:\r\n * @Author: bbq\r\n * @Date: 2020-07-21 10:13:18\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-01-11 19:38:56\r\n */\r\nimport React, { Component } from \"react\";\r\nimport SingleRowExpand from '../SingleRowExpand';\r\nimport TabsTable from '../TabsTable';\r\nimport TableSideBox from '../SideBox';\r\nimport { utils } from '@platform/table-core';\r\nconst { isArray, isFunction, isObject, isString, isEmptyValue } = utils;\r\n\r\nclass CardTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.mainSource = this.props.tabsStore[this.props.name];\r\n        // 当前激活页签状态存在主区域store\r\n        let oldSwitch = this.mainSource.getStore('tableSwitch');\r\n        this.initSwitch = {\r\n            ...oldSwitch,\r\n            activeCode: oldSwitch.activeCode ? oldSwitch.activeCode : this.props.name,\r\n        }\r\n        this.mainSource.setStore('tableSwitch', this.initSwitch, false);\r\n\r\n        // 给每一个数据源设置一个 name  用于做initialvalue的解析\r\n        this.mainSource.setStore('name', this.props.name, false);\r\n\r\n        //子表使用的是 singleCardTable\r\n        for (let source of this.props.metaTabs) {\r\n            // if (!props.tabsStore[source].getRef().length) {\r\n            props.tabsStore[source].setRef(this);\r\n            // }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.props.store._initCellPropsByMeta(this.props.name, this.props.meta);\r\n        let { name, tabsConfig } = this.props;\r\n        if (tabsConfig[name]) {\r\n            let { pkcode } = tabsConfig[name];\r\n            this.mainSource.setStore('cardTable_pkcode', pkcode, false);\r\n        }\r\n    }\r\n\r\n    // componentWillUnmount(){\r\n    //     for (let source of this.props.metaTabs) {\r\n    //         props.tabsStore[source].removeRef(this);\r\n    //     }\r\n    // }\r\n\r\n    getMainCode = (meta, activeCode) => {\r\n        let { metaTabs } = this.props;\r\n        let mainCode = activeCode;\r\n        for (let code of metaTabs) {\r\n            if (meta.gridrelation && meta.gridrelation[code]) {\r\n                let relation = meta.gridrelation[code].tabRelation;\r\n                if (isArray(relation) && relation.includes(activeCode)) {\r\n                    mainCode = code;\r\n                }\r\n            }\r\n        }\r\n        return mainCode;\r\n    }\r\n\r\n    getCurrentProps = () => {\r\n        // debugger;\r\n        let { name, tabsStore, tabsConfig } = this.props;\r\n        let { activeCode } = this.mainSource.getStore('tableSwitch');\r\n\r\n        let currentMainCode = activeCode;\r\n        let meta = tabsStore[name].getStore('meta');\r\n        if (meta[activeCode]) {\r\n            currentMainCode = this.getMainCode(meta, activeCode);\r\n        }\r\n\r\n        //当前激活页签主区域store和config\r\n        return {\r\n            currentSource: tabsStore[currentMainCode],\r\n            currentConfig: tabsConfig[currentMainCode] || {},\r\n            currentMainCode: currentMainCode,\r\n        }\r\n    }\r\n\r\n    // 给表单用\r\n    onBeforeEvent = async params => {\r\n        //当前激活页签主区域store和config\r\n        let { currentSource, currentConfig, currentMainCode } = this.getCurrentProps();\r\n        let { onBeforeEvent } = currentConfig;\r\n        let {\r\n            getTrueRowIndex,\r\n            setTableProps,\r\n        } = currentSource;\r\n\r\n        let {\r\n            record,\r\n            rowKey,\r\n            rowKeyValue,\r\n            rowIndex,\r\n            attrcode,\r\n            column,\r\n            value = {},\r\n            validated,\r\n            event,\r\n            triggerType, // onClick || onFocus\r\n        } = params;\r\n\r\n        // 用于解决点击前赋值不上的问题\r\n        setTableProps(\"currentIndex\", getTrueRowIndex({ rowIndex: rowIndex }), false);\r\n        setTableProps(\r\n            \"currentInfo\",\r\n            { record, index: rowIndex },\r\n            false,\r\n        );\r\n\r\n        // 处理校验状态\r\n        if (validated === false) {\r\n            let name = currentSource.getStore(\"name\");\r\n            let activeCode = this.mainSource.getStore(['tableSwitch', 'activeCode']);\r\n            let validateFailed = this.mainSource.getCache(['validateFailed', name, activeCode]);\r\n\r\n            if (validateFailed && validateFailed[rowKeyValue]) {\r\n                let oldLen = Object.keys(validateFailed).length;\r\n                delete validateFailed[rowKeyValue][attrcode];\r\n\r\n                if (oldLen > 0 && Object.keys(validateFailed[rowKeyValue]).length === 0) {\r\n                    delete validateFailed[rowKeyValue];\r\n                    this.mainSource.refresh();\r\n                }\r\n            }\r\n        }\r\n\r\n        // 检验输入字符长度\r\n        if (\r\n            triggerType === \"onFocus\" &&\r\n            column.maxlength\r\n        ) {\r\n            event.target.isFlag = false;\r\n            event.target.addEventListener(\r\n                \"compositionstart\",\r\n                e => {\r\n                    e.target.isFlag = true;\r\n                },\r\n                false,\r\n            );\r\n            event.target.addEventListener(\r\n                \"compositionend\",\r\n                e => {\r\n                    e.target.isFlag = false;\r\n                    let flag = e.target.isFlag;\r\n                    let val = e.target.defaultValue;\r\n                    // if (!flag && val.length > item.maxlength) {\r\n                    //     // val = val.substring(0, count);\r\n                    //     val = val.substring(0, item.maxlength);\r\n                    //     rows[index].values[item.attrcode].value = val;\r\n                    //     toast({\r\n                    //         color: 'danger',\r\n                    //         title: `${json && json['table_tips']}`,\r\n                    //         // content: `${json && json['table_tips_content']}${item.maxlength / 2}${json && json['table_maxlength_unit']}`\r\n                    //         content: `${json && json['table_tips_content']}${item.maxlength}${json && json['table_maxlength_unit']}`\r\n                    //     });\r\n                    //     e.target && e.target.blur();\r\n                    // }\r\n                },\r\n                false,\r\n            );\r\n            // TODO this.setState({ table: this.state.table });\r\n        }\r\n        // 多语控件都不走这里\r\n        if (column.itemtype !== \"residtxt\") {\r\n            // onFocus 和value  用于批量更改   zhanghengh 18/6/29 先注释，以后可能有用\r\n            currentSource.setCache(\"oldBatchData\", {\r\n                // TODO  转换为过滤后的index\r\n                // 在onchange时缓存列数据的key 和value  用于批量更改   zhanghengh 18/6/29\r\n                batchChangeIndex: rowIndex,\r\n                batchChangeKey: column.attrcode,\r\n                batchChangeValue: value.value,\r\n                batchChangeDisplay: value.display,\r\n                // batchChangeValue: isMulti ? theValue : theValue.value,\r\n                // batchChangeDisplay: isMulti ? null : theValue.display\r\n            });\r\n        } else {\r\n            // 这里批改多语存值可能没用，之后在看一下，先留着\r\n            // 多语批改\r\n            // 这里是多语文本的编辑显示逻辑\r\n            // attrcode字段对应的value是主语言\r\n            // 显示规则是有登陆语言显示登陆语言，登陆语言通过getLangCode获得，没有登陆语言显示主语言，attrcode字段对应的value，主语言语言在没有，就什么也不显示\r\n            // const cellData = record.values[item.attrcode];\r\n            // let value = isObj(cellData) ? (cellData.value ? cellData.value : null) : null;\r\n            // const LangCode = getLangCode();\r\n            // const loginLang = item.languageMeta.filter(i => i.languageCode == LangCode);\r\n            // if (loginLang.length > 0) {\r\n            //     loginLang[0].index === '1' ? (loginLang[0].index = '') : '';\r\n            //     if (\r\n            //         record.values[item.attrcode + loginLang[0].index] &&\r\n            //         record.values[item.attrcode + loginLang[0].index].value\r\n            //     ) {\r\n            //         value = record.values[item.attrcode + loginLang[0].index].value;\r\n            //     }\r\n            // }\r\n            currentSource.setCache(\"oldBatchData\", {\r\n                batchChangeIndex: rowIndex,\r\n                batchChangeKey: column.attrcode,\r\n                batchChangeValue: value.value,\r\n                batchChangeDisplay: null,\r\n            });\r\n        }\r\n\r\n        // 有一些操作要放在这里处理 设置行状态等等\r\n        if (isFunction(onBeforeEvent)) {\r\n            return (\r\n                (await onBeforeEvent({\r\n                    ...params,\r\n                    moduleId: currentMainCode,\r\n                })) !== false\r\n            );\r\n        }\r\n        return true;\r\n    };\r\n\r\n    // 给表单用\r\n    onAfterEvent = async params => {\r\n        //当前激活页签主区域store和config\r\n        //当前激活页签主区域store和config\r\n        let { currentSource, currentConfig, currentMainCode } = this.getCurrentProps();\r\n\r\n        let {\r\n            autoAddRow = {},\r\n            onAfterEvent,\r\n        } = currentConfig;\r\n        let {\r\n            getTableProps,\r\n            setCellValue,\r\n        } = currentSource;\r\n\r\n        let {\r\n            record,\r\n            rowKey,\r\n            rowKeyValue,\r\n            rowIndex,\r\n            attrcode,\r\n            column,\r\n            value = {},\r\n            oldValue = {},\r\n            componentValue,\r\n            event,\r\n            triggerType = \"onChange\", // onChange || onBlur\r\n            isTriggerModal = false,\r\n        } = params;\r\n\r\n        // 多语 获取当前的code\r\n        if (\r\n            column.itemtype === \"residtxt\" &&\r\n            isObject(componentValue)\r\n        ) {\r\n            for (let key in componentValue) {\r\n                if (componentValue[key].current) {\r\n                    // value.value = componentValue[key];\r\n                    // oldValue.value = store.getRowOldValue(record[rowKey], key);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 新旧值\r\n        oldValue.value =\r\n            oldValue.value ||\r\n            currentSource.getRowOldValue(\r\n                record[rowKey],\r\n                attrcode,\r\n            );\r\n\r\n        if (triggerType === \"onBlur\") {\r\n            /*\r\n            * onBlur编辑后 和 切换控件状态\r\n            * 1、input类型    line   编辑后 + 切状态\r\n            *                model  编辑后\r\n            * 2、uninput类型  line   切状态\r\n            *                model  无编辑后  无切状态\r\n            */\r\n\r\n            // 这一段可以考虑去除  输入 类型\r\n            if (isString(value.value)) {\r\n                value.value = value.value.trim();\r\n            }\r\n\r\n            // 当数值类型只输入一个'-'的时候就将它赋值成0\r\n            if (\r\n                column.itemtype === \"number\" &&\r\n                value.value === \"-\"\r\n            ) {\r\n                value.value = 0;\r\n                currentSource.setCellValue({\r\n                    rowKeyValue,\r\n                    attrcode,\r\n                    value,\r\n                });\r\n            }\r\n\r\n            // 侧拉里面的状态\r\n            if (\r\n                column.itemtype === \"select\" &&\r\n                isTriggerModal\r\n            ) {\r\n                currentSource.setCellProps(\r\n                    rowKeyValue,\r\n                    attrcode,\r\n                    { open: false },\r\n                );\r\n            }\r\n\r\n            if (column.itemtype === \"residtxt\") {\r\n                if (isTriggerModal) {\r\n                    // 当侧拉的情况下\r\n                    // 多语  登陆语言值 赋值给主语言\r\n                    // tableModeldata.values[item.attrcode] = {\r\n                    //     ...tableModeldata.values[item.attrcode],\r\n                    //     value: val[item.attrcode].value\r\n                    // };\r\n                } else {\r\n                    // 当表体的情况下\r\n                }\r\n                // 多语  登陆语言值 赋值给主语言\r\n                // 主语言没值时，取登录语言的值\r\n                if (!record.values[attrcode]?.value) {\r\n                    let loginCode = getLangCode(),\r\n                        loginIndex = column.languageMeta.find(e => e.languageCode === loginCode)?.index || '',\r\n                        loginValue = componentValue[attrcode + loginIndex] || componentValue[attrcode];\r\n                    setCellValue({ rowKey, rowKeyValue, rowIndex, attrcode, value: loginValue });\r\n                }\r\n            }\r\n\r\n            // 多语控件都不走这里\r\n            if (column.itemtype !== \"residtxt\") {\r\n                // 在onblur时缓存列数据的key 和value  用于批量更改   zhanghengh 18/6/29\r\n                // pageScope.batchData[moduleId] = {\r\n                //     batchChangeIndex: outputIndex,\r\n                //     batchChangeKey: item.attrcode,\r\n                //     batchChangeValue: record.values[item.attrcode] ? record.values[item.attrcode].value : '',\r\n                //     batchChangeDisplay: record.values[item.attrcode] ? record.values[item.attrcode].display : ''\r\n                // };\r\n            } else {\r\n                // 多语批改\r\n                // 这里是多语文本的编辑显示逻辑\r\n                // attrcode字段对应的value是主语言\r\n                // 显示规则是有登陆语言显示登陆语言，登陆语言通过getLangCode获得，没有登陆语言显示主语言，attrcode字段对应的value，主语言语言在没有，就什么也不显示\r\n                // const cellData = record.values[item.attrcode];\r\n                // let value = isObj(cellData) ? (cellData.value ? cellData.value : null) : null;\r\n                // const LangCode = getLangCode();\r\n                // const loginLang = item.languageMeta.filter(i => i.languageCode == LangCode);\r\n                // if (loginLang.length > 0) {\r\n                //     loginLang[0].index === '1' ? (loginLang[0].index = '') : '';\r\n                //     if (\r\n                //         record.values[item.attrcode + loginLang[0].index] &&\r\n                //         record.values[item.attrcode + loginLang[0].index].value\r\n                //     ) {\r\n                //         value = record.values[item.attrcode + loginLang[0].index].value;\r\n                //     }\r\n                // }\r\n                // pageScope.batchData[moduleId] = {\r\n                //     batchChangeIndex: outputIndex,\r\n                //     batchChangeKey: item.attrcode,\r\n                //     batchChangeValue: value,\r\n                //     batchChangeDisplay: null\r\n                // };\r\n            }\r\n        }\r\n\r\n        // 设置状态  放在  onAfterEvent 事件之前 避免onAfterEvent 修改record报错\r\n        currentSource.setCellProps(\r\n            rowKeyValue,\r\n            attrcode,\r\n            { isEdit: false },\r\n        );\r\n\r\n        // 有一些操作要放在这里处理 设置行状态等等\r\n\r\n        let next =\r\n            isFunction(onAfterEvent) &&\r\n            onAfterEvent(\r\n                {\r\n                    ...params,\r\n                    moduleId: currentMainCode,\r\n                },\r\n                currentSource,\r\n            ) !== false;\r\n\r\n        // 多语 获取当前的code\r\n        if (\r\n            column.itemtype === \"residtxt\" &&\r\n            isObject(componentValue)\r\n        ) {\r\n            for (let key in componentValue) {\r\n                currentSource.saveRowOldValue(\r\n                    record[rowKey],\r\n                    key,\r\n                    componentValue[key].value,\r\n                );\r\n            }\r\n        } else {\r\n            currentSource.saveRowOldValue(\r\n                record[rowKey],\r\n                attrcode,\r\n                value.value,\r\n            );\r\n        }\r\n\r\n        if (!next) {\r\n            console.log(\"not next to run\");\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * 自动增行\r\n         * 增一行的条件：\r\n         * 1、最后一行\r\n         * 2、isAddRow 为true\r\n         * 3、当前单元格值不为空\r\n         */\r\n\r\n        let viewLen = currentSource.getVisibleRows(\r\n            false,\r\n            true,\r\n        ).length;\r\n        let isSwitch_browseDisabled =\r\n            column.itemtype === \"switch_browse\" &&\r\n            column.disabled; // 开关且不可编辑\r\n        let validValue = column.itemtype === 'residtxt' ? value : value.value;\r\n        validValue = column.itemtype === 'refer' ? componentValue : value;\r\n        const isEmpty = isEmptyValue(validValue, column.itemtype);\r\n        const tableStatus = getTableProps('status');\r\n\r\n        if (\r\n            viewLen == rowIndex + 1 &&\r\n            autoAddRow.enabled &&\r\n            !isSwitch_browseDisabled &&\r\n            !isEmpty &&\r\n            tableStatus === \"edit\"\r\n        ) {\r\n            // 添加自动增行后的回调\r\n            currentSource.addTableRow(\r\n                undefined,\r\n                autoAddRow.defaultValue,\r\n                true,\r\n                {\r\n                    callback: autoAddRow.callback,\r\n                    isAutoAddRow: true,\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { name, tabsStore, tabsConfig, metaTabs, langJson = {}, renderItems, getHotKeyConfig, cardTableComponentUpdate, onCellHyperlinkTo } = this.props;\r\n\r\n        let { currentSource, currentConfig, currentMainCode } = this.getCurrentProps();\r\n\r\n        let { getStore, closeSideBox } = currentSource;\r\n        let { record, index, sideBoxVisible, status } = getStore('tableSideBox');\r\n        let meta = getStore('meta');\r\n        let expandedRowKeys = getStore('expandedRowKeys');\r\n\r\n        // console.log('tabsConfig', tabsConfig);  // 点击行时会调用 10多次 有些问题TODO\r\n\r\n        return (\r\n            <div>\r\n                <TabsTable\r\n                    mainCode={name}\r\n                    isMultiTab={true}\r\n                    tabsStore={tabsStore}\r\n                    tabsConfig={tabsConfig}\r\n                    metaTabs={metaTabs}\r\n                    langJson={langJson}\r\n                    renderItems={renderItems}\r\n                    getHotKeyConfig={getHotKeyConfig}\r\n                    cardTableComponentUpdate={cardTableComponentUpdate}\r\n                    onCellHyperlinkTo={onCellHyperlinkTo}\r\n                    isHorizontal={this.props.isHorizontal}\r\n\r\n                    //行展开\r\n                    haveExpandIcon={() => true}\r\n                    expandedRowKeys={expandedRowKeys}\r\n                    expandedRowRender={(record, index) => {\r\n                        return (\r\n                            <SingleRowExpand\r\n                                moduleId={currentMainCode}\r\n                                mainCode={name}\r\n                                tabsStore={tabsStore}\r\n                                record={record}\r\n                                rowIndex={index}\r\n                                meta={meta}\r\n                            />\r\n                        );\r\n                    }}\r\n                />\r\n\r\n                {/* 侧拉框 */}\r\n                {\r\n                    sideBoxVisible &&\r\n                    <TableSideBox\r\n                        mainCode={currentMainCode}\r\n                        store={currentSource}\r\n                        config={{ ...currentConfig, onAfterEvent: this.onAfterEvent, onBeforeEvent: this.onBeforeEvent }}\r\n                        renderItems={renderItems}\r\n                        getHotKeyConfig={getHotKeyConfig}\r\n                        cardTableComponentUpdate={cardTableComponentUpdate}\r\n                        // 传递多语\r\n                        langJson={langJson}\r\n                        show={sideBoxVisible}\r\n                        status={status}\r\n                        data={record}\r\n                        index={index}\r\n                        onClose={closeSideBox}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardTable;","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-07-22 17:59:16\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-01-11 19:39:13\r\n */\r\nimport React, { Component } from 'react';\r\nimport CardTable from '../SingleCardTable';\r\nimport getCardTableStore from '../SingleCardTable/store';\r\nimport { utils } from '@platform/table-core';\r\nconst { isFunction, isArray } = utils;\r\n\r\nexport default class MultiCardTable extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t//模板\r\n\t\tthis.multiCodeArr = null;\r\n\t\t// 存一下id 这个导致 一个store 只能 绑定一个对象\r\n\t\t// 但是没有id 难解决 多来源 主表和多来源本身的共用一个对象的问题\r\n\t\tprops.store && props.store.setStore('name', props.name, false);\r\n\t\t//孙表配置\r\n\t\tthis.tabsStore = { [this.props.name]: this.props.store };\r\n\t\t// 如果要实现 可以通过meta控制 布局 那么 最外层的store 应该绑定在Wrapper层\r\n\t\t// if (!props.store.getRef().length) {\r\n\t\tthis.props.store.setRef && this.props.store.setRef(this);\r\n\t\t// }\r\n\t}\r\n\r\n\tgetMultiCodeArr = () => {\r\n\t\tlet { store, name } = this.props;\r\n\r\n\t\tlet meta = store.getStore('meta');\r\n\t\t//孙表横向多页签的主表区域编码\r\n\t\tlet containerrelation = meta.containerrelation;\r\n\t\tif (containerrelation && Array.isArray(containerrelation[name])) {\r\n\t\t\tthis.multiCodeArr = containerrelation[name];\r\n\r\n\t\t\tthis.setTabsStore(meta);\r\n\t\t}\r\n\t};\r\n\r\n\t// getMainCode= (meta, activeCode)=>{\r\n\t//     let { metaTabs } = this.props;\r\n\t//     let mainCode = activeCode;\r\n\t//     for(let code of metaTabs){\r\n\t//         if(meta.gridrelation && meta.gridrelation[code]){\r\n\t//             let relation =  meta.gridrelation[code].tabRelation;\r\n\t//             if(isArray(relation) && relation.includes(activeCode)){\r\n\t//                 mainCode = code;\r\n\t//             }\r\n\t//         }\r\n\t//     }\r\n\t//     return mainCode;\r\n\t// }\r\n\r\n\tsetTabsStore = (meta) => {\r\n\t\tlet { name, store, mountChildrenStore } = this.props;\r\n\t\tlet tableStores = store.getStore('tableStores');\r\n\t\t//为多页签其它主区域创建Store, 并挂到Page中\r\n\t\tArray.isArray(this.multiCodeArr) &&\r\n\t\t\tthis.multiCodeArr.forEach((item) => {\r\n\t\t\t\titem.forEach((ele) => {\r\n\t\t\t\t\tif (ele !== name) {\r\n\t\t\t\t\t\tlet currentMainCode = ele;\r\n\t\t\t\t\t\t// if (meta[ele]) {\r\n\t\t\t\t\t\t//     currentMainCode = this.getMainCode(meta, ele);\r\n\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\tif (isFunction(mountChildrenStore)) {\r\n\t\t\t\t\t\t\t//待优化:---this绑定到cardTable\r\n\t\t\t\t\t\t\t// this.tabsStore[currentMainCode].setRef(this);\r\n\t\t\t\t\t\t\t// 外部先去取 然后再挂载  把pageScope 上的合并过来\r\n\t\t\t\t\t\t\tmountChildrenStore(currentMainCode, (mountedStore) => {\r\n\t\t\t\t\t\t\t\t// 是否挂载了 Store\r\n\t\t\t\t\t\t\t\tthis.tabsStore[currentMainCode] =\r\n\t\t\t\t\t\t\t\t\tmountedStore || this.tabsStore[currentMainCode] || getCardTableStore();\r\n\t\t\t\t\t\t\t\tthis.tabsStore[currentMainCode].setStore('meta', meta, false);\r\n\t\t\t\t\t\t\t\treturn this.tabsStore[currentMainCode];\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.tabsStore[currentMainCode] = this.tabsStore[currentMainCode] || getCardTableStore();\r\n\t\t\t\t\t\t\tthis.tabsStore[currentMainCode].setStore('meta', meta, false);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// 存储一下 所有cardTable的数据源\r\n\t\t\t\t\t\tstore.setStore('tableStores', this.tabsStore, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tthis.getMultiCodeArr();\r\n\t\tlet { renderItems, onCellHyperlinkTo, getHotKeyConfig, cardTableComponentUpdate } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"multi-cardTable\">\r\n\t\t\t\t{Array.isArray(this.multiCodeArr) &&\r\n\t\t\t\t\tthis.multiCodeArr.map((item, index) => {\r\n\t\t\t\t\t\tlet mainCode = item[0];\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<CardTable\r\n\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\tonCellHyperlinkTo={onCellHyperlinkTo}\r\n\t\t\t\t\t\t\t\t//单来源页签属性\r\n\t\t\t\t\t\t\t\tname={mainCode}\r\n\t\t\t\t\t\t\t\tlangJson={this.props.langJson}\r\n\t\t\t\t\t\t\t\trenderItems={renderItems}\r\n\t\t\t\t\t\t\t\tgetHotKeyConfig={getHotKeyConfig}\r\n\t\t\t\t\t\t\t\tcardTableComponentUpdate={cardTableComponentUpdate}\r\n\t\t\t\t\t\t\t\t//多页签store及多页签config\r\n\t\t\t\t\t\t\t\ttabsStore={this.tabsStore}\r\n\t\t\t\t\t\t\t\t//全部水平排列的横向多页签\r\n\t\t\t\t\t\t\t\tisHorizontal={this.multiCodeArr.length === 1}\r\n\t\t\t\t\t\t\t\ttabsConfig={this.props.multiConfig}\r\n\t\t\t\t\t\t\t\tmetaTabs={item}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","/*\r\n * @Descripttion: 分发单来源 与 多来源\r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-07-07 13:53:43\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2020-09-05 13:57:05\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport useCardTable from './store';\r\nimport TabsTableStore from './components/TabsTable/store';\r\nimport SingleCardTable from './components/SingleCardTable';\r\nimport MultiCardTable from './components/MultiCardTable';\r\nimport { getMultiLang } from \"@platform/api\";\r\n\r\nclass CardTableWrapper extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        props.store.setRef && props.store.setRef(this);\r\n        // console.log(props.store, ' props.store');\r\n        // 为了主表和多来源总数据 共用对象时使用\r\n        props.store.setStore('name', props.name, false);\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        let { store, afterLangload } = this.props;\r\n\r\n        //加载多语\r\n        let callback = json => {\r\n            // this.setState({ json });\r\n            store.setCache('langJson', json || {});\r\n            // console.log(store.getCache('langJson'))\r\n            // 备份一份到全局\r\n            afterLangload && afterLangload(json, store);\r\n            this.forceUpdate();\r\n        };\r\n        getMultiLang({ moduleId: \"page_table\", callback });\r\n    }\r\n\r\n    isMulti() {\r\n        let { name, store } = this.props;\r\n        let meta = store.getStore('meta');\r\n        //孙表横向多页签的主表区域编码\r\n        let containerrelation = meta.containerrelation;\r\n        if (\r\n            containerrelation &&\r\n            Array.isArray(containerrelation[name])\r\n        ) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCardTableProps = isMulti => {\r\n        let { name, store, config, ...other } = this.props;\r\n        if (!isMulti) {\r\n            return {\r\n                tabsStore: { [name]: store },\r\n                tabsConfig: { [name]: config },\r\n                metaTabs: [name],\r\n                name,\r\n                ...other,\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let isMulti = this.isMulti();\r\n        let cardTableProps = this.getCardTableProps();\r\n        let store = this.props.store;\r\n        if (!store || !store.getViewMeta()) {\r\n            return <div className=\"unknow-store\"></div>;\r\n        }\r\n        let langJson = store.getCache('langJson') || {};\r\n        return isMulti ? <MultiCardTable {...this.props} langJson={langJson} /> : <SingleCardTable {...cardTableProps} langJson={langJson} isHorizontal={true} />;\r\n    }\r\n\r\n}\r\n\r\nCardTableWrapper.displayName = 'CardTable';\r\nCardTableWrapper.useCardTable = useCardTable;\r\nCardTableWrapper.TabsTableStore = TabsTableStore;\r\n\r\nexport default CardTableWrapper;","import { PubSub } from '@platform/api';\r\nimport ReactDOM from 'react-dom';\r\nimport { keyByModuleId } from '../WithKeyboardChange/createKeyMap';\r\n\r\n/**\r\n * @desc 根据不同的formItem类型获取可聚焦的input元素\r\n * @types {\r\n *     1: refer,\r\n *     2: input, select, timepicker, dateTimePicker, datePicker, number,\r\n *     3: textarea\r\n * }\r\n * @matchItemFocus{\r\n *     refer: func\r\n * }\r\n */\r\nlet matchItemFocus = {\r\n    refer: setReferItemFocus,\r\n    input: setNormalItemFocus,\r\n    textarea: setTextAreaFocus,\r\n    select: setSelectItemFocus,\r\n    switch: setSwitchItemFocus,\r\n    switch_browse: setSwitchItemFocus,\r\n    normal: setNormalItemFocus,\r\n};\r\nfunction setReferItemFocus(selector) {\r\n    // let dom = ReactDOM.findDOMNode(component);\r\n    let dom = selector && document.querySelector(selector);\r\n    let inputEl = dom && dom.querySelector(\"input[tabindex='0']\");\r\n    let spanEl = dom && dom.querySelector(\"span[tabindex='0']\");\r\n\r\n    if (inputEl) {\r\n        //元素存在就让它聚焦\r\n        inputEl.focus();\r\n        dom = null;\r\n    } else if (spanEl) {\r\n        spanEl.focus();\r\n        dom = null;\r\n    } else {\r\n        dom && dom.addEventListener(\r\n            'DOMSubtreeModified',\r\n            //autoFocusInTricky.bind(null, dom)\r\n            function wrap(e) {\r\n                autoFocusInTricky(dom, wrap, e);\r\n            },\r\n        );\r\n    }\r\n    // dom = null;\r\n    inputEl = null;\r\n    spanEl = null\r\n}\r\n\r\n/**\r\n * todo: 由于refer组件是异步加载，input获取焦点时无法得到dom元素，因此在这儿监听dom更改事件, 希望在refer内部触发一个告诉外部，组件一渲染完成\r\n */\r\n\r\nfunction autoFocusInTricky(dom, fn, e) {\r\n    let inputEl = e.target.querySelector(\"input[tabindex='0']\");\r\n    // inputEl = null\r\n    if (inputEl) {\r\n        setTimeout(() => {\r\n            inputEl.focus();\r\n            dom && dom.removeEventListener('DOMSubtreeModified', fn);\r\n            inputEl = null;\r\n            dom = null;\r\n        });\r\n    }\r\n}\r\n\r\nfunction setNormalItemFocus(selector) {\r\n    // let dom = ReactDOM.findDOMNode(component);\r\n    let dom = selector && document.querySelector(selector);\r\n    let inputEl = dom && dom.querySelector('input');\r\n\r\n    inputEl && inputEl.focus();\r\n    dom = null;\r\n    inputEl = null;\r\n}\r\n\r\nfunction setTextAreaFocus(selector) {\r\n    // let dom = ReactDOM.findDOMNode(component);\r\n    let dom = selector && document.querySelector(selector);\r\n    let textEl = dom && dom.querySelector('textarea');\r\n\r\n    textEl && textEl.focus();\r\n    dom = null;\r\n    textEl = null;\r\n}\r\n\r\nfunction setSelectItemFocus(selector) {\r\n    // let dom = ReactDOM.findDOMNode(component);\r\n    let dom = selector && document.querySelector(selector);\r\n    let focusDom = dom && dom.querySelector('.u-select-selection[tabindex]') || dom.querySelector('input');\r\n\r\n    focusDom && focusDom.focus();\r\n    dom = null;\r\n    focusDom = null;\r\n}\r\n\r\nfunction setSwitchItemFocus(selector) {\r\n    // let dom = ReactDOM.findDOMNode(component);\r\n    let dom = selector && document.querySelector(selector);\r\n    let switchEl = dom && dom.querySelector('span[tabindex]');\r\n\r\n    switchEl && switchEl.focus();\r\n    dom = null;\r\n    switchEl = null;\r\n}\r\n\r\n//标签切换时首个自动聚焦\r\nfunction cellFocusAfterTabChange(item) {\r\n    if (keyByModuleId[item]) {\r\n        let focusItem = keyByModuleId[item].firstItem;\r\n\r\n        let moduleId = keyByModuleId[item] && keyByModuleId[item]['parent']\r\n            ? keyByModuleId[item]['parent']\r\n            : item;\r\n        focusItem && PubSub.publish('autoFocus', {\r\n            data: focusItem,\r\n            force: true,\r\n            moduleId,\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    matchItemFocus,\r\n    cellFocusAfterTabChange,\r\n};\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./es/react-hotkeys.production.min.js');\n} else {\n  module.exports = require('./es/index.js');\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * @desc 表格可编辑的状态下checkbox类型的单元格没有浏览态与编辑态之分, 因此需要在checkbox的属性上去判断此单元格是否可编辑\r\n */\r\nexport function checkboxInTable(dom) {\r\n\tif (dom.tagName !== 'INPUT') return false;\r\n\r\n\t//如果是不可编辑的checkbox就继续查找下一个可聚焦元素\r\n\tif (dom && dom.disabled === true) {\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__42__;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { config as CONFIG } from '@platform/api'\r\nimport { matchItemFocus } from '../../WithAutoFocus/executeAutoFocus';\r\n\r\nfunction findNextFocusItemInForm(nextModuleKeyMap, nextModuleId) {\r\n  let wrapper = document.querySelector(`#${CONFIG.hotKeyModuleIdPrefix}-${nextModuleId}`);\r\n  let formItem = wrapper.querySelector(`.${nextModuleKeyMap.firstItem}`);\r\n  let type = getFormType(formItem);\r\n  matchItemFocus[type] === undefined\r\n    ? matchItemFocus['normal'](wrapper)\r\n    : matchItemFocus[type](wrapper);\r\n}\r\n\r\nfunction findLastFocusItemInForm(nextModuleKeyMap, nextModuleId) {\r\n\r\n}\r\n\r\nfunction getFormType(formItem) {\r\n  return Array.prototype.find.call(formItem.classList, function (item) {\r\n    return item.startsWith('js-type');\r\n  }).split('-')\r\n    .pop();\r\n}\r\n\r\nexport {\r\n  findNextFocusItemInForm,\r\n  findLastFocusItemInForm\r\n};\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\r\n * @desc：有些行整行不可编辑，添加了标示tabindex = -1,一直循环找到可编辑的行数\r\n * @param tr {node} 当前行不可编辑的行\r\n * @param needJumpTimes {number} 向上/下查找的行数\r\n * @param direction {string}  'down'/ 'up' 向上或向下查找\r\n * @return 返回需要向上/下查找的行数\r\n */\r\nexport default function calculateNeedJumpTimes(tr, needJumpTimes, direction) {\r\n    let tempTr = tr;\r\n    let tempNeedJumpTimes = needJumpTimes;\r\n    while (tempTr !== null && tempTr.getAttribute('tabindex') === '-1') {\r\n        tempNeedJumpTimes += 1;\r\n        tempTr = direction === 'up' ? tempTr.previousElementSibling : tempTr.nextElementSibling;\r\n    }\r\n    return tempNeedJumpTimes;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && objectToString.call(value) == boolTag);\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isBoolean;\n","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;","const availableFormItems = ['input', 'textarea', 'number', 'refer', 'datepicker', 'datetimepicker', 'timepicker', 'select', 'switch', 'residtxt', 'checkbox_switch'];\r\nconst availableTableItems = ['refer', 'datepicker', 'input', 'datetimepicker', 'timepicker', 'select', 'number', 'residtxt', 'checkbox_switch', 'rangepicker', 'datePickerNoTimeZone', 'TZDatePickerStart', 'TZDatePickerStart', 'switch'];\r\n\r\nexport {\r\n    availableFormItems,\r\n    availableTableItems,\r\n};\r\n","\r\nimport { availableFormItems, availableTableItems } from './config/availableItems';\r\nimport { MODULE_TYPE } from './config/moduleType';\r\nimport { config as CONFIG, PubSub } from '@platform/api';\r\n\r\n/**\r\n * 我们要生成的数据格式\r\n *\r\n * @keyByModuleId = {\r\n *     moduleId1: {\r\n *         firstItem: 'attrCode1',\r\n *         lastItem: 'attrCode2',\r\n *         type: 'form'\r\n *     },\r\n *     moduleId2: {\r\n *         firstItem: 'attrCode3',\r\n *         lastItem: 'attrCode4',\r\n *         type: 'table',\r\n *         children: ['moduleId3', 'moduleId4'] // 表示此表格的关联表有哪些\r\n *     },\r\n *     moduleId3: {\r\n *         firstItem: 'attrCode3',\r\n *         lastItem: 'attrCode4',\r\n *         type: 'table',\r\n *         parent: 'moduleId3', // 表示此表格的主表是哪个，\r\n *         activeTable: 'moduleId3' //对于多页签的表格添加此字段表示当显示的是哪个页签，第一次渲染默认展示主\r\n *                                    表\r\n *     }\r\n * }\r\n *\r\n * @formDisableAttrCode = {\r\n *     moduleId: {\r\n *         attrCode1: true,\r\n *         attrCode2: false\r\n *     }\r\n * }\r\n */\r\nlet keyByModuleId = {};\r\nlet formDisableAttrCode = {};\r\nlet tableDisabledAttrCode = {};\r\nlet orderOfHotKey = [];\r\nconst hotKeyPrefix = CONFIG.hotKeyModuleIdPrefix;\r\n\r\n/**\r\n * @desc 实现上面所描述的数据格式\r\n * @param props\r\n * @param force 是否强制执行，如果是通过业务组调用executeAutoFocus方法执行，就强制执行聚焦方法， 默认false\r\n */\r\nfunction keyMapOfForm(props, force = false) {\r\n    let { name } = props;\r\n    let { meta, orderOfHotKey: newOrderOfHotKey } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n\r\n    // 可以考虑加个参数控制整个快捷键  TOOD\r\n    if (!props.getHotKeyConfig) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n\r\n    let formItems = meta[name]['items'];\r\n    orderOfHotKey = newOrderOfHotKey;\r\n\r\n    let itemsAttrCode = formItems.filter(item => {\r\n        return isAvailableFormItem(item, name);\r\n    }).map(item => {\r\n        return item.attrcode;\r\n    });\r\n\r\n    if (formAutoFocusJudgement(name, force)) {\r\n        keyByModuleId[name] = {\r\n            firstItem: itemsAttrCode[0],\r\n            type: MODULE_TYPE.form,\r\n        };\r\n        let firstItemKey = itemsAttrCode[0];\r\n        PubSub.publish('autoFocus', { data: firstItemKey });\r\n    }\r\n}\r\n\r\n/**\r\n * @desc：keyMapOfForm方法会根据form的状态执行多次。\r\n * 现象：只要meta里面的数据一更改就会重新聚焦到第一个可编辑元素上。\r\n * 解决：keyByModuleId里是否存在此moduleId作为标示，\r\n */\r\nfunction formAutoFocusJudgement(name, force) {\r\n    return (keyByModuleId[name] === undefined && orderOfHotKey[0] === name) || force;\r\n}\r\n\r\n/**\r\n * @desc 判断此item是否需要在按tab键获得焦点\r\n * @param item\r\n * @param name\r\n * @returns {boolean}\r\n */\r\nfunction isAvailableFormItem(item, name) {\r\n    let metaRes = availableFormItems.includes(item.itemtype) &&\r\n        item.disabled !== true &&\r\n        item.visible !== false;\r\n\r\n    let itemDisabled = !!(formDisableAttrCode[name] &&\r\n        formDisableAttrCode[name][item.attrcode] === true);\r\n    return metaRes && !itemDisabled;\r\n}\r\n\r\n/**\r\n *\r\n * @param props\r\n * @param force {Boolean} 是否强制执行\r\n */\r\nfunction keyMapOfTable(props, force = false) {\r\n    let { name, high_hotkey, getHotKeyConfig } = props;\r\n\r\n    // console.log(high_hotkey, getHotKeyConfig)\r\n    let { withHotKeyChange, meta, orderOfHotKey: newOrderOfHotKey } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n    if (!props.getHotKeyConfig || !newOrderOfHotKey) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n    orderOfHotKey = newOrderOfHotKey;\r\n    let { store, tableId } = high_hotkey;\r\n\r\n    let columns = meta[tableId] && meta[tableId].items;\r\n    let rows = store.getData();\r\n    let lastRowIndex = rows.length - 1;\r\n    let availableItems = columns && iteratorTableColumns(tableId, columns, []);\r\n\r\n    if (rows && rows.length === 0) return;\r\n    processKeyMapOfTable({ tableId, availableItems, lastRowIndex, moduleType: MODULE_TYPE.cardTable, force });\r\n    if (hasTabRelation(props, tableId) && keyByModuleId[tableId]) {\r\n        createTabRelationKeyMap(props, tableId, lastRowIndex);\r\n        //设置关联表\r\n        keyByModuleId[tableId].children = meta.gridrelation[tableId].tabRelation;\r\n    }\r\n}\r\n\r\nfunction keyMapOfEditTable(props, force = false) {\r\n    let { name, high_hotkey, getHotKeyConfig } = props;\r\n    // console.log(high_hotkey, getHotKeyConfig)\r\n    let { withHotKeyChange, meta, orderOfHotKey: newOrderOfHotKey } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n    if (!props.getHotKeyConfig || !newOrderOfHotKey) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n    orderOfHotKey = newOrderOfHotKey;\r\n    let { store, tableId } = high_hotkey;\r\n\r\n    let columns = meta[tableId] && meta[tableId].items;\r\n    let rows = store.getData();\r\n    let lastRowIndex = rows.length - 1;\r\n    let availableItems = columns && iteratorTableColumns(tableId, columns, []);\r\n\r\n    if (rows && rows.length === 0) return;\r\n\r\n    processKeyMapOfTable({ tableId, availableItems, lastRowIndex, moduleType: MODULE_TYPE.editTable, force });\r\n}\r\n\r\nfunction iteratorTableColumns(tableId, iterable, pool) {\r\n    return iterable.reduce((pre, next) => {\r\n        if (next.children) {\r\n            iteratorTableColumns(tableId, next.children, pre);\r\n        } else {\r\n            isAvailableTableItem(tableId, next)\r\n                ? pre.push(next.attrcode)\r\n                : pre;\r\n        }\r\n\r\n        return pre;\r\n    }, pool);\r\n}\r\n\r\nfunction isAvailableTableItem(moduleId, item) {\r\n    //如果业务组通过table的api修改可编辑性，就根据业务组的设置的只返回，不去读meta里面的值\r\n    if (tableDisabledAttrCode[moduleId]) {\r\n        if (tableDisabledAttrCode[moduleId][item.attrcode] === false) {\r\n            return false;\r\n        }\r\n\r\n        if (tableDisabledAttrCode[moduleId][item.attrcode] === true) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return availableTableItems.includes(item.itemtype) &&\r\n        item.visible !== false &&\r\n        item.disabled !== true &&\r\n        item.attrcode !== undefined;\r\n}\r\n\r\nfunction processKeyMapOfTable({ moduleId, availableItems, lastRowIndex, moduleType, force }) {\r\n    let firstItem = `${hotKeyPrefix}-${moduleId}-${availableItems[0]}-0`;\r\n    let lastAvailableItem = availableItems.length - 1;\r\n    let lastItem = `${hotKeyPrefix}-${moduleId}-${availableItems[lastAvailableItem]}-${lastRowIndex}`;\r\n\r\n    publishFocusItem({ orderOfHotKey, moduleId, firstItem, force });\r\n\r\n    keyByModuleId[moduleId] = {\r\n        firstItem,\r\n        lastItem,\r\n        type: moduleType,\r\n        activeTable: moduleId,\r\n    };\r\n}\r\n\r\n/**\r\n * @desc    原因：此方法是在componentDidUpdate生命周期里调用的。\r\n *          现象：只要meta里面的数据一更改就会重新聚焦到第一个可编辑元素上。\r\n *          解决：keyByModuleId里是否存在此moduleId作为标示\r\n *\r\n * @param orderOfHotKey\r\n * @param moduleId\r\n * @param firstItem\r\n * @param force 是否强制执行，如果是业务组通过executeAutoFocus api 执行的，就强制执行\r\n */\r\nfunction publishFocusItem({ orderOfHotKey, moduleId, firstItem, force }) {\r\n    if (tableAutoFocusJudgement({ orderOfHotKey, moduleId, force })) {\r\n        PubSub.publish('autoFocus', { data: firstItem, moduleId });\r\n    }\r\n}\r\n\r\nfunction tableAutoFocusJudgement({ orderOfHotKey = [], moduleId, force }) {\r\n    return (orderOfHotKey[0] === moduleId && keyByModuleId[moduleId] === undefined) || force;\r\n}\r\n\r\n/**\r\n * @desc 判断此table是否有tabRelation\r\n * @param props {object}\r\n * @param moduleId {string}\r\n */\r\n\r\nfunction hasTabRelation(props, moduleId) {\r\n    // console.log(high_hotkey, getHotKeyConfig)\r\n    let { meta } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n    if (!props.getHotKeyConfig) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n\r\n    let tabRelation = meta.gridrelation &&\r\n        meta.gridrelation[moduleId].tabRelation;\r\n\r\n    return !!(tabRelation && tabRelation.length > 1);\r\n}\r\n\r\nfunction createTabRelationKeyMap(props, moduleId, lastRowIndex) {\r\n    let { meta } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n    if (!props.getHotKeyConfig) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n\r\n    let tabRelation = meta.gridrelation[moduleId].tabRelation;\r\n\r\n    tabRelation.forEach(item => {\r\n        //因为主表keyMap已经生成不需要重复执行\r\n        if (item !== moduleId) {\r\n            let columns = meta[item] &&\r\n                meta[item].items;\r\n            let availableItems = columns && iteratorTableColumns(moduleId, columns, []);\r\n            let code = meta[item].code;\r\n\r\n            let firstItem = `${hotKeyPrefix}-${moduleId}-${availableItems[0]}-0`;\r\n            let lastAvailableItem = availableItems[availableItems.length - 1];\r\n\r\n            let lastItem = `${hotKeyPrefix}-${moduleId}-${lastAvailableItem}-${lastRowIndex}`;\r\n            /**\r\n             * @type {{parent: string}} 表明此此标签页属于哪个区域ID\r\n             */\r\n            keyByModuleId[code] = {\r\n                firstItem,\r\n                lastItem,\r\n                type: MODULE_TYPE.cardTable,\r\n                parent: moduleId,\r\n            };\r\n        }\r\n    });\r\n}\r\n\r\nfunction deleteKeyByModuleId(moduleId) {\r\n    delete keyByModuleId[moduleId];\r\n}\r\n\r\nfunction setFormDisableAttrCode(moduleId, values) {\r\n    formDisableAttrCode[moduleId] = values;\r\n}\r\n\r\n/**\r\n *\r\n * @param disabledValue {boolean} 是否可编辑 true -> 可编辑 false -> 不可编辑\r\n * @param moduleId  {string}\r\n * @param attrcode {string}\r\n */\r\nfunction editTableFieldEditable(disabledValue, moduleId, attrcode) {\r\n    if (tableDisabledAttrCode[moduleId] === undefined) {\r\n        tableDisabledAttrCode[moduleId] = { [attrcode]: disabledValue };\r\n    } else {\r\n        tableDisabledAttrCode[moduleId][attrcode] = disabledValue;\r\n    }\r\n}\r\n\r\nfunction getFirstItem(moduleId) {\r\n    return keyByModuleId[moduleId] &&\r\n        keyByModuleId[moduleId].firstItem;\r\n}\r\n\r\nfunction setValueOfActiveTable({ moduleId, activeKey }) {\r\n    let moduleInfo = keyByModuleId[moduleId];\r\n    if (moduleInfo) {\r\n        moduleInfo.activeTable = activeKey;\r\n    }\r\n}\r\n\r\nlet createByModuleType = {\r\n    form: keyMapOfForm,\r\n    table: keyMapOfTable,\r\n    editTable: keyMapOfEditTable,\r\n};\r\n\r\nexport {\r\n    createByModuleType,\r\n    keyByModuleId,\r\n    orderOfHotKey,\r\n    deleteKeyByModuleId,\r\n    setFormDisableAttrCode,\r\n    editTableFieldEditable,\r\n    getFirstItem,\r\n    setValueOfActiveTable,\r\n};"],"sourceRoot":""}