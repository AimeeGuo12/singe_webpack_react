{"version":3,"sources":["webpack://@platform/[name]/webpack/universalModuleDefinition","webpack://@platform/[name]/webpack/bootstrap","webpack://@platform/[name]/external {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://@platform/[name]/external \"@platform/api/index\"","webpack://@platform/[name]/./node_modules/react-hotkeys/es/react-hotkeys.production.min.js","webpack://@platform/[name]/./node_modules/mousetrap/mousetrap.js","webpack://@platform/[name]/external \"@platform/template/index\"","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/config/moduleType.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/getCellIdentity.js","webpack://@platform/[name]/./node_modules/bee-table/build/lib/sort.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/findNextFocusItemInTable.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/column/Title.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/column/CellIcon.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/column/Cell.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/column/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/pagination/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/selectRow/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/indexCol/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/checkCol/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/errorCol/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/simpleTableModal/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/simpleTableModal/createRefer.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/total/util.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/total/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/filter/panel.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/filter/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/selectable/Selector/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/selectable/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/excel/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/sort/sort.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/sort/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/contextMenu/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/lib/hotkey/index.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/EditTableStore.js","webpack://@platform/[name]/./src/platform/components/WithAutoFocus/executeAutoFocus.js","webpack://@platform/[name]/./node_modules/prop-types/index.js","webpack://@platform/[name]/./node_modules/lodash.isequal/index.js","webpack://@platform/[name]/./node_modules/react-hotkeys/index.es.js","webpack://@platform/[name]/./node_modules/warning/browser.js","webpack://@platform/[name]/external \"@platform/base/index\"","webpack://@platform/[name]/(webpack)/buildin/global.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/handleSpecialCase.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/findPrevFoucsItemInTable.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/findUpStairsFocusItemInTable.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/findDownStairsFocusItemInTable.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/handleKeyDown.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/config.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/config/stopHotKeyChange.js","webpack://@platform/[name]/(webpack)/buildin/module.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/findNextFocusItemInForm.js","webpack://@platform/[name]/./node_modules/classnames/index.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/util/calculateNeedJumpTimes.js","webpack://@platform/[name]/external {\"root\":\"ReactDOM\",\"var\":\"ReactDOM\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\"}","webpack://@platform/[name]/./node_modules/lodash.isboolean/index.js","webpack://@platform/[name]/./node_modules/lodash.isobject/index.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/config/tableKeyboardMap.js","webpack://@platform/[name]/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://@platform/[name]/./src/platform/components/Table/tableLibs/utils/index.js","webpack://@platform/[name]/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://@platform/[name]/./src/platform/components/WithAutoFocus/TableWithAutoFocus.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/EditTableWithKeyboardChange.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/TableWithKeyboardChange.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/config/availableItems.js","webpack://@platform/[name]/./src/platform/components/WithKeyboardChange/createKeyMap.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","classCallCheck","e","TypeError","createClass","length","configurable","writable","_extends","assign","arguments","inherits","constructor","setPrototypeOf","__proto__","objectWithoutProperties","indexOf","possibleConstructorReturn","ReferenceError","FocusTrap","this","getPrototypeOf","apply","props","component","children","createElement","tabIndex","hasChanged","propTypes","onFocus","func","onBlur","oneOfType","string","node","defaultProps","HotKeys","hotKeyParent","hotKeyMap","__hotKeyMap__","updateMap","buildMap","context","keyMap","__mousetrap__","attach","findDOMNode","updateHotKeys","childHandledSequence","reset","handlers","a","syncHandlersToMousetrap","getMap","keys","forEach","Array","isArray","sequencesFromKeyMap","action","sequence","push","callback","focused","__isFocused__","__lastChildSequence__","bool","any","childContextTypes","contextTypes","withHotKeys","_setRef","state","setState","_ref","hotKeyHandlers","ref","HotKeyMapMixin","getChildContext","componentWillMount","document","undefined","_REVERSE_MAP","_MAP","8","9","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","45","46","91","93","224","_KEYCODE_MAP","106","107","109","110","111","186","187","188","189","190","191","192","219","220","221","222","_SHIFT_MAP","_SPECIAL_ALIASES","test","navigator","platform","toString","Mousetrap","_bindMultiple","unbind","trigger","_directMap","_callbacks","stopCallback","element","className","_belongsTo","ancestor","parentNode","target","composedPath","initialEventTarget","tagName","isContentEditable","handleKey","self","_handleKey","addKeycodes","init","documentMousetrap","method","charAt","_addEvent","type","addEventListener","attachEvent","_characterFromEvent","character","String","fromCharCode","which","shiftKey","toLowerCase","_isModifier","_pickBestAction","modifiers","_getReverseMap","_getKeyInfo","combination","replace","split","_keysFromString","targetElement","_resetTimer","_sequenceLevels","_ignoreNextKeyup","_ignoreNextKeypress","_nextExpectedAction","_resetSequences","doNotReset","activeSequences","_getMatches","sequenceName","level","modifiers1","modifiers2","matches","seq","metaKey","ctrlKey","sort","join","deleteCombo","combo","deleteSequence","splice","_fireCallback","srcElement","preventDefault","returnValue","_preventDefault","stopPropagation","cancelBubble","_stopPropagation","_handleKeyEvent","keyCode","altKey","_eventModifiers","_bindSequence","_increaseSequence","nextAction","clearTimeout","setTimeout","_callbackAndReset","wrappedCallback","_bindSingle","info","callbacks","maxLevel","processedSequenceCallback","Math","max","ignoreThisKeypress","combinations","MODULE_TYPE","form","cardTable","editTable","getCellIdentity","td","div","querySelector","attributes","cellIdentity","values","find","item","startsWith","CONFIG","hotKeyModuleIdPrefix","source","Table","Icon","_class","_temp","_initialiseProps","IconType","_Component","SortTable","instance","Constructor","_classCallCheck","_this2","_possibleConstructorReturn","flatColumns","_toFlatColumn","columns","data","_initSort","subClass","superClass","obj","defaults","getOwnPropertyNames","getOwnPropertyDescriptor","_defaults","_inherits","componentWillReceiveProps","nextProps","oldData","concat","parentIndex","_this","index","_flatToColumn","colLen","unshift","filter","render","renderColumnsDropdown","_react2","_react","Component","backSource","_this3","needSort","order","multiSort","getOrderNum","orderNum","changeOrderNum","column","col","getOrderCols","orderCols","field","dataIndex","_sortBy","pre","after","orderColslen","currentIndex","currentCol","getMultiSorterValueFunc","getMultiSorterValue","preKey","afterKey","colSortFun","sorter","_state","_state$oldData","b","toggleSortOrder","_state2","_state2$oldData","seleObj","sortCol","da","sortFun","tempColumns","map","originColumn","sortColumn","iconTypeIndex","sorterClass","sortButton","sortEnable","fieldType","numberSortFn","chineseSortFn","defaultSortFn","prefixCls","onClick","sorterClick","icon","title","parseFloat","localeCompare","sensitivity","findNextFocusItemInTable","eventTarget","ViewModel","orderOfHotKey","parentTd","findParentTd","nextTd","nextElementSibling","currentTr","parentElement","lastTd","findLastTdInRow","checkboxInTable","findNextSiblings","enterTriggerCellId","executeAutoFocus","lastElementChild","currentModuleId","id","tds","querySelectorAll","firstFocusItem","findFirstFocusItemInCurrentModule","jumpToNextModuleFocusItem","perceptionHotKeyConfig","findNextRowTd","tr","console","warn","el","includes","previousElementSibling","currentDiv","nextTr","getAttribute","nextModuleId","orderOfHotKeyLen","nextModuleIndex","calculateNextModuleId","nextModuleKeyMap","keyByModuleId","activeTableKeyMap","activeTable","firstItemDom","firstItem","findNextFocusItemInForm","shouldAutoFocus","ncExecuteFocus","focus","defaultColor","ColumnTitle","attrcode","color","isParent","itemtype","unitActive","titleClassName","classNames","style","cellSelectorKey","required","status","titleIcon","fieldid","getSysFieldid","width","textAlign","isFunction","getParentTypeTitle","getNormalTypeTitle","TIME_TYPES","CellIcon","param","disabled","isSaga_status","cursor","cellIcon","getIcon","datepicker","NCTZDatePickerStart","NCTZDatePickerEnd","timepicker","datetimepicker","rangepicker","datePickerNoTimeZone","Cell","getValue","scale","editable","loginLanguage","loginValue","mainValue","getCellValue","record","rowKey","rowIndex","languageMeta","langJson","languageCode","rowKeyValue","error","display","JSON","parse","stringify","handleCellValue","getCellStatus","editType","visible","selected","actived","disableEditType","renderStatus","renderItem","renderItems","rowVisible","isEdit","rowIsEdit","rowSelected","rowFocused","cellDisabled","cellVisible","cellIsEdit","cellSelected","cellFocused","cellActived","showDrag","validated","leftLine","rightLine","bottomLine","topLine","focusToEdit","autoFocus","isSagaStatus","saga_status","oldCellDisabled","isString","isBoolean","tableEdit","isSwitchType","isCheckboxSwitchType","isCellIconInRight","isAttachment","disableModify","renderType","renderItemInEdit","getCellUI","hyperlinkflag","onCellHyperlinkTo","whichKeyToDisplay","onBeforeEvent","UIProps","setCellProps","onTableCellClick","onAfterEvent","onCellStatusChange","setCellValue","store","__col","onEnter","hotKeyWithArrow","maxlength","others","cellStatus","cellScale","cellValue","customRender","isValidElement","isObject","content","renderInTable","cloneElement","overflow","href","autoOpen","open","autoShow","isCheckChinese","browse","setFieldValue","triggerType","defaultItemCreator","getFieldValue","event","isContinue","oldValue","componentValue","onStatusChange","showIcon","path","cellEdit","handleMouseEnter","cellDom","tipNode","tooltipDelay","showTip","getElementsByClassName","scrollWidth","clientWidth","offsetHeight","onCellClick","tag","$focusElement","contains","tipStatus","itemCreator","unregister","registerField","getScale","selector","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","Closest","valueScale","isWrong","cellClassName","cellUI","bodyDisplayInRow","onCellKeyDown","onCellFocus","onCellMouseDown","tableId","hasCellIcon","cellStyle","cellBgBdClassName","getCellClassName","hotKeyPrefix","autoFocusIdentifier","cellContentClassName","data-code","dom","onMouseEnter","data-type","data-renderType","onKeyDown","itemType","isArrowKeyDown","onMouseDown","placement","overlay","handleBrowseData","datatype","options","multiple","delay","inverse","cellDrag","createColumns","filterColumns","getLangCode","label","timeTypes","redstar","text","mergeCell","formatColumn","ItemProvider","getCellProps","Option","Select","pagination","pageIndexChange","val","pageInfoChange","pageInfo","total","pageSize","newPageInfo","pageIndex","totalPage","ceil","pageSizeChange","hideSelectDropdown","json","selectDom","getMultiLang","checkNum","showPagination","dropdownStyle","Fragment","dropdownClassName","supportSearch","showSearch","supportWrite","showClear","onSelect","onChange","onSearch","ReactDOM","blur","marginLeft","prev","next","boundaryLinks","items","Number","maxButtons","activePage","PropTypes","selectRow","selectedIndex","Set","hasSelected","has","focusIndex","setSelectedIndex","rowSelectedCls","multiSelectRow","rowClassName","onRowClick","onRowDoubleClick","current","cls","selectedIndexs","clear","add","indexCol","indexColConfig","checkColConfig","showIndex","row","numberColum","fixed","showCheck","Item","Menu","checkCol","onCheckChange","rowId","findIndex","chooseStatus","changeCrossSelect","checkInfo","onAllCheckChange","crossPageSelect","menu","checked","checkedAll","disabledAll","indeterminate","tabindex","overlayClassName","animation","getTitle","errorCol","changeColumn","errorCode","oldRender","oldCellClick","rowClick","rowRef","setAttribute","FormItem","Form","displayTypes","simpleTableModal","handleDoSave","tableModelConfirm","closeModal","modelDatas","getStore","operType","tableModeldata","tempObj","modelColumn","isObj","handleScale","handleValue","dist","areaType","rows","handleSubmit","modalConfig","checkSubmitRule","flag","errorTitle","errorInfo","errorType","1","2","toast","HanlderCheckInput","slected","len","HanlderCheckNumber","Infinity","errorIndex","some","checkVal","close","afterEvent","changedrows","setModalValue","getCtx","showModal","formMeta","show","backdrop","onHide","Header","closeButton","Title","Body","showSubmit","useRow","inline","labelMd","md","valuePropsName","showMast","isRequire","labelName","foolValue","rowid","Date","getTime","slice","getSafeRandom","newvalue","oldvalue","refcode","asyncCheck","errorMessage","placeholder","config","refName","refCode","queryGridUrl","refType","queryTreeUrl","isMultiSelectedEnabled","refer","getPopupContainer","zIndex","one","format","getCalendarContainer","moment","RadioGroup","selectedValue","Footer","shape","filterVisible","newColumns","numberPd","istotal","islock","isUndefined","colItem","styleObj","formatNumber","HighTable","addTotalAreaScrollEvent","totalArea","bodyArea","table","headerArea","scrollLeft","addTotalInnerAreaScrollEvent","totalInnerArea","onDropBorder","th","totalBody","newWidth","match","overflowX","onDraggingBorder","hidebodyScrollbar","haveHorizontalScrollBar","outbody","offsetWidth","tableFooter","browser","marginTop","totalTd","paddingTop","handleFooter","totalScaleObj","totalConfig","inserttableTotalConfig","finalColumns","totalData","totalColumns","visibleColumns","getTotalColumns","totalScale","eve","valueItem","itemScale","totalDataObj","isTotal","noTotalRows","noTotalCol","showTotal","allowTotalRows","noTotalCode","code","indexArr","allowTotal","isBooleanType","isNaN","finalScale","sum","formatDot","convertNum","getTotalData","formatAcuracy","getFinalTotalData","checkbox","numberindex","minColumnWidth","height","showHeader","headerScroll","scroll","bodyStyle","minHeight","myBrowser","addScrollEvent","removeScrollEvent","requestAnimationFrame","marginBottom","removeEventListener","footer","params","forceUpdate","ROW_STATUS","log","Modal","handleBrowse","IType","option","formatDatetime","changeTime","isNullOrVoid","getRandomPassword","LangCode","loginLang","getFilterData","allRows","filterFactor","customColData","reduce","currentFactor","factor","factorValue","metaScale","itemKey","filteredRow","filteredRowKeyValues","filteredColumnKey","tableItemValue","LowerTableItemValue","LowerFactorValue","FilterItem","filterFactors","filterItemList","setFilterItemList","afterFilterItemList","factorList","selectedAttr","selectFcous","inputFocus","echoInputValue","useState","inputValue","setInputValue","setSelectedValue","attr","afterFilterItemListCurrent","filteringList","filterItem","filteredList","afterFilterItem","filterStatus","Reflect","deleteProperty","FilterPanel","tableColumns","tableScope","filterData","isReset","handleResetCallBack","handleFilterCallBack","tableName","FilterPanelRef","useRef","afterFilterFactors","filterTips","setFilterTips","useMemo","getFactorList","finalFactorList","currentValue","handleHide","arrColumns","handleFilter","filterResultItem","filterFactorsCurrent","afterFilterFactorsCurrent","filterIndex","newAfterFilterItemListCurrent","newAfterFilterFactorsCurrent","enterCallBack","handleReset","handleHeaderOpen","getRandom","finalFilterItemList","handleCtrlFOpen","allocationSelectedAttrs","useEffect","handleFilterClick","size","backdropClosable","onEntered","childNodes","onExited","draggable","resizable","currentTable","colors","filterRow","onTitleClick","uuid","uuidv4","nonFilterable","high_filter","alloweFilter","panelTitle","createFilterTitle","getFilterPanelItems","columnStatus","OFFSET","getPx","abs","addClass","$dom","isHasClass","Selectable","canvas","$canvas","ele","$sideBox","button","getEnabled","hotkey","drag","$setColumnMenu","isSelect","clearData","clearShape","startPoint","x","clientX","y","clientY","hasSelectorItem","getItemKey","getItem","selectorItem","startItem","onMouseOver","endItem","onMouseMove","response","$selectableShape","X","Y","pageX","offsetY","pageY","offsetX","innerWidth","innerHeight","right","bottom","top","left","moveToScroll","currentKey","startKey","onMouseUp","single","direction","startY","endY","startX","endX","dragEnd","createSelectableShape","receiveItem","shapeCls","fragment","createDocumentFragment","setStyle","appendChild","body","userSelect","$item","$target","$last","reverse","$scroll","overflowY","getScrollParentDOM","sh","step","lt","getBoundingClientRect","st","scrollTop","border","React","unitKey","selectable","Selector","inIEClassName","isIE","parseSelectItem","handleSpecialItem","normalItem","specialItem","selectItems","high_selectable","activeCells","activeSpecialCells","onBatchChange","disabledColType","disabledColumn","disabledBatchColumn","startNormalItem","startSpecialItem","startRowKeyValue","startAttrcode","endNormalItem","endSpecialItem","endRowKeyValue","endAttrcode","columnObjSection","columnCodeSection","getColumnSection","inSection","activeCell","uniqueSelector","enable","selectCell","onDeSelect","onClearData","getPrevSelector","prevSelector","currentRowKeyValue","getSelectorData","prevActiveCells","prevStartKey","prevCurrentKey","isBatch","headerEventNoStop","excel","getPasteData","Promise","resolve","clipboardData","pasteContent","getData","clipboard","readText","then","res","formatPasteData","excelConfig","substr","firstCell","listenCrtlV","pasteRange","tableDom","getActiveCell","getRowOldValue","excelPackageData","handleChildMeta","ICode","isSort","Isorter","front","behind","frontValue","behindValue","Subtr","fvalue","fdisplay","bvalue","bdisplay","handleSortcolumns","sortObj","columnSort","ComplexTable","backSort","sortChange","sortParam","sortData","handleMeta","child","contextMenu","execCommandCopy","btnCode","activeHeads","currentMeta","activedCells","selectedRows","arrayMeta","copyText","getTableContent","wrapper","textElement","select","execCommand","copyContent","getHeadContent","rowKeyValues","getBodyContent","array","start","maxLength","uniqueFlag","TraverNode","nodes","hasSel","j","firstIndex","fill","sortActiveColumn","activeColumn","sortedColumn","sortedActiveColumn","selectedRow","getDisplay","avtiveCodes","contextMenuConfig","handlePasteContent","createContextMenu","contextMenuClick","showBusinessBtn","extendRightMenu","showPasteBtn","copyMenu","classnames","editBussMenu","pasteCell","getCache","currentRowCell","setCache","insert_up","insert_down","copyHandler","componentParams","MetaTable","mousedown","hotKeyWithEnter","high_hotkey","handleCellMouseDown","handleTableCellClick","user","TableWithAutoFocus","EditTableWithKeyboardChange","TableWithKeyboardChange","TableData","keyPath","ArrayData","TableMeta","areacode","moduletype","isArrayData","TreeData","Store","meta","currentInfo","allpks","selectIndex","crossPageSelectIndex","cache","base","beforeEdit","all","afterDel","oldRows","colInitialValue","oldBatchData","getMeta","generateRowKey","setCrossPage","pkname","getCheckInfo","pk","unSaga","checkedAllpage","setStore","_setSelect","rowIdArr","pattern","shouldForceUpdate","setRowsSelected","reverseRowsSelected","rowsLength","selectSize","getConfig","setConfig","_updateAndAddRows","getTableProps","lastRowIndex","newRows","insertRows","query","update","oldRow","newRow","_insertRows","isGenerateRowKey","getExcelReferAjaxData","ajaxData","con","queryCondition","TreeRefActionExt","GridRefActionExt","extraCondition","extraAjaxParam","keyword","pid","defineItems","batchQueryByName","names","sendExcelReferMergeAjax","reqData","otherParams","reject","ajax","url","success","excelReferMergeAjaxSuccess","sendExcelReferNomalAjax","ajaxdata","async","excelReferNomalAjaxSuccess","queryValue","fieldValued","fieldDisplayed","indexs","newChangedRows","ajaxValues","resValue","cell","finalVal","finalDis","rememberCode","materialmnecode","initVal","isRefpk","refpk","theValue","_getValue","finalValues","updateAfterBatchChange","pageScope","areaCode","pasteData","customQueryCondition","isManyCondition","editAfterFlag","pk_defdoclist","dataPowerOperationCode","isDataPowerEnable","loadSelectedData","checkStrictly","referFilter","DataPowerOperationCode","mergeAjaxData","datajson","rqUrl","rqJson","rqCode","handleRelationItems","isMul","anoterTable","getTableHooks","setMeta","setRef","getRef","removeRef","refresh","getViewMeta","getArrayMeta","getColumn","setColumn","getTrueRowIndex","getRows","setRows","setRowProps","getRowProps","setRowsProps","setRowsCellPropsByKey","setRowsCellPropsByIndex","insertRowsAfterIndex","moveRow","removeEmptyRows","setCellsProps","formatData","setTableProps","setData","getViewData","setRowPosition","saveRowOldValue","deleteRowOldValue","saveRowsOldValue","clearRowsOldValue","_clearRowsOldValue","getAllRows","getVisibleRows","getChangedRows","addTableRow","deleteTableRows","setValByKeyAndIndex","setValByKeyAndRowId","updateTableData","updateTableDataByIndexs","updateTableDataByRowId","setTableData","setTableStatus","getValByKeyAndIndex","getValByKeyAndRowKey","pasteRow","getSelectedRows","setRowsSelectedByIndexs","setRowsSelectedByRowKey","setAllRowsSelected","getAllRowsRemoveKeys","getFilterRows","setFiltrateTableData","batchChangeTableData","insertDataByIndexs","setRowStatusByIndexs","setRowsCellValue","updateRows","updateRowsProps","resetTableCaches","setCheckInfo","focusItem","paths","_setColInitialValue","viewMeta","_hasMeta","filterParentColumn","getArrayData","allMeta","tabRelation","gridrelation","itemCode","_generateItemValue","defaultCreator","defaultValue","initialvalue","_generateColInitialValue","_getRowKeyValue","_getCellValue","_setCellValue","updateItem","view","viewData","rowIndexs","defaultAll","finalRowKeyValues","_getRowKeyValues","_getDataByRules","end","indexStart","position","delItem","thorough","origin","edit","rowValues","isMergeInitValue","initialValue","_getColInitialValue","newValue","rule","regexp","prevPageInfo","every","rowKeyvalue","newData","valueKeys","isWrongFalse","OldVal","clearSortStatus","isCache","isTop","resetFilter","isDel","isDeepCopy","noDeleteData","deleteData","isFilter","metaItems","isAutoAddRow","__addRowLock","unFilterData","last","trueIndex","isPromise","_insertRow","result","delItems","includeCurrentRow","_deleteRow","isSetEdit","isUpdateBatch","batchChangeIndex","batchChangeKey","batchChangeValue","batchChangeDisplay","attrcodes","copyRow","excludeKeys","checkRows","alltss","getPageInfo","currentPagePkArr","pkIndex","floor","ts","isStr","isArr","elem","_initValues","langCode","filterRows","k","keyItem","newKeyItem","_getFilterRows","isShowAll","batchData","BaseStore","matchItemFocus","inputEl","spanEl","wrap","fn","autoFocusInTricky","input","setNormalItemFocus","textarea","textEl","focusDom","switch","setSwitchItemFocus","switch_browse","normal","switchEl","argsTag","mapTag","objectTag","setTag","reIsHostCtor","reIsUint","typedArrayTags","freeGlobal","global","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arraySome","predicate","mapToArray","setToArray","set","uid","transform","arrayProto","funcProto","objectProto","coreJsData","funcToString","maskSrcKey","exec","IE_PROTO","nativeObjectToString","reIsNative","RegExp","Buffer","Uint8Array","propertyIsEnumerable","symToStringTag","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","arg","DataView","getNative","Map","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isType","skipIndexes","iteratee","baseTimes","isIndex","assocIndexOf","eq","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","equalFunc","objIsArr","othIsArr","objTag","getTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","byteLength","byteOffset","buffer","message","convert","isPartial","stacked","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","getAllKeys","objLength","othLength","skipCtor","objValue","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsNative","isMasked","baseKeys","Ctor","proto","arrLength","seen","arrValue","othIndex","keysFunc","symbolsFunc","offset","arrayPush","baseGetAllKeys","getSymbols","getMapData","pop","pairs","LARGE_ARRAY_SIZE","resIndex","arrayFilter","symbol","ArrayBuffer","ctorString","isLength","baseUnary","g","findPrevFocusItemInTable","prevTd","firstTd","findFirstTdInRow","findPrevSiblings","tableTr","lastOneIndex","lastFocusItem","findLastChild","findLastFocusItemInCurrentModule","jumpToPrevModuleFocusItem","findPrevRowTd","prevModuleId","currentModuleIndex","prevModuleIndex","calculatePrevModuleId","prevModuleKeyMap","lastItemDom","lastItem","findLastFocusItemInForm","prevTr","divs","lastDiv","findUpStairsFocusItemInTable","upStairTr","jumpedLines","calculateNeedJumpTimes","cellIdentityArray","upStairsLine","upStairsCellIdentity","findDownStairsFocusItemInTable","downStairTr","downStairsLine","ARROW_KEY","hotKeyDatePicker","timer","keyDownOfShiftUp","nextFocus","nextFocusModuleIdIndex","nextFocusModuleId","isLastModule","wrapperDom","moduleInfo","parent","hasTabRelation","activeKey","tableActiveKey","PubSub","publish","activeItemFocus","focusInSelfModule","currentModuleType","nextModuleType","myTable","myEditTable","getDataByFormDataStructure","getDataByCardTableDataStructure","nextItemNotHaveData","handleArrowKeyDown","allTypes","boolean","number","valueTypesExceptNumber","changeTypes","blurTypes","afterBlurTypes","valueTypes","noEditType","delete","beforeFocusTypes","beforeChangeTypes","beforeClickTypes","complete","stopEnterHotKey","stopFormHotKeyChange","autoFocusDeferred","getHotKeyConfig","withHotKeyChange","formStatus","moduleType","stopCardTableHotKeyChange","notEditStatus","stopEditTableHotKeyChange","webpackPolyfill","deprecate","formItem","classList","getFormType","hasOwn","classes","argType","inner","default","needJumpTimes","tempTr","tempNeedJumpTimes","shiftUp","shiftDown","tab","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","arrayOf","elementType","instanceOf","objectOf","oneOf","exact","checkPropTypes","warned","warningOnce","condition","warning","getVarType","v","isNumber","isEmptyValue","debounds","timeout","that","throttle","interval","now","setElementFocusInIE","wantedKeys","ctrlKeyWithUpDown","isEnterKeyDown","polymerizeComponents","components","time","newTime","DongbaToLocalTime","min","endsWith","commafy","addZero","ncRounding","_value","_scale","afterPoint","toFixed","pow","round","num_str","dotIndex","power","resArr","sym","numStr","regExp","subres","num","pointIndex","intPart","pointPart","lastIndexOf","substring","re","dotSplit","padEnd","filterCondition","getMetaIsTotal","pasteLength","cellIndex","trim","currentRow","cellprops","isValid","temp","isDongba","LocalToDongbaTime","mul","scaleData","allData","setPageSizeStorage","pageSizeStore","getGlobalStorage","getPageSizeStoreKey","setGlobalStorage","getPageSizeStorage","appcode","pageTo","getAppCode","pagecode","getPageCode","pageid","userDataJSON","userData","userid","userId","ActiveXObject","WrappedComponent","activeEl","force","tableEL","getElementById","autoFocusToken","subscribe","msg","activeElement","WithAutoFocus","judgeFocus","cellselectorkey","createByModuleType","tableStatusChanged","WithKeyboardChange","deleteKeyByModuleId","availableFormItems","availableTableItems","formDisableAttrCode","tableDisabledAttrCode","formAutoFocusJudgement","isAvailableFormItem","metaRes","itemDisabled","iteratorTableColumns","iterable","pool","isAvailableTableItem","processKeyMapOfTable","availableItems","lastAvailableItem","tableAutoFocusJudgement","publishFocusItem","createTabRelationKeyMap","getFirstItem","setValueOfActiveTable","newOrderOfHotKey","formItems","itemsAttrCode","firstItemKey"],"mappings":"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","file":"table-core/index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"@platform/api/index\"), require(\"@platform/base/index\"), require(\"react-dom\"), require(\"@platform/template/index\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"@platform/api/index\", \"@platform/base/index\", \"react-dom\", \"@platform/template/index\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@platform/table-core/index\"] = factory(require(\"react\"), require(\"@platform/api/index\"), require(\"@platform/base/index\"), require(\"react-dom\"), require(\"@platform/template/index\"));\n\telse\n\t\troot[\"@platform/table-core/index\"] = factory(root[\"React\"], root[\"@platform/api/index\"], root[\"@platform/base/index\"], root[\"ReactDOM\"], root[\"@platform/template/index\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__3__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../../../../platform/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1892);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","/**\n * ISC License\n *\n * Copyright (c) 2018, Aleck Greenham\n *\n * Permission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport PropTypes from\"prop-types\";import React,{Component,PureComponent}from\"react\";import isEqual from\"lodash.isequal\";import ReactDOM from\"react-dom\";import isBool from\"lodash.isboolean\";import isObject from\"lodash.isobject\";var classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},createClass=function(){function e(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,o,n){return o&&e(t.prototype,o),n&&e(t,n),t}}(),_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e},inherits=function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},objectWithoutProperties=function(e,t){var o={};for(var n in e)t.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(e,n)&&(o[n]=e[n]);return o},possibleConstructorReturn=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t},FocusTrap=function(e){function t(){return classCallCheck(this,t),possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return inherits(t,Component),createClass(t,[{key:\"render\",value:function(){var e=this.props,t=e.component,o=e.children,n=objectWithoutProperties(e,[\"component\",\"children\"]);return React.createElement(t,_extends({tabIndex:\"-1\"},n),o)}}]),t}();function sequencesFromKeyMap(e,t){var o=e[t];return o?Array.isArray(o)?o:[o]:[t]}function hasChanged(e,t){return!isEqual(e,t)}FocusTrap.propTypes={onFocus:PropTypes.func,onBlur:PropTypes.func,component:PropTypes.oneOfType([PropTypes.func,PropTypes.string]),children:PropTypes.node},FocusTrap.defaultProps={component:\"div\"};var HotKeys=function(e){function t(e,o){classCallCheck(this,t);var n=possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e,o));return n.onFocus=n.onFocus.bind(n),n.onBlur=n.onBlur.bind(n),n}return inherits(t,Component),createClass(t,[{key:\"getChildContext\",value:function(){return{hotKeyParent:this,hotKeyMap:this.__hotKeyMap__}}},{key:\"componentWillMount\",value:function(){this.updateMap()}},{key:\"updateMap\",value:function(){var e=this.buildMap();return!isEqual(e,this.__hotKeyMap__)&&(this.__hotKeyMap__=e,!0)}},{key:\"buildMap\",value:function(){var e=this.context.hotKeyMap||{},t=this.props.keyMap||{};return _extends({},e,t)}},{key:\"getMap\",value:function(){return this.__hotKeyMap__}},{key:\"componentDidMount\",value:function(){var e=require(\"mousetrap\");this.__mousetrap__=new e(this.props.attach||ReactDOM.findDOMNode(this)),this.updateHotKeys(!0)}},{key:\"componentDidUpdate\",value:function(e){this.updateHotKeys(!1,e)}},{key:\"componentWillUnmount\",value:function(){this.context.hotKeyParent&&this.context.hotKeyParent.childHandledSequence(null),this.__mousetrap__&&this.__mousetrap__.reset()}},{key:\"updateHotKeys\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=this.props.handlers,n=void 0===o?{}:o,r=t.handlers,s=void 0===r?n:r,a=this.updateMap();(e||a||hasChanged(n,s))&&(this.context.hotKeyParent&&this.context.hotKeyParent.childHandledSequence(null),this.syncHandlersToMousetrap())}},{key:\"syncHandlersToMousetrap\",value:function(){var e=this,t=this.props.handlers,o=void 0===t?{}:t,n=this.getMap(),r=[],s=this.__mousetrap__;Object.keys(o).forEach(function(t){var s=o[t];sequencesFromKeyMap(n,t).forEach(function(t){var o=void 0;isObject(t)&&(o=t.action,t=t.sequence),r.push({callback:function(t,o){if((isBool(e.props.focused)?e.props.focused:e.__isFocused__)&&o!==e.__lastChildSequence__)return e.context.hotKeyParent&&e.context.hotKeyParent.childHandledSequence(o),s(t,o)},action:o,sequence:t})})}),s.reset(),r.forEach(function(e){var t=e.sequence,o=e.callback,n=e.action;return s.bind(t,o,n)})}},{key:\"childHandledSequence\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.__lastChildSequence__=e,this.context.hotKeyParent&&this.context.hotKeyParent.childHandledSequence(e)}},{key:\"render\",value:function(){var e=this.props,t=(e.keyMap,e.handlers,e.focused,e.attach,e.children),o=objectWithoutProperties(e,[\"keyMap\",\"handlers\",\"focused\",\"attach\",\"children\"]);return React.createElement(FocusTrap,_extends({},o,{onFocus:this.onFocus,onBlur:this.onBlur}),t)}},{key:\"onFocus\",value:function(){var e;(this.__isFocused__=!0,this.props.onFocus)&&(e=this.props).onFocus.apply(e,arguments)}},{key:\"onBlur\",value:function(){var e;(this.__isFocused__=!1,this.props.onBlur)&&(e=this.props).onBlur.apply(e,arguments);this.context.hotKeyParent&&this.context.hotKeyParent.childHandledSequence(null)}}]),t}();HotKeys.propTypes={keyMap:PropTypes.object,handlers:PropTypes.object,focused:PropTypes.bool,attach:PropTypes.any,children:PropTypes.node,onFocus:PropTypes.func,onBlur:PropTypes.func},HotKeys.childContextTypes={hotKeyParent:PropTypes.any,hotKeyMap:PropTypes.object},HotKeys.contextTypes={hotKeyParent:PropTypes.any,hotKeyMap:PropTypes.object};var withHotKeys=function(e){return function(t){return function(o){function n(e){classCallCheck(this,n);var t=possibleConstructorReturn(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t._setRef=t._setRef.bind(t),t.state={handlers:{}},t}return inherits(n,PureComponent),createClass(n,[{key:\"componentDidMount\",value:function(){this.setState({handlers:this._ref.hotKeyHandlers})}},{key:\"_setRef\",value:function(e){this._ref=e}},{key:\"render\",value:function(){var o=this.state.handlers;return React.createElement(HotKeys,{component:\"document-fragment\",keyMap:e,handlers:o},React.createElement(t,_extends({ref:this._setRef},this.props)))}}]),n}()}};function HotKeyMapMixin(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{contextTypes:{hotKeyMap:PropTypes.object},childContextTypes:{hotKeyMap:PropTypes.object},getChildContext:function(){return{hotKeyMap:this.__hotKeyMap__}},componentWillMount:function(){this.updateMap()},updateMap:function(){var e=this.buildMap();return!isEqual(e,this.__hotKeyMap__)&&(this.__hotKeyMap__=e,!0)},buildMap:function(){var t=this.context.hotKeyMap||{},o=this.props.keyMap||{};return _extends({},t,e,o)},getMap:function(){return this.__hotKeyMap__}}}export{HotKeys,withHotKeys,FocusTrap,HotKeyMapMixin};\n","/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","const MODULE_TYPE = {\r\n    form: 'form',\r\n    cardTable: 'cardTable',\r\n    editTable: 'editTable',\r\n};\r\n\r\nexport {\r\n    MODULE_TYPE,\r\n};","import { config as CONFIG } from '@platform/api'\r\n\r\n/**\r\n * @desc 获得单元格的唯一Id\r\n * @param td {dom}\r\n */\r\n\r\nexport default function getCellIdentity(td) {\r\n\tlet div = td.querySelector('div');\r\n\tif (div && div.attributes) {\r\n\t\tlet attributesArray = Object.values(div.attributes);\r\n\r\n\t\tlet cellIdentity = attributesArray.find(item => {\r\n\t\t\tif (item && item.value.startsWith(CONFIG.hotKeyModuleIdPrefix)) {\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn cellIdentity && cellIdentity.value;\r\n\t}\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports[\"default\"] = sort;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }\n\n/**\n * 参数：prefixCls，默认bee-table,用于设置图标的样式\n * @param {*} Table\n * @param {*} Icon\n */\nfunction sort(Table, Icon) {\n  var _class, _temp, _initialiseProps;\n\n  var IconType = [{\n    'type': 'flat',\n    'icon': 'uf-symlist',\n    'order': 'flatscend'\n  }, {\n    'type': 'up',\n    'icon': 'uf-sortup',\n    'order': 'ascend'\n  }, {\n    'type': 'down',\n    'icon': 'uf-sortdown',\n    'order': 'descend'\n  }];\n\n  return _temp = _class = function (_Component) {\n    _inherits(SortTable, _Component);\n\n    function SortTable(props) {\n      _classCallCheck(this, SortTable);\n\n      var _this2 = _possibleConstructorReturn(this, _Component.call(this, props));\n\n      _initialiseProps.call(_this2);\n\n      var flatColumns = [];\n      _this2._toFlatColumn(props.columns, -1, flatColumns);\n      _this2.state = { data: _this2.props.data, columns: props.columns, flatColumns: flatColumns };\n      _this2._initSort();\n      return _this2;\n    }\n\n    //默认是前端排序，值为true为后端排序\n\n    SortTable.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n\n      if (nextProps.columns !== this.props.columns) {\n        var flatColumns = [];\n        this._toFlatColumn(nextProps.columns, -1, flatColumns);\n        this.setState({ columns: nextProps.columns, flatColumns: flatColumns });\n      }\n\n      if (nextProps.data !== this.props.data) {\n        this.setState({\n          data: nextProps.data,\n          oldData: nextProps.data.concat()\n        }, function () {\n          this._initSort(); // 数据更新后需要重新排序\n        });\n      }\n    };\n\n    /**\n     *column扁平化处理，适应多表头避免递归操作\n     *\n     */\n    SortTable.prototype._toFlatColumn = function _toFlatColumn(columns) {\n      var parentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n      var flatColumns = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n      var _this = this;\n      var children = [];\n      // const flatColumns = _this.state;\n      columns.forEach(function (item, index) {\n        item.parentIndex = parentIndex;\n        children = item.children;\n        flatColumns.push(item);\n        if (children) {\n          // item.children = [];\n          _this._toFlatColumn(children, flatColumns.length - 1, flatColumns);\n        }\n      });\n    };\n\n    /**\n     * column 当前的排序的列\n     * 当有的列不排序时，将该列的orderNum置为‘’，并动态的修改其他列的orderNum。\n     */\n\n    /**\n     * 获取排序字段\n     */\n\n\n    /**\n     * pre：前一条数据\n     * after:后一条数据\n     * orderType:升序、降序\n     */\n\n    /**\n     * 多列排序 先排order为1的，其他的基于已排序的数据排\n     */\n\n    //每个column上添加orderNum属性，不排序时为“”。\n    //点击时orderNum有值则不重新赋值，如果没有值，则取当前column下的有oderNum的length值。并排序\n    //点击置为“”时，动态的设置相关column的orderNum值。并排序\n\n\n    // 默认的比较函数,即字符串比较函数\n\n    // 数值比较函数\n\n\n    // 中文比较函数，按拼音排序\n\n\n    SortTable.prototype._flatToColumn = function _flatToColumn(flatColumns) {\n      var colLen = flatColumns.length;\n      var parentIndex = void 0,\n          rsColumns = [];\n      //每次渲染需要将父类的children置空，避免重复\n      flatColumns.forEach(function (item) {\n        if (item.children) {\n          item.children = [];\n        }\n      });\n      for (var i = colLen - 1; i >= 0; i--) {\n        parentIndex = flatColumns[i].parentIndex;\n        if (parentIndex >= 0) {\n          flatColumns[parentIndex].children.unshift(flatColumns[i]);\n        }\n      }\n      rsColumns = flatColumns.filter(function (item) {\n        return item.parentIndex == -1;\n      });\n      return rsColumns;\n    };\n\n    SortTable.prototype.render = function render() {\n      var columns = this.renderColumnsDropdown(this.state.flatColumns.concat());\n      return _react2[\"default\"].createElement(Table, _extends({}, this.props, { columns: columns, data: this.state.data }));\n    };\n\n    return SortTable;\n  }(_react.Component), _class.defaultProps = { sort: { mode: \"single\", backSource: false } }, _initialiseProps = function _initialiseProps() {\n    var _this3 = this;\n\n    this._initSort = function () {\n      var flatColumns = _this3.state.flatColumns;\n\n      var needSort = false;\n      flatColumns.forEach(function (item) {\n        if (item.order == 'descend' || item.order == 'ascend') {\n          needSort = true;\n          return;\n        }\n      });\n      if (needSort) {\n        var data = _this3.multiSort(flatColumns);\n        _this3.setState({\n          data: data\n        });\n      }\n    };\n\n    this.getOrderNum = function () {\n      var orderNum = 0;\n      //todo 1\n      _this3.state.flatColumns.forEach(function (item, index) {\n        if (item.order == \"ascend\" || item.order == \"descend\") {\n          orderNum++;\n        }\n      });\n      return orderNum ? orderNum : 1;\n    };\n\n    this.changeOrderNum = function (column) {\n      var flatColumns = _this3.state.flatColumns;\n      //todo 2\n\n      flatColumns.forEach(function (col) {\n        if (col.orderNum > column.orderNum) {\n          col.orderNum--;\n        }\n        if (column.key == col.key) {\n          col.orderNum = \"\";\n        }\n      });\n      _this3.setState({ flatColumns: flatColumns });\n    };\n\n    this.getOrderCols = function (columns) {\n      var orderCols = [];\n      //todo 3\n      columns.forEach(function (item) {\n        if (item.order == \"ascend\" || item.order == \"descend\") {\n          orderCols.push({\n            order: item.order,\n            field: item.dataIndex,\n            orderNum: item.orderNum\n          });\n        }\n      });\n      return orderCols;\n    };\n\n    this._sortBy = function (pre, after, orderCols, orderColslen, currentIndex) {\n      var currentCol = orderCols[currentIndex];\n      var getMultiSorterValueFunc = currentCol.getMultiSorterValue;\n      var preKey = pre[currentCol.key];\n      var afterKey = after[currentCol.key];\n      if (getMultiSorterValueFunc) {\n        preKey = getMultiSorterValueFunc(pre, currentCol);\n        afterKey = getMultiSorterValueFunc(after, currentCol);\n      }\n      var colSortFun = currentCol.sorter;\n      if (typeof colSortFun !== 'function') {\n        colSortFun = function colSortFun() {\n          return preKey - afterKey;\n        };\n      }\n      if (preKey == afterKey && currentIndex + 1 <= orderColslen) {\n        return _this3._sortBy(pre, after, orderCols, orderColslen, currentIndex + 1);\n      }\n      if (currentCol.order == \"ascend\") {\n        return colSortFun(pre, after);\n      } else {\n        return -colSortFun(pre, after);\n      }\n    };\n\n    this.multiSort = function (columns) {\n      var _state = _this3.state,\n          data = _state.data,\n          _state$oldData = _state.oldData,\n          oldData = _state$oldData === undefined ? [] : _state$oldData;\n\n      var self = _this3;\n      var orderCols = {},\n          orderColslen = 0;\n      //todo 4\n      columns.forEach(function (item) {\n        if (item.orderNum) {\n          orderColslen++;\n          orderCols[item.orderNum] = item;\n        }\n      });\n      if (orderColslen > 0) {\n        data = data.sort(function (a, b) {\n          return self._sortBy(a, b, orderCols, orderColslen, 1);\n        });\n      } else {\n        data = oldData.concat();\n      }\n      return data;\n    };\n\n    this.toggleSortOrder = function (order, column) {\n      var _state2 = _this3.state,\n          data = _state2.data,\n          _state2$oldData = _state2.oldData,\n          oldData = _state2$oldData === undefined ? [] : _state2$oldData,\n          flatColumns = _state2.flatColumns;\n      var sort = _this3.props.sort;\n\n      var seleObj = void 0;\n      if (!oldData.length) {\n        oldData = data.concat();\n      }\n      var sortCol = void 0;\n      //单列排序，清空其他列的排序\n      if (sort.mode == \"single\") {\n        //todo 5\n        flatColumns.forEach(function (da) {\n          if (da.key == column.key) {\n            seleObj = da;\n          } else {\n            if (da.order) {\n              da.order = \"flatscend\";\n            }\n          }\n        });\n        seleObj.order = order;\n        sortCol = [{ order: order, field: seleObj.dataIndex }];\n        //通过后端请求\n        if (sort.backSource && typeof sort.sortFun === \"function\") {\n          //获取排序的字段和方式\n          sort.sortFun(sortCol);\n        } else {\n          if (order === \"ascend\") {\n            data = data.sort(function (a, b) {\n              return column.sorter(a, b);\n            });\n          } else if (order === \"descend\") {\n            data = data.sort(function (a, b) {\n              return column.sorter(b, a);\n            });\n          } else {\n            data = oldData.concat();\n          }\n          typeof sort.sortFun === \"function\" && sort.sortFun(sortCol, data, oldData);\n        }\n      } else {\n        seleObj = flatColumns.find(function (da) {\n          return da.key == column.key;\n        });\n        seleObj.order = order;\n        if (order === \"flatscend\") {\n          _this3.changeOrderNum(column);\n        }\n        if (!seleObj.orderNum && (order == \"ascend\" || order == \"descend\")) {\n          seleObj.orderNum = _this3.getOrderNum();\n        }\n        sortCol = _this3.getOrderCols(flatColumns);\n        if (sort.backSource && typeof sort.sortFun === \"function\") {\n          sort.sortFun(sortCol);\n        } else {\n          data = _this3.multiSort(flatColumns);\n          typeof sort.sortFun === \"function\" && sort.sortFun(sortCol, data, oldData);\n        }\n      }\n      _this3.setState({ data: data, oldData: oldData, flatColumns: flatColumns });\n    };\n\n    this.renderColumnsDropdown = function (columns) {\n      var tempColumns = [],\n          rsColumns = [];\n      tempColumns = columns.map(function (originColumn) {\n        var column = _extends({}, originColumn);\n        return _this3.sortColumn(column);\n      });\n      rsColumns = _this3._flatToColumn(tempColumns);\n      return rsColumns;\n    };\n\n    this.sortColumn = function (column) {\n      var mode = _this3.props.sort.mode;\n\n      var prefixCls = \"bee-table\";\n      var iconTypeIndex = 0;\n      var sorterClass = \"flat\";\n\n      if (column.order === \"ascend\") {\n        iconTypeIndex = 1;\n        sorterClass = \"up\";\n      } else if (column.order === \"descend\") {\n        iconTypeIndex = 2;\n        sorterClass = \"down\";\n      }\n\n      var sortButton = void 0;\n\n      // sorter和sortEnable均可触发排序,且sorter优先级更高\n      if (column.sorter || column.sortEnable) {\n        //大于0说明不是升序就是降序，判断orderNum有没有值，没有值赋值\n        if (column.sortEnable && !column.sorter) {\n          switch (column.fieldType) {\n            case 'number':\n              {\n                column.sorter = _this3.numberSortFn(column.dataIndex);\n                break;\n              }\n            case 'stringChinese':\n              {\n                column.sorter = _this3.chineseSortFn(column.dataIndex);\n                break;\n              }\n            default:\n              {\n                column.sorter = _this3.defaultSortFn(column.dataIndex);\n                break;\n              }\n          }\n        }\n        if (iconTypeIndex > 0 && !column.orderNum && mode == \"multiple\") {\n          column.orderNum = _this3.getOrderNum();\n        }\n        sortButton = _react2[\"default\"].createElement(\n          'div',\n          { className: prefixCls + '-column-sorter' },\n          _react2[\"default\"].createElement(\n            'span',\n            { className: prefixCls + '-column-sorter-' + sorterClass, onClick: function onClick() {\n                _this3.toggleSortOrder(IconType[iconTypeIndex == 2 ? 0 : iconTypeIndex + 1].order, column);\n\n                if (column.sorterClick) {\n                  column.sorterClick(column, IconType[iconTypeIndex].type);\n                }\n              } },\n            _react2[\"default\"].createElement('i', { className: 'uf ' + IconType[iconTypeIndex].icon }),\n            _react2[\"default\"].createElement(\n              'span',\n              null,\n              column.orderNum\n            )\n          )\n        );\n      }\n      column.title = _react2[\"default\"].createElement(\n        'span',\n        null,\n        column.title,\n        sortButton\n      );\n      return column;\n    };\n\n    this.defaultSortFn = function (key) {\n      return function (a, b) {\n        return a[key] >= b[key] ? 1 : -1;\n      };\n    };\n\n    this.numberSortFn = function (key) {\n      return function (a, b) {\n        var numberA = parseFloat(a[key]);\n        var numberB = parseFloat(b[key]);\n        return numberA >= numberB ? 1 : -1;\n      };\n    };\n\n    this.chineseSortFn = function (key) {\n      return function (a, b) {\n        return a[key].localeCompare(b[key], 'zh-Hans-CN', { sensitivity: 'accent' });\n      };\n    };\n  }, _temp;\n}\nmodule.exports = exports['default'];","import getCellIdentity from './getCellIdentity';\r\nimport { findNextFocusItemInForm } from './findNextFocusItemInForm';\r\nimport { checkboxInTable } from './handleSpecialCase';\r\nimport { keyByModuleId } from '../createKeyMap';\r\nimport { MODULE_TYPE } from '../config/moduleType';\r\nimport { config as CONFIG } from '@platform/api'\r\n\r\n/**\r\n * @desc 查找下一个可聚焦元素\r\n * @param target {dom} 事件源\r\n * @param ViewModel {object} 全局变量\r\n * @param moduleId {string} 当前区域Id\r\n * @param orderOfHotKey {array} 区域显示顺序配置\r\n */\r\nfunction findNextFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey }) {\r\n    var parentTd = eventTarget.tagName === 'TD' ? eventTarget : findParentTd(eventTarget);\r\n    if (!parentTd) {\r\n        // 这里报错的原因是因为某些事件（下拉的keydown）执行了两次\r\n        console.warn('not find parentTd, next hotkey invalid');\r\n        return;\r\n    }\r\n    var nextTd = parentTd.nextElementSibling;\r\n    var currentTr = parentTd.parentElement;\r\n    var lastTd = findLastTdInRow(currentTr);\r\n    var div = nextTd && nextTd.querySelector('[tabindex=\"0\"]');\r\n\r\n    //如果是最后一个元素就需要判断跳到下一行还是跳到下一个区域\r\n    if (lastTd === parentTd) {\r\n        var lastTr = currentTr.parentElement.lastElementChild;\r\n\r\n        currentTr === lastTr\r\n            ? perceptionHotKeyConfig({ currentModuleId: moduleId, ViewModel, orderOfHotKey })\r\n            : findNextRowTd({ tr: currentTr, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    // 如果下一个元素没有找到就继续查找\r\n    if (div === null || checkboxInTable(div)) {\r\n        findNextSiblings({ td: nextTd, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n    // 解决table 设值后重新渲染导致焦点缺失的问题,在这里保留一下id\r\n    let cellIdentity = getCellIdentity(nextTd);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n    executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\nfunction findParentTd(el) {\r\n    while (el.parentElement) {\r\n        el = el.parentElement;\r\n        if (el.tagName === 'TD') {\r\n            return el;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * @desc 查找当前行里的最后一个td，需要排除操作列\r\n * @param tr {dom}\r\n * @return td {dom}\r\n */\r\nfunction findLastTdInRow(tr) {\r\n    let td = tr.lastElementChild.className.includes('fixed')\r\n        ? tr.lastElementChild.previousElementSibling\r\n        : tr.lastElementChild;\r\n\r\n    return td;\r\n}\r\n\r\n/**\r\n * @desc 递归查找下一个可聚焦元素\r\n * @param td {dom} 上一个td\r\n * @param ViewModel {object} 全局变量\r\n * @param moduleId {string} 当前区域的Id\r\n * @param orderOfHotKey\r\n */\r\nfunction findNextSiblings({ td, ViewModel, moduleId, orderOfHotKey }) {\r\n    var nextTd = td.nextElementSibling;\r\n    var currentTr = nextTd && nextTd.parentElement;\r\n    var lastTd = currentTr && findLastTdInRow(currentTr);\r\n    var currentDiv = td.querySelector('[tabindex=\"0\"]');\r\n    var div = nextTd && nextTd.querySelector('[tabindex=\"0\"]');\r\n\r\n    //如果下个需要聚焦的单元格与最后一个单元相同并且没有可聚焦元素就在下一行查找\r\n    if ((lastTd === nextTd && div === null) || (lastTd === td && currentDiv === null)) {\r\n        findNextRowTd({ tr: currentTr, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    if (div === null || checkboxInTable(div)) {\r\n        findNextSiblings({ td: nextTd, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    let cellIdentity = getCellIdentity(nextTd);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n    executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\n//查找下一行可聚焦元素\r\nfunction findNextRowTd({ tr, ViewModel, moduleId, orderOfHotKey }) {\r\n    var nextTr = tr && tr.nextElementSibling;\r\n\r\n    //如果是最后一行就查找下个区域的第一个可聚焦元素\r\n    if (nextTr === null) {\r\n        orderOfHotKey &&\r\n            jumpToNextModuleFocusItem({ currentModuleId: moduleId, ViewModel, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    if (nextTr.getAttribute('tabindex') === '-1') {\r\n        findNextRowTd({ tr: nextTr, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    var div = nextTr.querySelector('td [tabindex=\"0\"]');\r\n    var td = findParentTd(div);\r\n\r\n    let cellIdentity = getCellIdentity(td);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n    executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\n/**\r\n * @desc 判断业务组是否配置快捷键，如果没有就在本区域内循环 反之根据orderOfHotKey跳转下个区域\r\n * @param currentModuleId {string} 当前的区域ID\r\n * @param ViewModel 全局变量\r\n * @param orderOfHotKey {array} 区域展示顺序\r\n */\r\n\r\nfunction perceptionHotKeyConfig({ currentModuleId, ViewModel, orderOfHotKey }) {\r\n    if (orderOfHotKey && orderOfHotKey.length === 0) {\r\n        findFirstFocusItemInCurrentModule({ currentModuleId, ViewModel });\r\n    } else {\r\n        orderOfHotKey &&\r\n            jumpToNextModuleFocusItem({ currentModuleId, ViewModel, orderOfHotKey });\r\n    }\r\n}\r\n\r\nfunction findFirstFocusItemInCurrentModule({ currentModuleId, ViewModel }) {\r\n    let id = `${CONFIG.hotKeyModuleIdPrefix}-${currentModuleId}`;\r\n    let tableTr = document.querySelector(`#${id} table tbody tr`);\r\n    let tds = tableTr.querySelectorAll('td');\r\n\r\n    let firstFocusItem = Array.prototype.find.call(tds, function (td) {\r\n        return td.querySelector('[tabindex=\"0\"]') !== null;\r\n    });\r\n\r\n    let cellIdentity = getCellIdentity(firstFocusItem);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n\r\n    var div = firstFocusItem.querySelector('[tabindex=\"0\"]');\r\n    div && executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\nfunction jumpToNextModuleFocusItem({ currentModuleId, ViewModel, orderOfHotKey }) {\r\n    let nextModuleId = calculateNextModuleId(currentModuleId, orderOfHotKey);\r\n\r\n    let nextModuleKeyMap = keyByModuleId[nextModuleId];\r\n\r\n    if (nextModuleKeyMap === undefined) return;\r\n\r\n    let type = nextModuleKeyMap.type;\r\n    if (type === MODULE_TYPE.cardTable || type === MODULE_TYPE.editTable) {\r\n        //如果是table类型就获取当前table显示的页签\r\n        let activeTableKeyMap = keyByModuleId[nextModuleKeyMap.activeTable];\r\n        let firstItemDom = document.querySelector(`div[${activeTableKeyMap.firstItem}]`);\r\n        let div = firstItemDom.querySelector('[tabindex=\"0\"]');\r\n\r\n        if (div === null) {\r\n            let td = firstItemDom.parentElement;\r\n            findNextSiblings({ td, ViewModel, moduleId: activeTableKeyMap.moduleId, orderOfHotKey });\r\n        } else {\r\n            let td = findParentTd(div);\r\n\r\n            /**\r\n       * @desc 表格编辑后会导致页面重新渲染导致聚焦状态丢失，因此enter键跳转的需要在全局记录一下，为操作的连续性渲染完成后重新聚焦做标识\r\n       * @type {string}\r\n       */\r\n            let cellIdentity = getCellIdentity(td);\r\n            cellIdentity\r\n                ? ViewModel.enterTriggerCellId = cellIdentity\r\n                : '';\r\n            executeAutoFocus({ div, ViewModel });\r\n        }\r\n\r\n    } else {\r\n        findNextFocusItemInForm(nextModuleKeyMap, nextModuleId);\r\n    }\r\n}\r\n\r\nfunction calculateNextModuleId(currentModuleId, orderOfHotKey) {\r\n    let orderOfHotKeyLen = orderOfHotKey.length;\r\n\r\n    let nextModuleIndex = orderOfHotKey.indexOf(currentModuleId) + 1 === orderOfHotKeyLen\r\n        ? 0\r\n        : orderOfHotKey.indexOf(currentModuleId) + 1;\r\n    return orderOfHotKey[nextModuleIndex];\r\n}\r\n\r\nfunction executeAutoFocus({ div, ViewModel }) {\r\n    if (div !== null) {\r\n        ViewModel.shouldAutoFocus = true;\r\n        div.ncExecuteFocus = true;\r\n        div.focus();\r\n        delete div.ncExecuteFocus;\r\n    }\r\n}\r\n\r\nexport {\r\n    findNextFocusItemInTable,\r\n    executeAutoFocus,\r\n};\r\n","/*\r\n * @Descripttion: 标题\r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-06-01 09:53:27\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-02-02 16:50:02\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport { isFunction } from '../../utils/index';\r\nimport classNames from 'classnames';\r\nimport { getSysFieldid } from \"@platform/api\";\r\n\r\nrequire('./title.less');\r\n\r\nconst defaultColor = ['#111111', '#555555', '#111', '#555'];\r\nexport default class ColumnTitle extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getParentTypeTitle() {\r\n        let { title, attrcode, isParent, itemtype, color, unitActive } = this.props;\r\n        color = defaultColor.includes(color) ? '' : color;\r\n        let titleClassName = (unitActive ? 'column-title-actived' : '') + '  column-title-wrapper-bg ';\r\n\r\n        return <Fragment>\r\n            <div\r\n                className={classNames(\"column-title-wrapper\", { 'column-title-actived': unitActive })}\r\n                style={{ color }}\r\n                cellSelectorKey={`${'__tableHeader__'}@${attrcode}`}>\r\n                {title}\r\n            </div>\r\n            <div className={titleClassName} cellSelectorKey={`${'__tableHeader__'}@${attrcode}`}>\r\n\r\n            </div>\r\n        </Fragment>;\r\n    }\r\n\r\n    getNormalTypeTitle() {\r\n        let { title, required, attrcode, itemtype, color, status = \"browse\", unitActive, titleIcon } = this.props;\r\n        color = defaultColor.includes(color) ? '' : color;\r\n        let titleClassName = (unitActive ? 'column-title-actived' : '') + '  column-title-wrapper-bg ';\r\n\r\n        return <Fragment>\r\n            <div\r\n                className={classNames(\"column-title-wrapper\", { 'column-title-actived': unitActive })}\r\n                cellSelectorKey={`${'__tableHeader__'}@${attrcode}`}\r\n                fieldid={getSysFieldid(attrcode)}\r\n                style={itemtype === 'number' ? { width: '100%', textAlign: 'right', color } : { color }}\r\n            >\r\n                {status == 'edit' && required && <span className=\"mark-required\">*</span>}\r\n                {isFunction(title) ? title(this.props) : title}\r\n            </div >\r\n            {titleIcon && titleIcon(this.props)}\r\n            <div className={titleClassName} cellSelectorKey={`${'__tableHeader__'}@${attrcode}`}></div>\r\n        </Fragment>\r\n    }\r\n\r\n    render() {\r\n        let { isParent } = this.props;\r\n        // console.log(title, 'column title');\r\n        return isParent ? this.getParentTypeTitle() : this.getNormalTypeTitle();\r\n    }\r\n}\r\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-06-04 10:14:58\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-02-25 19:09:45\r\n */\r\nimport React, { Component, Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport './cellIcon.less';\r\n\r\nconst TIME_TYPES = ['datepicker', 'NCTZDatePickerStart', 'NCTZDatePickerEnd', 'timepicker', 'datetimepicker', 'rangepicker', 'datePickerNoTimeZone'];\r\n\r\nfunction isWrong(param) {\r\n    return typeof param === 'undefined' || param === null || param === '';\r\n}\r\n\r\nexport default class CellIcon extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    /**\r\n     * 渲染图标\r\n     */\r\n    getIcon() {\r\n        let { itemtype, disabled, value, isSaga_status } = this.props;\r\n        if (itemtype == 'refer') {\r\n            return <i\r\n                className=\"refer-icon cell-icon align-right iconfont\"\r\n                onClick={(e) => {\r\n                    let { onClick } = this.props;\r\n                    // e.stopPropagation();\r\n                    onClick && onClick('refer', e);\r\n                    // if (isSaga_status) {\r\n                    //     return;\r\n                    // }\r\n                    // this.mousedown && this.handleClick({ referAutoFocus: true });\r\n                    // this.mousedown = false;\r\n                }}\r\n            >\r\n                &#xe6ce;\r\n            </i>;\r\n        } else if (TIME_TYPES.includes(itemtype)) {\r\n            return <i\r\n                className=\"time-icon cell-icon align-right iconfont\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={(e) => {\r\n                    let { onClick } = this.props;\r\n                    // e.stopPropagation();\r\n                    onClick && onClick('picker', e);\r\n                    // if (isSaga_status) {\r\n                    //     return;\r\n                    // }\r\n                    // this.mousedown && this.handleClick({ timeAutoFocus: true });\r\n                    // this.mousedown = false;\r\n                }}\r\n            >\r\n                &#xe6cd;\r\n            </i>;\r\n        } else if (itemtype == 'select') {\r\n            return <i\r\n                className=\"select-icon cell-icon align-right iconfont\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={(e) => {\r\n                    let { onClick } = this.props;\r\n                    // e.stopPropagation();\r\n                    onClick && onClick('select', e);\r\n                    // if (isSaga_status) {\r\n                    //     return;\r\n                    // }\r\n                    // this.mousedown && this.handleClick({ selectAutoFocus: true });\r\n                    // this.mousedown = false;\r\n                }}\r\n            >\r\n                &#xe683;\r\n            </i>;\r\n        } else if (!isWrong(value)) {\r\n            return null;\r\n        } else {\r\n            // \r\n        }\r\n    }\r\n\r\n    render() {\r\n        // cellIcon 可以考虑自定义\r\n        let { itemtype, attrcode, disabled, value, isSaga_status, cellIcon } = this.props;\r\n        if (disabled) {\r\n            return <span className=\"icon-placeholder\" />;\r\n        }\r\n        // console.log(value, isWrong(value));\r\n        // attrcode === 'numberTest' && console.log(isWrong(value), value)\r\n        return <Fragment>\r\n            {this.getIcon()}\r\n        </Fragment>;\r\n    }\r\n}\r\n","/*\r\n * @Descripttion: 单元格\r\n * @version:\r\n * @Author: bbq\r\n * @Date: 2020-06-01 09:53:27\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-03-04 18:03:05\r\n *\r\n *\r\n * TODO\r\n * 1、number 类型居右\r\n * 2、自定义列\r\n * 3、表头排序  表头筛选\r\n * 4、固定列加上maxWidth=宽度\r\n * 5、tooltip\r\n *\r\n */\r\nimport React, { Component, Fragment, cloneElement, isValidElement } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Item, itemCreator } from \"@platform/template\";\r\nimport CellIcon from \"./CellIcon\";\r\nimport {\r\n    isString,\r\n    isFunction,\r\n    isWrong,\r\n    isArray,\r\n    isBoolean,\r\n    ncRounding,\r\n    formatAcuracy,\r\n    isNullOrVoid,\r\n    isObject,\r\n    handleBrowseData,\r\n    isIE,\r\n} from \"../../utils/index\";\r\nimport { getSysFieldid, isArrowKeyDown, getLangCode } from \"@platform/api\";\r\nimport { Tooltip } from '@platform/base';\r\nimport CONFIG from '../../config';\r\nimport pureRender from './pureRender';\r\nrequire(\"./cell.less\");\r\n\r\nconst TIME_TYPES = { datepicker: true, NCTZDatePickerStart: true, NCTZDatePickerEnd: true, timepicker: true, datetimepicker: true, rangepicker: true, datePickerNoTimeZone: true };\r\n\r\n// get nearest parent element matching selector   origin from stackoverflow  add by bbqin\r\nconst Closest = function (el, selector) {\r\n    if (!el) {\r\n        return null;\r\n    }\r\n    var matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\r\n\r\n    while (el) {\r\n        if (matchesSelector.call(el, selector)) {\r\n            break;\r\n        }\r\n        el = el.parentElement;\r\n    }\r\n    return el;\r\n};\r\n\r\n/**\r\n * 处理数据\r\n * @param {*} langJson \r\n * @param {*} itemtype \r\n * @param {*} value \r\n * @param {*} scale \r\n * @param {*} attrcode \r\n * @param {*} languageMeta \r\n * @param {*} values \r\n * @param {*} datatype \r\n * @param {*} options \r\n * @param {*} multiple \r\n */\r\nconst handleCellValue = function (\r\n    langJson = {},\r\n    itemtype,\r\n    value = {},\r\n    scale,\r\n    attrcode,\r\n    languageMeta,\r\n    values,\r\n    datatype,\r\n    options,\r\n    multiple,\r\n) {\r\n    switch (true) {\r\n        case itemtype === \"number\":\r\n            // 表格浏览态加了四舍五入\r\n            // value.value = formatAcuracy(value, scale);\r\n            break;\r\n        case CONFIG.boolean.includes(itemtype):\r\n            value = JSON.parse(JSON.stringify(value || {}));\r\n            value.display = value.value == 'Y' || value.value == true ? langJson && langJson['table_yes'] : langJson && langJson['table_no'];\r\n            value.value = value.value == 'Y' || value.value == true ? true : false;\r\n            break;\r\n        default:\r\n            // isNullOrVoid(value.display) ? value.value : value.display || value.value;\r\n            break;\r\n    }\r\n    return value;\r\n};\r\n\r\n// 开启了有些问题，record中的属性没有正确检测到，导致框选之类的操作没有正确生效\r\n// @pureRender()\r\nclass Cell extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // 单元格state\r\n        this.state = { tipStatus: false, autoOpen: false, showIcon: true, showTip: false };\r\n        // 获取事件类型\r\n        this.defaultItemCreator =\r\n            itemCreator({ itemtype: props.itemtype }) || {};\r\n        // 单元格属性 与 props 有关\r\n        this.cellStatus = this.getCellStatus(props);\r\n        // rowKeyValue\r\n        let { record, attrcode, scale, rowKey, store, render, itemtype, loginLanguage } = props;\r\n        this.rowKeyValue = isObject(record[rowKey]) ? record[rowKey].value : record[rowKey];\r\n        if (render && itemtype === \"customer\") {\r\n            this.unregister = store?.registerField([this.rowKeyValue, 'sp_col_customer__', attrcode], this);\r\n        }\r\n        // 精度\r\n        this.cellScale = this.getScale(record, attrcode, scale);\r\n        // 值\r\n        this.cellValue = this.getValue(props, attrcode, this.cellScale, this.cellStatus.editable, loginLanguage);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        // 单元格属性 与 props 有关\r\n        this.cellStatus = this.getCellStatus(nextProps);\r\n        // rowKeyValue\r\n        let { record, attrcode, scale, rowKey, store, render, itemtype, loginLanguage } = nextProps;\r\n\r\n        let rowKeyValue = isObject(record[rowKey]) ? record[rowKey].value : record[rowKey];\r\n        if (this.rowKeyValue !== rowKeyValue) {\r\n            if (render && itemtype === \"customer\") {\r\n                this.unregister();\r\n                // 用于setCellValue 等操作 更新自定义列\r\n                this.unregister = store?.registerField([rowKeyValue, 'sp_col_customer__', attrcode], this);\r\n            }\r\n            this.rowKeyValue = rowKeyValue;\r\n        }\r\n\r\n        // 精度\r\n        this.cellScale = this.getScale(record, attrcode, scale);\r\n        // 值\r\n        this.cellValue = this.getValue(nextProps, attrcode, this.cellScale, this.cellStatus.editable, loginLanguage);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 计算状态\r\n        if (this.cellStatus.isEdit) {\r\n            let {\r\n                attrcode,\r\n                store,\r\n            } = this.props;\r\n            let $focusElement = this.cellDom && this.cellDom.querySelector('[tabindex=\"0\"]');\r\n            if ($focusElement && !Closest($focusElement, '.u-table-row-fixed-columns-in-body')) {\r\n                // 自动增行 触发编辑前事件\r\n                $focusElement.ncExecuteFocus = true;\r\n                $focusElement.focus();\r\n                $focusElement.ncExecuteFocus = false;\r\n                store && store.setCellProps(this.rowKeyValue, attrcode, { isEdit: undefined }, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // 更新渲染后\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.cellDom = null;\r\n        this.defaultItemCreator = null;\r\n        this.rowKeyValue = null;\r\n        this.cellValue = null;\r\n        this.unregister?.();\r\n    }\r\n\r\n    /**\r\n     * @description: 规范精度\r\n     * @param {type}\r\n     * @return {type}\r\n     */\r\n    getScale(record, attrcode, scale) {\r\n        let values = record.values || record || {};\r\n        let value = values[attrcode];\r\n        let valueScale = isObject(value) ? value.scale : scale;\r\n        valueScale = !isWrong(valueScale) && valueScale != \"-1\" ? +valueScale : +scale;\r\n        // console.log(valueScale, attrcode);\r\n        return valueScale || 0;\r\n    }\r\n\r\n    /**\r\n     * @description: 处理数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getValue = (props, attrcode, scale, editable, loginLanguage) => {\r\n        let { getCellValue, record, rowKey, rowIndex, itemtype, languageMeta, langJson = {} } = props;\r\n        // console.log(langJson);\r\n        let value = {};\r\n        if (getCellValue) {\r\n\r\n            // 处理下多语的情况 让item里的计算和这外面的计算一致\r\n            if (loginLanguage && itemtype === \"residtxt\") {\r\n                let loginValue,\r\n                    mainValue;\r\n                Array.isArray(languageMeta) && languageMeta.map(({ index, languageCode }) => {\r\n                    if (languageCode === loginLanguage) {\r\n                        // 登录语言值\r\n                        let realCode = index == 1 ? attrcode : attrcode + index;\r\n                        loginValue = getCellValue({\r\n                            attrcode: realCode,\r\n                            rowKey,\r\n                            rowKeyValue: record[rowKey],\r\n                            rowIndex,\r\n                        });\r\n                    }\r\n                    if (index == 1 || index == '') {\r\n                        // 主语言值\r\n                        mainValue = getCellValue({\r\n                            attrcode,\r\n                            rowKey,\r\n                            rowKeyValue: record[rowKey],\r\n                            rowIndex,\r\n                        });\r\n                    }\r\n                });\r\n                if (loginValue && loginValue.value) {\r\n                    value = loginValue;\r\n                }\r\n                if (mainValue && mainValue.value) {\r\n                    value = mainValue;\r\n                }\r\n            } else {\r\n                value = getCellValue({\r\n                    rowKey,\r\n                    rowKeyValue: record[rowKey],\r\n                    rowIndex,\r\n                    attrcode,\r\n                });\r\n            }\r\n        } else {\r\n            !record.values && console.error(\"无效的record格式\");\r\n            value = record.values[attrcode];\r\n            if (\r\n                !value ||\r\n                value.display === undefined ||\r\n                value.value === undefined\r\n            ) {\r\n                // console.error('无效的values格式');\r\n                !value && (value = {});\r\n            }\r\n            value.display = value.display || value.value || \"\";\r\n            value.value = value.value || \"\";\r\n        }\r\n\r\n        // 处理一些特殊值 // 放到了item中\r\n        value = !editable ? handleCellValue(langJson, itemtype, value, scale) : value;\r\n        return value;\r\n    };\r\n\r\n    /**\r\n     * 编辑性 显示性 禁用性 选中 聚焦等\r\n     * @description: 获取计算之后的 单元格属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getCellStatus = props => {\r\n        let {\r\n            // 表格与列合并属性\r\n            status = \"browse\",\r\n            editType = \"toggle\",\r\n\r\n            disabled = false,\r\n            visible = true,\r\n            // 单元格\r\n            selected = false,\r\n            focused = false,\r\n            actived = false,\r\n            // 单元格属性\r\n            itemtype,\r\n            // 特殊情况\r\n            render,\r\n            // 图标 // static hover none\r\n            cellIcon,\r\n            // 禁用编辑态\r\n            disableEditType = false,\r\n\r\n            renderStatus = \"edit\",\r\n            renderItem,\r\n            // page上的全局的\r\n            renderItems = {},\r\n            attrcode,\r\n            record,\r\n        } = props;\r\n        // 行属性\r\n        let {\r\n            disabled: rowDiabled = false,\r\n            visible: rowVisible = true,\r\n            isEdit: rowIsEdit = false,\r\n            selected: rowSelected = false,\r\n            focused: rowFocused = false,\r\n        } = record || {};\r\n        // values\r\n        let values = record.values || record || {};\r\n        // 单元格\r\n        let {\r\n            // 不能默认值  避免以单元格为主报错\r\n            disabled: cellDisabled,\r\n            visible: cellVisible = true,\r\n            isEdit: cellIsEdit = false,\r\n            selected: cellSelected = false,\r\n            focused: cellFocused = false,\r\n            actived: cellActived = false,\r\n            showDrag = false,\r\n            validated = true,\r\n            leftLine = false,\r\n            rightLine = false,\r\n            bottomLine = false,\r\n            topLine = false,\r\n            focusToEdit = false,\r\n            autoFocus,\r\n        } = values[attrcode] || {};\r\n\r\n        // 错误行状态\r\n        let isSagaStatus = values && values.saga_status && values.saga_status.value === '1';\r\n\r\n        // 兼容旧代码 TODO\r\n        let oldCellDisabled = isString(cellDisabled)\r\n            ? cellDisabled === \"off\"\r\n            : cellDisabled;\r\n\r\n        // 禁用性 如果最外层禁用了 内层不能启用  (!!render || 不确定有用)\r\n        disabled = isBoolean(cellDisabled)\r\n            ? oldCellDisabled\r\n            : disabled || oldCellDisabled;\r\n\r\n        // 显示性 如果最外层不显示了 内层 不显示\r\n        visible = visible && rowVisible && cellVisible;\r\n\r\n        // 激活性 用于框选 批改等操作\r\n        actived = actived || cellActived;\r\n\r\n        // 表格编辑性\r\n        let tableEdit = status === \"edit\";\r\n\r\n        // 编辑的类型\r\n        editType = editType === \"toggle\" ? \"toggle\" : \"normal\";\r\n\r\n        // 是否选中\r\n        selected = selected || rowSelected || cellSelected;\r\n\r\n        // 是否聚焦\r\n        focused = rowFocused || cellFocused;\r\n\r\n        // 是否是switch 类型\r\n        let isSwitchType =\r\n            itemtype === \"switch_browse\" ||\r\n            itemtype === \"checkbox_switch\" ||\r\n            itemtype === \"switch\";\r\n        // 是否是switch 类型\r\n        let isCheckboxSwitchType = itemtype === \"checkbox_switch\";\r\n\r\n        // 单元格的编辑性\r\n        let editable = itemtype === \"switch_browse\" ? true : tableEdit && !disabled;\r\n\r\n        // 单元格的编辑状态\r\n        let isEdit = rowIsEdit || cellIsEdit;\r\n\r\n        editType = itemtype === \"switch_browse\" ||\r\n            (tableEdit && itemtype === \"checkbox_switch\") ||\r\n            (tableEdit && itemtype === \"switch\")\r\n            ? \"normal\" : \"toggle\";\r\n\r\n        // cellIcon\r\n        cellIcon = (render && itemtype === \"customer\") || isSwitchType ? \"none\" : cellIcon || \"hover\";\r\n        // 是否是右图标类型\r\n        let isCellIconInRight = itemtype === \"select\" || itemtype === \"refer\" || TIME_TYPES[itemtype];\r\n\r\n        // switch_browse 类型 编辑态禁用  浏览态不禁用\r\n        if (itemtype === \"switch_browse\") {\r\n            if (tableEdit) {\r\n                disabled = true;\r\n            }\r\n        }\r\n\r\n        // label 类型没有编辑态\r\n        if (itemtype === \"label\") {\r\n            // disabled = true;\r\n            editable = false;\r\n        }\r\n\r\n        // attachment 类型没有编辑态\r\n        let isAttachment = false,\r\n            disableModify = false;\r\n        if (itemtype === \"attachment\") {\r\n            editable && (disableModify = true);\r\n            isAttachment = true;\r\n            editable = true;\r\n            editType = 'normal';\r\n            // 编辑图标\r\n            cellIcon = 'none';\r\n        } else if (disableEditType) {\r\n            // 给列表用\r\n            editable = false;\r\n            editType = 'toggle';\r\n        }\r\n\r\n        // 记录当前单元格渲染状态\r\n        let renderType = 'normal';\r\n        renderItem = renderItems[attrcode];\r\n        if (renderItem) {\r\n            renderType = 'renderInItem';\r\n        } else if (render && itemtype === \"customer\") {\r\n            renderType = 'renderInCustomer';\r\n        } else if (render && renderStatus == 'edit') {\r\n            renderType = 'renderInEdit';\r\n        } else if (render && renderStatus == 'browse') {\r\n            renderType = 'renderInBrowse';\r\n        }\r\n\r\n        let renderItemInEdit = false;\r\n        if (disableEditType) {\r\n            renderItemInEdit = false;\r\n        } else if ((tableEdit && itemtype != 'label' && itemtype != 'customer') || (itemtype === \"switch_browse\")) {\r\n            renderItemInEdit = true;\r\n        }\r\n\r\n        return {\r\n            disabled,\r\n            tableEdit,\r\n            isEdit,\r\n            editable,\r\n            editType,\r\n            visible,\r\n            selected,\r\n            focused,\r\n            actived,\r\n            showDrag,\r\n            cellIcon,\r\n            isAttachment,\r\n            disableModify,\r\n            validated,\r\n            leftLine,\r\n            rightLine,\r\n            bottomLine,\r\n            topLine,\r\n            focusToEdit,\r\n            renderType,\r\n            isSwitchType,\r\n            isCheckboxSwitchType,\r\n            autoFocus,\r\n            isSagaStatus,\r\n            isCellIconInRight,\r\n            renderItemInEdit,\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @description:\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getCellClassName() {\r\n        let {\r\n            record,\r\n            rowIndex,\r\n            attrcode,\r\n            cellClassName,\r\n        } = this.props;\r\n\r\n        let cls = \" \";\r\n\r\n        if (isFunction(cellClassName)) {\r\n            cls = cellClassName({ record, rowIndex, attrcode });\r\n        } else {\r\n            cls = cellClassName;\r\n        }\r\n\r\n        return ' ' + (cls || '') + ' ';\r\n    }\r\n\r\n    /**\r\n     * @description: 获取单元格UI\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getCellUI = () => {\r\n        let {\r\n            // 单元格beeTable render返回的属性\r\n            record,\r\n            rowIndex,\r\n            // 表格整体的属性\r\n            rowKey,\r\n            // 列属性\r\n            attrcode,\r\n            itemtype,\r\n            hyperlinkflag,\r\n            onCellHyperlinkTo,\r\n            renderStatus = \"edit\",\r\n            renderItem,\r\n            // page上的全局的\r\n            renderItems = {},\r\n            // 使用什么来渲染浏览态\r\n            whichKeyToDisplay,\r\n            // 单元格自身属性\r\n            UIProps,\r\n            setCellProps,\r\n            onTableCellClick,\r\n            onBeforeEvent,\r\n            onAfterEvent,\r\n            onCellStatusChange,\r\n            setCellValue,\r\n            getCellValue,\r\n            render,\r\n            store,\r\n            scale,\r\n            // 不传到  item 避免影响底层组件的参数\r\n            loginLanguage,\r\n            // =====================\r\n            // 当前列的属性\r\n            __col,\r\n            onEnter,\r\n            hotKeyWithArrow,\r\n            // className 不能传递到底层\r\n            className,\r\n            maxlength,\r\n            // 用 ... this.props 会导致参照里的参数出现rowKey覆盖问题\r\n            ...others\r\n        } = this.props;\r\n        // 属性\r\n        let {\r\n            disabled,\r\n            // 表格状态\r\n            tableEdit,\r\n            editType,\r\n            editable,\r\n            disableModify,\r\n            validated,\r\n            autoFocus,\r\n            isSagaStatus,\r\n            renderItemInEdit,\r\n            isSwitchType,\r\n        } = this.cellStatus;\r\n        // 值\r\n        let rowKeyValue = this.rowKeyValue;\r\n        let cellScale = this.cellScale;\r\n        let cellValue = this.cellValue;\r\n\r\n        // 取一下\r\n        renderItem = renderItems[attrcode];\r\n        // console.log(renderItem, renderItems);\r\n\r\n        // 自定义单元格\r\n        if (render && itemtype === \"customer\") {\r\n            // 没有设置单元格状态  比如customer列\r\n            let customRender = render(\r\n                cellValue,\r\n                record,\r\n                rowIndex,\r\n                store,\r\n            );\r\n            if (!customRender) {\r\n                return <div />;\r\n            }\r\n            if (!isValidElement(customRender)) { // 不是标准的react组件\r\n                if (isObject(customRender)) {\r\n                    console.error('invalid react element', customRender);\r\n                    customRender = JSON.stringify(customRender);\r\n                }\r\n                return <div className=\"add-customer-cell un-react-element\">{customRender}</div>;\r\n            }\r\n\r\n            // 还有一些事件要合并进来 TODO\r\n            let content = {\r\n                ...customRender,\r\n                props: {\r\n                    ...customRender.props,\r\n                    renderInTable: true,\r\n                },\r\n            };\r\n\r\n            return <div {...__col}>{cloneElement(content)}</div>;\r\n        }\r\n\r\n        // 超链接\r\n        if (!render && hyperlinkflag && !editable && !tableEdit) {\r\n            // 不在浏览态显示 TODO style 样式去除\r\n            return (\r\n                <span style={{ overflow: \"hidden\", display: 'flex', width: '100%' }}>\r\n                    <a\r\n                        href=\"javascript:;\"\r\n                        className='cell-hyper'\r\n                        onClick={e => {\r\n                            e.stopPropagation();\r\n                            //超链接跳转\r\n                            isFunction(onCellHyperlinkTo) && onCellHyperlinkTo(record, attrcode, cellValue);\r\n                        }}\r\n                    >\r\n                        {cellValue.display || cellValue.value || \"\"}\r\n                    </a>\r\n                </span>\r\n            );\r\n        }\r\n        // let ppp = {};\r\n        // Array.from(new Array(50)).map((item, i) => { ppp['a' + i] = \"a\" + i })\r\n\r\n        // console.time('jiegou1')\r\n        // let a = <div {...ppp}> </div>;\r\n        // console.timeEnd('jiegou1')\r\n        let autoOpen = this.state.autoOpen ? {\r\n            open: this.state.autoOpen,\r\n            autoShow: this.state.autoOpen,\r\n        } : {};\r\n        return (\r\n            <Item\r\n                {...others}\r\n                // {...this.props}\r\n                // 不能直接传open 会使底层组件受控\r\n                {...autoOpen}\r\n                autoFocus={autoFocus}\r\n                isCheckChinese={!!maxlength}\r\n                maxlength={maxlength}\r\n                renderInTable\r\n                disabled={disabled}\r\n                scale={cellScale}\r\n                browse={!editable || isSagaStatus}\r\n                whichKeyToDisplay={whichKeyToDisplay}\r\n                itemtype={itemtype}\r\n                attrcode={attrcode}\r\n                // tabIndex={!disabled && editable && !isSagaStatus ? 0 : -1}\r\n                editType={editType}\r\n                disableModify={disableModify}\r\n                onEnter={onEnter}\r\n                hotKeyWithArrow={hotKeyWithArrow}\r\n                setFieldValue={({ attrcode, value }) => {\r\n                    // 这里就是onChange\r\n                    return (\r\n                        isFunction(setCellValue) &&\r\n                        setCellValue({\r\n                            record,\r\n                            rowKey,\r\n                            rowKeyValue,\r\n                            rowIndex,\r\n                            attrcode,\r\n                            value,\r\n                            column: { ...__col, ...this.cellStatus },\r\n                            triggerType: this.defaultItemCreator[\"valueChangePropName\"] || \"onChange\",\r\n                        })\r\n                    );\r\n                }}\r\n                getFieldValue={({ attrcode }) => {\r\n                    return this.getValue(this.props, attrcode, this.cellScale, editable);\r\n                }}\r\n                onBeforeEvent={async ({ value, event }) => {\r\n                    store && store.setCellProps(rowKeyValue, attrcode, { validated: true }, false);\r\n                    // 有一些操作要放在这里处理 比如值的转换等等\r\n                    // 清理错误校验的样式\r\n                    validated === false && store && store.setCellProps(rowKeyValue, attrcode, { validated: true }, false);\r\n\r\n                    if (isFunction(onBeforeEvent)) {\r\n                        let isContinue = (\r\n                            (await onBeforeEvent({\r\n                                record,\r\n                                rowKey,\r\n                                rowKeyValue,\r\n                                rowIndex,\r\n                                attrcode,\r\n                                value,\r\n                                event,\r\n                                column: { ...__col, ...this.cellStatus },\r\n                                triggerType: this.defaultItemCreator[\"beforeEventTrigger\"] || \"onFocus\",\r\n                                validated,\r\n                            })) !== false\r\n                        )\r\n                        // 这里做更新会导致 编辑前如果返回了false  出现问题\r\n                        // isContinue === false && this.setState({ showIcon: isContinue });\r\n                        return isContinue;\r\n                    }\r\n                    return true;\r\n                }}\r\n                onAfterEvent={({ value, oldValue, componentValue, event }) => {\r\n                    this.setState({ autoOpen: false });\r\n                    // 有一些操作要放在这里处理 比如值的转换等等\r\n                    isFunction(onAfterEvent) &&\r\n                        onAfterEvent({\r\n                            record,\r\n                            rowKey,\r\n                            rowKeyValue,\r\n                            rowIndex,\r\n                            attrcode,\r\n                            value,\r\n                            componentValue,\r\n                            event,\r\n                            column: { ...__col, ...this.cellStatus },\r\n                            oldValue,\r\n                            triggerType:\r\n                                this.defaultItemCreator[\"afterEventTrigger\"] ||\r\n                                \"onBlur\",\r\n                        });\r\n                }}\r\n                onStatusChange={({ isEdit }) => {\r\n                    store && store.setCellProps(rowKeyValue, attrcode, { focusToEdit: isEdit }, true);\r\n                    this.setState({ autoOpen: !isEdit ? false : this.state.autoOpen, showIcon: !isEdit });\r\n                    if (isFunction(onCellStatusChange)) {\r\n                        onCellStatusChange({ isEdit, column: { ...__col, ...this.cellStatus }, rowIndex, attrcode })\r\n                    }\r\n                }}\r\n                path={[rowKeyValue, attrcode]}\r\n                // 自定义单元格\r\n                renderItem={({ isEdit }) => {\r\n                    if (render && renderStatus === \"customer\") {\r\n                        let cellEdit = (isEdit || isSwitchType);\r\n                        return render(\r\n                            cellValue,\r\n                            record,\r\n                            rowIndex,\r\n                            store,\r\n                            renderItemInEdit ? (cellEdit ? \"edit\" : \"editBrowse\") : \"browse\",\r\n                        );\r\n                    }\r\n\r\n                    // 如果表格是编辑态\r\n                    if (renderItemInEdit) {\r\n                        // 单元格编辑态\r\n                        let cellEdit = (isEdit || isSwitchType);\r\n                        if (cellEdit && render && renderStatus === \"edit\") {\r\n                            return render(\r\n                                cellValue,\r\n                                record,\r\n                                rowIndex,\r\n                                store,\r\n                            );\r\n                        }\r\n\r\n                        if (!cellEdit && render && renderStatus === \"editBrowse\") {\r\n                            return render(\r\n                                cellValue,\r\n                                record,\r\n                                rowIndex,\r\n                                store,\r\n                            );\r\n                        }\r\n\r\n                        // 单元格编辑态\r\n                        if (cellEdit && renderItem) {\r\n                            return isFunction(renderItem)\r\n                                ? renderItem.call(\r\n                                    null,\r\n                                    cellValue,\r\n                                    record,\r\n                                    rowIndex,\r\n                                    store,\r\n                                )\r\n                                : renderItem;\r\n                        }\r\n                    } else {\r\n                        // 如果表格是浏览态\r\n                        // 单元格自定义渲染了\r\n                        // 如果表格是编辑态 那么label类型和customer类型也可以走这里逻辑\r\n                        if (render && renderStatus === \"browse\") {\r\n                            let customRender = render(\r\n                                cellValue,\r\n                                record,\r\n                                rowIndex,\r\n                                store,\r\n                            );\r\n                            if (!isValidElement(customRender)) {\r\n                                if (isObject(customRender)) {\r\n                                    console.error('invalid react element', customRender);\r\n                                    customRender = JSON.stringify(customRender);\r\n                                }\r\n                                return <div className=\"add-customer-cell un-react-element\">{customRender}</div>;\r\n                            }\r\n                            return customRender;\r\n                        }\r\n                    }\r\n                    // console.log(isEdit, renderItem, render, renderStatus)\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    handleMouseEnter = () => {\r\n        if (this.cellDom) {\r\n            let { showTip } = this.state;\r\n            let tipNode = null;\r\n            tipNode = this.cellDom.getElementsByClassName('template-item-wrapper-inner')[0]\r\n            if (tipNode) {\r\n                if ((tipNode.scrollWidth > tipNode.clientWidth || tipNode.offsetHeight > 30) && showTip === false) {\r\n                    let tooltipDelay\r\n                    tipNode.scrollWidth > 4000 ? tooltipDelay = false : tooltipDelay = true\r\n                    this.setState({ showTip: true, tooltipDelay });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 单元格点击事件\r\n    onCellClick = (tag, e) => {\r\n        if (this.cellDom) {\r\n            let $focusElement = this.cellDom.querySelector('.template-item-wrapper.template-item-browse[tabindex=\"0\"]');\r\n            if (tag == 'picker' || tag == 'select' || tag == 'refer') {\r\n                this.setState({ autoOpen: true });\r\n            }\r\n\r\n            if ($focusElement) {\r\n                // 自动增行 触发编辑前事件\r\n                $focusElement.ncExecuteFocus = true;\r\n                // console.log($focusElement, 'xxx');\r\n                this.cellDom.contains(e.target) && $focusElement.focus();\r\n                // TODO 可能会有内存泄露\r\n                $focusElement.ncExecuteFocus = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let cellUI = this.getCellUI();\r\n\r\n        if (!cellUI) {\r\n            return <div />;\r\n        }\r\n\r\n        let {\r\n            // 单元格beeTable render返回的属性\r\n            record,\r\n            rowIndex,\r\n            // 表格整体的属性\r\n            bodyDisplayInRow = true,\r\n            // 列属性\r\n            attrcode,\r\n            itemtype,\r\n            onTableCellClick,\r\n            onCellKeyDown,\r\n            onCellFocus,\r\n            onCellMouseDown,\r\n            onEnter,\r\n            hotKeyWithArrow,\r\n            tableId,\r\n            __col,\r\n            langJson = {},\r\n        } = this.props;\r\n\r\n        // 计算状态\r\n        let {\r\n            disabled, tableEdit, editable, selected, focused, cellIcon, actived, showDrag, validated, focusToEdit,\r\n            leftLine,\r\n            rightLine,\r\n            bottomLine,\r\n            topLine,\r\n            renderType,\r\n            isCheckboxSwitchType,\r\n            isSagaStatus,\r\n            isCellIconInRight,\r\n        } = this.cellStatus;\r\n        // 单元格className\r\n        let hasCellIcon = tableEdit && this.state.showIcon && cellIcon !== 'none';\r\n        let hasValue = !isWrong(this.cellValue.value ?? this.cellValue.display);\r\n\r\n        let cellStyle = (tableEdit ? ' table-status-edit' : '') +\r\n            (actived ? ' table-cell-actived' : '') +\r\n            (focusToEdit ? ' table-cell-focus-blue' : '') +\r\n            (focused ? ' table-cell-focused' : '') +\r\n            (disabled ? ' table-cell-disabled' : '') +\r\n            (editable ? ' table-cell-edit' : '') +\r\n            (validated === false ? ' table-cell-valid-failed' : '') + '';\r\n\r\n        let cellBgBdClassName = \" table-cell-wrapper-bg \" +\r\n            (topLine ? ' table-cell-line-top' : '') +\r\n            (leftLine ? ' table-cell-line-left' : '') +\r\n            (rightLine ? ' table-cell-line-right' : '') +\r\n            (bottomLine ? ' table-cell-line-bottom' : '') +\r\n            cellStyle;\r\n\r\n        let cellClassName = ' table-cell-wrapper ' +\r\n            this.getCellClassName() +\r\n            ' cell-icon-' + cellIcon +\r\n            (selected ? ' table-cell-selected' : '') +\r\n            cellStyle +\r\n            (isCheckboxSwitchType ? ' table-cell-checkbox-switch' : '') +\r\n            (hasCellIcon ? ' table-cell-show-icon' : '');\r\n        // (hasCellIcon && hasValue && !isCellIconInRight ? ' table-cell-icon-left ' : ' ');\r\n        // 给框选用\r\n        let cellSelectorKey = this.rowKeyValue + '@' + attrcode;\r\n        // 给快捷键用 TODO 还有结构要优化一下\r\n        let hotKeyPrefix = CONFIG.hotKeyModuleIdPrefix + '-' + tableId + '-' + attrcode + '-' + rowIndex;\r\n        let autoFocusIdentifier = {};\r\n        autoFocusIdentifier[hotKeyPrefix] = hotKeyPrefix;\r\n\r\n        // cellContentClassName\r\n        let cellContentClassName = \" cell-content \" +\r\n            (bodyDisplayInRow ? ' cell-ellipsis' : '') +\r\n            (editable ? ' cell-edit' : '') +\r\n            (!bodyDisplayInRow ? ' cell-fold-display' : '') +\r\n            (itemtype === 'number' ? ' number-right ' : ' ');\r\n\r\n        return <Fragment>\r\n            <div className={cellBgBdClassName} cellSelectorKey={cellSelectorKey} data-code={attrcode} {...autoFocusIdentifier}>\r\n                <div className=\"left-line line-line-line\"></div>\r\n                <div className=\"right-line line-line-line\"></div>\r\n                <div className=\"top-line line-line-line\"></div>\r\n                <div className=\"bottom-line line-line-line\"></div>\r\n            </div>\r\n            <div\r\n                fieldid={getSysFieldid(attrcode)}\r\n                {...autoFocusIdentifier}\r\n                className={cellClassName}\r\n                ref={dom => {\r\n                    this.cellDom = dom;\r\n                }}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onClick={e => {\r\n                    if (isSagaStatus) {\r\n                        return;\r\n                    }\r\n                    // 这里主要给自动化测试用\r\n                    this.onCellClick('wrapper', e);\r\n\r\n                    if (onTableCellClick) {\r\n                        onTableCellClick(record, rowIndex, attrcode, __col, e);\r\n                    }\r\n                    // setCellStatus && setCellStatus({ rowKey, rowKeyValue, rowIndex, attrcode });\r\n                }}\r\n                // 给框选之类的使用\r\n                cellSelectorKey={cellSelectorKey}\r\n                data-type={itemtype}\r\n                data-code={attrcode}\r\n                data-renderType={renderType}\r\n                onKeyDown={e => {\r\n                    // console.log('cell onKeyDow trigger', e);\r\n                    if (!focusToEdit && e.key === 'Enter') {\r\n                        e.stopPropagation();\r\n                        onEnter({ e, target: e.target, itemType: itemtype });\r\n                    }\r\n\r\n                    if (!focusToEdit && isArrowKeyDown(e)) {\r\n                        e.stopPropagation();\r\n                        hotKeyWithArrow && hotKeyWithArrow({ e, target: e.target, itemType: itemtype });\r\n                    }\r\n\r\n                    return onCellKeyDown && onCellKeyDown(record, rowIndex, attrcode, __col, e);\r\n                }}\r\n\r\n                // 快捷键\r\n                onMouseDown={e => {\r\n                    return onCellMouseDown && onCellMouseDown(record, rowIndex, attrcode, __col, e);\r\n                }}\r\n                // 还需 !isEdit\r\n                // tabIndex={!disabled && editable ? '0' : '-1'}\r\n                onFocus={e => {\r\n                    // console.log('onfocus trigger');\r\n                    // 添加一个样式\r\n                    this.cellDom && (this.cellDom.className += ' table-cell-focused');\r\n                    return onCellFocus && onCellFocus(record, rowIndex, attrcode, __col, e);\r\n                }}\r\n                onBlur={e => {\r\n                    // console.log('onblur trigger', e);\r\n                    this.cellDom && (this.cellDom.className = this.cellDom.className.replace('table-cell-focused', ''));\r\n                }}\r\n            >\r\n                {editable || !this.state.showTip ? <div\r\n                    className={cellContentClassName}\r\n                >\r\n                    {cellUI}\r\n                </div> :\r\n                    <Tooltip\r\n                        placement=\"top\"\r\n                        overlay={handleBrowseData(itemtype, this.cellValue.display, this.cellValue.value, this.cellScale, attrcode, __col.languageMeta, record.values || record, __col.datatype, __col.options, __col.multiple, langJson)}\r\n                        className=\"tooltip-word-color high-table-tooltip\"\r\n                        delay={this.state.tooltipDelay ? 1 : undefined}\r\n                        inverse>\r\n                        <div\r\n                            className={cellContentClassName}\r\n                        >\r\n                            {cellUI}\r\n                        </div>\r\n                    </Tooltip>\r\n                }\r\n                {editable && !isSagaStatus && this.state.showIcon && <CellIcon itemtype={itemtype} attrcode={attrcode} value={this.cellValue.value ?? this.cellValue.display} disabled={disabled} cellIcon={cellIcon} onClick={this.onCellClick} />}\r\n            </div >\r\n            {!disabled && showDrag && !isSagaStatus && <div cellDrag=\"on\" cellSelectorKey={cellSelectorKey} className=\"table-cell-drag-icon iconfont\"></div>}\r\n        </Fragment>;\r\n    }\r\n}\r\n\r\nexport default Cell;","/*\r\n * @Descripttion: 列创建\r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-06-02 16:29:54\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-03-08 10:41:54\r\n */\r\n\r\nimport React, { Component, Fragment } from 'react';\r\n\r\nimport { isFunction, filterColumns, isWrong, isObject } from '../../utils/index';\r\n\r\nimport { ItemProvider } from '@platform/template';\r\nimport { getSysFieldid, getLangCode } from \"@platform/api\";\r\n\r\nimport Title from './Title';\r\nimport Cell from './Cell';\r\n\r\nimport CONFIG from '../../config';\r\n\r\n/**\r\n * @name: \r\n * @test: test font\r\n * @msg: 创建列属性\r\n * @param {type} \r\n * @return: \r\n */\r\nexport function createColumns(columns, others) {\r\n    // TODO 对columns 数据要进行格式化  可以在放入Store时执行\r\n\r\n    // 过滤不可见的列\r\n    columns = filterColumns(columns, item => {\r\n        !item && console.warn('columns include empty element, please check columns data')\r\n        return item.visible;\r\n    });\r\n\r\n    // 预处理一些状态和属性，避免单元格渲染时处理耗费大量时间\r\n    let loginLanguage = getLangCode();\r\n\r\n    //  返回渲染列\r\n    return columns.map(item => {\r\n        if (item.children) {\r\n            return {\r\n                required: false,\r\n                className: (item.className || '') + ' parent-column',\r\n                key: item.attrcode,\r\n                dataIndex: item.dataIndex || item.attrcode,\r\n                title: <Title {...item} title={item.title || item.label} {...others} attrcode={item.attrcode || item.key} isParent />,\r\n                children: createColumns(item.children, others),\r\n            };\r\n        }\r\n        if (isWrong(item.width)) {\r\n            if (item.itemtype === 'datetimepicker') {\r\n                item.width = '240px';\r\n            } else if (item.itemtype === 'rangepicker') {\r\n                item.width = '390px';\r\n            } else if (CONFIG.timeTypes.includes(item.itemtype)) {\r\n                item.width = '160px';\r\n            } else {\r\n                item.width = '120px';\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...item,\r\n            required: false,\r\n            // 列的className\r\n            className: (item.className ? item.className : ' ') + (item.unitActive ? ' column-header-active ' : ' ') + (item.itemtype === 'number' ? ' column-type-number ' : ' '),\r\n            key: item.key || item.attrcode,\r\n            redstar: item.required, //给列设置用\r\n            dataIndex: item.dataIndex || item.attrcode,\r\n            title: <Title {...item} title={item.title || item.label} {...others} attrcode={item.attrcode || item.key} />,\r\n            render: (text, record, index) => {\r\n                let __col = item;\r\n                item.key = item.key || item.attrcode;\r\n                // return <div />;\r\n                return {\r\n                    children: <Cell\r\n                        {...item}\r\n                        {...others}\r\n                        loginLanguage={loginLanguage}\r\n                        cellIcon={others.cellIcon || item.cellIcon}\r\n                        // 合并 renderStatus  避免报错\r\n                        renderStatus={others.renderStatus || item.renderStatus}\r\n                        record={record}\r\n                        text={text}\r\n                        attrcode={item.attrcode || item.key}\r\n                        rowIndex={index}\r\n                        __col={__col} />,\r\n                    props: isFunction(others.mergeCell) ? others.mergeCell({ record, index, attrcode: item.attrcode }) : {}, // 合并单元格\r\n                };\r\n            },\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n * 创建标准化表格\r\n * @param {*} Table \r\n */\r\nexport default function formatColumn(Table) {\r\n    if (!Table) {\r\n        console.error('缺少Table组件');\r\n    }\r\n    // TODO\r\n    Table = ItemProvider(Table);\r\n    return class MetaTable extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n        }\r\n\r\n        render() {\r\n            let {\r\n                columns,\r\n                langJson,\r\n                getCellProps, setCellProps, onTableCellClick,\r\n                onBeforeEvent, onAfterEvent,\r\n                setCellValue, getCellValue,\r\n                onCellStatusChange,\r\n                rowKey,\r\n                // name 和 tableId 可以合并成一个\r\n                name,\r\n                tableId,\r\n                status,\r\n                bodyDisplayInRow,\r\n                cellClassName,\r\n                mergeCell,\r\n                store,\r\n                onCellHyperlinkTo,\r\n                cellIcon,\r\n                renderItems,\r\n                renderStatus,\r\n                onCellKeyDown,\r\n                onCellMouseDown,\r\n                onCellFocus,\r\n                disableEditType,\r\n                fieldid,\r\n                hotKeyWithArrow,\r\n                onEnter,\r\n                ...others\r\n            } = this.props;\r\n            return <div className=\"use-column-component\" fieldid={getSysFieldid(`${fieldid || name}_table`)}>\r\n                <Table\r\n                    rowKey={record => {\r\n                        return isObject(record[rowKey]) ? record[rowKey].value : record[rowKey]\r\n                    }}\r\n                    bodyDisplayInRow={bodyDisplayInRow}\r\n                    columns={createColumns(columns, {\r\n                        getCellProps,\r\n                        setCellProps,\r\n                        onTableCellClick,\r\n                        onBeforeEvent,\r\n                        onAfterEvent,\r\n                        onCellStatusChange,\r\n                        setCellValue,\r\n                        getCellValue,\r\n                        rowKey,\r\n                        status,\r\n                        bodyDisplayInRow,\r\n                        cellClassName,\r\n                        mergeCell,\r\n                        store,\r\n                        onCellHyperlinkTo,\r\n                        cellIcon,\r\n                        renderItems,\r\n                        renderStatus,\r\n                        onCellKeyDown,\r\n                        onCellMouseDown,\r\n                        onCellFocus,\r\n                        tableId,\r\n                        langJson,\r\n                        disableEditType,\r\n                        hotKeyWithArrow,\r\n                        onEnter,\r\n                    })}\r\n                    store={store}\r\n                    tableId={tableId}\r\n                    name={name}\r\n                    langJson={langJson}\r\n                    hotKeyWithArrow={hotKeyWithArrow}\r\n                    onEnter={onEnter}\r\n                    // 设置单元格样式\r\n                    // getCellClassName={(record, index, column) => {\r\n                    //     let { attrcode } = column;\r\n                    //     // console.log(record, index, column);\r\n                    //     return `-td-${attrcode}-${index}`;\r\n                    // }}\r\n                    {...others}\r\n                />\r\n            </div>\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { Select, Pagination, Tooltip } from '@platform/base';\r\nimport { getSysFieldid, getMultiLang } from '@platform/api';\r\nconst MAX_BUTTONS = 5;\r\nconst Option = Select.Option;\r\nimport './index.less';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function pagination(Table) {\r\n    return class PaginationWrapper extends Component {\r\n        static defaultProps = {\r\n            pageInfo: {},\r\n        };\r\n\r\n        static propTypes = {\r\n            pageInfo: PropTypes.object,\r\n            pageInfoChange: PropTypes.function,\r\n        };\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                hideSelectDropdown: false,\r\n                //pageInfo: this.props.pageInfo,\r\n                json: {},\r\n            };\r\n            this.options = ['10', '20', '50', '100'];\r\n\r\n            this.selectDom = null;\r\n\r\n        }\r\n\r\n        UNSAFE_componentWillMount() {\r\n            //加载多语\r\n            let callback = json => {\r\n                this.setState({ json });\r\n            };\r\n            getMultiLang({ moduleId: 'table_lib_pagination', callback });\r\n        }\r\n\r\n        //pageIndex事件\r\n        pageIndexChange = val => {\r\n            let { pageInfoChange, pageInfo } = this.props;\r\n            let { total, pageSize } = pageInfo;\r\n            //更新 pageInfo\r\n            let newPageInfo = {\r\n                ...pageInfo,\r\n                pageIndex: val,\r\n                totalPage: Math.ceil(total / pageSize),\r\n            }\r\n\r\n            if (typeof pageInfoChange === 'function') {\r\n                pageInfoChange(newPageInfo);\r\n            }\r\n        };\r\n\r\n        // pageSize事件\r\n        pageSizeChange = val => {\r\n            let { pageInfoChange, pageInfo } = this.props;\r\n            let { total } = pageInfo;\r\n            let newPageInfo = {\r\n                ...pageInfo,\r\n                pageIndex: 1,\r\n                pageSize: +val,\r\n                totalPage: Math.ceil(total / val),\r\n            }\r\n\r\n            if (typeof pageInfoChange === 'function') {\r\n                pageInfoChange(newPageInfo);\r\n            }\r\n        };\r\n\r\n        render() {\r\n            let { hideSelectDropdown, json } = this.state;\r\n            let { pageInfo, checkNum, showPagination = false } = this.props;\r\n            let { pageSize, total, totalPage, pageIndex } = pageInfo;\r\n            //用户自定义录入得分页条数也显示 '条/页'\r\n            if(!this.options.includes(String(pageSize))){\r\n                pageSize = pageSize + json['pagination003'] + '/' + json['pagination001'];\r\n            }\r\n            let dropdownStyle = hideSelectDropdown ? { dropdownStyle: { display: \"none\" } } : {};\r\n            return (\r\n                <React.Fragment>\r\n                    <Table {...this.props} />\r\n                    {showPagination && <div\r\n                        className=\"pagination-wrapper\"\r\n                        fieldid={getSysFieldid(\"pagination-div\")}\r\n                    >\r\n                        <div className=\"pagination-size\">\r\n                            <Select\r\n                                ref={(dom) => {\r\n                                    this.selectDom = dom;\r\n                                }}\r\n                                className=\"pagination-select\"\r\n                                dropdownClassName=\"pagination-select-dropdown\"\r\n                                fieldid=\"page-size\"\r\n                                supportSearch={true}\r\n                                showSearch={true}\r\n                                supportWrite={true}\r\n                                showClear={false}\r\n                                value={String(pageSize || '')}\r\n                                onSelect={this.pageSizeChange}\r\n                                onChange={val => {\r\n                                    // 自定义录入每页条数完成后的回调\r\n                                    if (Array.isArray(val)) {\r\n                                        if (val[0].length < 500 && /^[1-9]*[1-9][0-9]*$/.test(val[0])) {\r\n                                            val = val > 5000 ? 5000 : val;\r\n                                            this.pageSizeChange(val);\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                onFocus={() => {\r\n                                    //获取焦点后显示下拉框\r\n                                    if (hideSelectDropdown) {\r\n                                        this.setState({ hideSelectDropdown: false });\r\n                                    }\r\n                                }}\r\n                                onSearch={() => {\r\n                                    // 在input录入过程中不显示下拉\r\n                                    if (!hideSelectDropdown) {\r\n                                        this.setState({ hideSelectDropdown: true });\r\n                                    }\r\n                                }}\r\n                                onKeyDown={e => {\r\n                                    // 回车键应用自定义值\r\n                                    if (e.keyCode == 13) {\r\n                                        this.selectDom && ReactDOM.findDOMNode(this.selectDom)\r\n                                            .querySelector(\".pagination-select .u-select-selection--single .u-select-search-field\")\r\n                                            .blur();\r\n                                    }\r\n                                }}\r\n                                // 给select下拉框设置显示隐藏\r\n                                {...dropdownStyle}\r\n                            >\r\n                                {this.options.map((item, index) => {\r\n                                    return (\r\n                                        <Option\r\n                                            key={index}\r\n                                            value={item}\r\n                                            className=\"pagination-option\"\r\n                                        >\r\n                                            {/* <Tooltip\r\n                                                className=\"pagination-tip\"\r\n                                                placement=\"bottom\"\r\n                                                overlay={`${item}${json['pagination003']}/${json['pagination001']}`}\r\n                                            > */}\r\n                                            <div className=\"pagination-size\">\r\n                                                {`${item}${json['pagination003']}/${json['pagination001']}`}\r\n                                            </div>\r\n                                            {/* </Tooltip> */}\r\n                                        </Option>\r\n                                    )\r\n                                })}\r\n                            </Select>\r\n                            {!!+total && (\r\n                                <span className=\"pagination-total\">\r\n                                    {json['pagination002']}<span>{total}</span>{json['pagination003']}\r\n                                    {checkNum && <span style={{ marginLeft: '1px' }}>&nbsp;{json['pagination004']}{checkNum()}{json['pagination003']}</span>}\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"pagination\">\r\n                            <Pagination\r\n                                prev\r\n                                next\r\n                                boundaryLinks\r\n                                items={Number(totalPage || 1)}\r\n                                /*分页器按钮：最多显示7个按钮, 当页数>7时 左侧最多显示5个按钮 等于7时 左侧最多显示6个按钮*/\r\n                                maxButtons={Number(totalPage || 1) === 7 ? 6 : MAX_BUTTONS}\r\n                                activePage={Number(pageIndex)}\r\n                                onSelect={this.pageIndexChange}\r\n                            />\r\n                        </div>\r\n                    </div>}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}","/*\r\n * @Descripttion: 行选中的逻辑整理\r\n * @version:\r\n * @Author: bbq\r\n * @Date: 2020-06-15 15:30:43\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2020-07-30 13:43:55\r\n */\r\n\r\nimport React, { Component, Fragment } from 'react';\r\n\r\nimport { isFunction, isArray } from '@platform/api';\r\n\r\nimport './index.less';\r\n\r\n/**\r\n* 行选中逻辑处理\r\n* @param {*} Table \r\n*/\r\nexport default function selectRow(Table) {\r\n    if (!Table) {\r\n        console.error('缺少Table组件');\r\n    }\r\n    return class MetaTable extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { selectedIndex: new Set() };\r\n        }\r\n\r\n        hasSelected(record, rowKey, rowKeyValue, rowIndex) {\r\n            let { hasSelected } = this.props;\r\n\r\n            if (isFunction(hasSelected)) {\r\n                return hasSelected({ record, rowKey, rowKeyValue, rowIndex });\r\n            } else {\r\n                return this.state.selectedIndex.has(rowKeyValue || rowIndex);\r\n            }\r\n        }\r\n\r\n        render() {\r\n            let {\r\n                rowKey,\r\n                focusIndex,\r\n                hasSelected,\r\n                setSelectedIndex,\r\n                rowSelectedCls = ' table-row-selected ',\r\n                // disabledSelectRow = false,\r\n                multiSelectRow = true, // 多选\r\n                rowClassName,\r\n                onRowClick,\r\n                onRowDoubleClick,\r\n                ...others\r\n            } = this.props;\r\n            return <Table\r\n                rowKey={rowKey}\r\n                currentIndex={focusIndex}\r\n                rowClassName={(record, current) => {\r\n                    let isSelected = this.hasSelected(record, rowKey, record[rowKey], current),\r\n                        cls = '';\r\n\r\n                    isSelected && (cls = rowSelectedCls)\r\n\r\n                    cls += isFunction(rowClassName) ? rowClassName(record, current) : rowClassName;\r\n\r\n                    return cls;\r\n                }}\r\n                onRowClick={(record, index, e) => {\r\n                    if (isFunction(setSelectedIndex)) {\r\n                        setSelectedIndex({ record, rowKey, rowIndex: index }, e)\r\n                    } else {\r\n                        let selectedIndexs = this.state.selectedIndex;\r\n                        if (selectedIndexs.has(record[rowKey] || index)) {\r\n                            selectedIndexs.delete(record[rowKey] || index);\r\n                        } else {\r\n                            !multiSelectRow && (selectedIndexs.clear());\r\n                            selectedIndexs.add(record[rowKey] || index);\r\n                        }\r\n                        this.setState({ selectedIndex: this.state.selectedIndex });\r\n                    }\r\n\r\n                    isFunction(onRowClick) && onRowClick(record, index, e);\r\n                }}\r\n                onRowDoubleClick={(record, index, e) => {\r\n\r\n                    if (isFunction(setSelectedIndex)) {\r\n                        setSelectedIndex({ record, rowKey, rowIndex: index })\r\n                    } else {\r\n                        let selectedIndexs = this.state.selectedIndex;\r\n                        if (selectedIndexs.has(record[rowKey] || index)) {\r\n                            selectedIndexs.delete(record[rowKey] || index);\r\n                        } else {\r\n                            !multiSelectRow && (selectedIndexs.clear());\r\n                            selectedIndexs.add(record[rowKey] || index);\r\n                        }\r\n                        this.setState({ selectedIndex: this.state.selectedIndex });\r\n                    }\r\n\r\n                    isFunction(onRowDoubleClick) && onRowDoubleClick(record, index, e);\r\n                }}\r\n                {...others}\r\n            />\r\n        }\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { getMultiLang } from '@platform/api';\r\nimport './index.less';\r\nimport { isObject, isArray } from \"../../utils\";\r\n\r\nexport default function indexCol(Table) {\r\n    return class ModalTable extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n        }\r\n        render() {\r\n            let { columns, indexColConfig = {}, checkColConfig = {}, data = [] } = this.props\r\n            let { showIndex, langJson } = indexColConfig\r\n\r\n            data.length && data.forEach((row, index) => { //解决业务组 会这样取值 :record.values['numberindex']\r\n                if (isObject(row.values)) {\r\n                    row.values['numberindex'] = { value: `${index + 1}` }\r\n                } else {\r\n                    row['numberindex'] = { value: `${index + 1}` }//兼容simpletable\r\n                }\r\n            });\r\n            const numberColum = {\r\n                label: langJson['table001'],\r\n                attrcode: 'numberindex',\r\n                dataIndex: 'numberindex',\r\n                className: 'table-index',\r\n                visible: true,\r\n                fixed: 'left',\r\n                itemtype: 'customer',\r\n                width: checkColConfig.showCheck ? '60px' : '70px',\r\n                render: (text, record, index) => { return <div>{index + 1}</div> },\r\n            }\r\n            if (showIndex && isArray(columns)) {\r\n                columns = [numberColum, ...columns]\r\n            }\r\n            return (<Table {...this.props} columns={columns} data={data} />)\r\n        }\r\n\r\n    }\r\n\r\n}","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { getSysFieldid } from '@platform/api';\r\nimport { Checkbox, Dropdown, Menu } from '@platform/base';\r\nimport { isFunction } from '@platform/api';\r\nimport './index.less';\r\nimport { isObject, isString } from '../../utils';\r\nconst { Item } = Menu;\r\n\r\nexport default function checkCol(Table) {\r\n    return class ModalTable extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n        }\r\n\r\n        componentDidMount() {\r\n        }\r\n\r\n        getTitle() {\r\n            let {\r\n                checkColConfig = {},\r\n                checkInfo = {},\r\n                onAllCheckChange,\r\n            } = this.props\r\n            const { changeCrossSelect, crossPageSelect } = checkColConfig\r\n            let { langJson } = checkColConfig\r\n\r\n            const menu = < Menu onClick={this.chooseStatus} >\r\n                <Item key=\"all\">{langJson['table0036'] || '全选'}</Item>\r\n                <Item key=\"reverse\">{langJson['table0039'] || '全反选'}</Item>\r\n                <Item key=\"current\">{langJson['table0040'] || '仅当前页'}</Item>\r\n            </Menu >\r\n\r\n            return < span fieldid={getSysFieldid('firstcol')} >\r\n                <Checkbox\r\n                    className=\"table-checkbox\"\r\n                    checked={checkInfo.checkedAll}\r\n                    disabled={checkInfo.disabledAll}\r\n                    indeterminate={checkInfo.indeterminate}\r\n                    tabindex=\"-1\"\r\n                    onChange={value => {\r\n                        isFunction(onAllCheckChange) && onAllCheckChange(value)\r\n                    }}\r\n                />\r\n                {crossPageSelect && isFunction(changeCrossSelect) &&\r\n                    <Dropdown\r\n                        trigger={['click']}\r\n                        overlay={menu}\r\n                        overlayClassName={'select-status'}\r\n                        animation=\"slide-up\">\r\n                        <i className='icon-bottom iconfont' />\r\n                    </Dropdown>\r\n                }\r\n            </span >;\r\n        }\r\n\r\n        onCellClick = (record, e) => {\r\n            let {\r\n                data, onCheckChange,\r\n                rowKey,\r\n            } = this.props\r\n            \r\n            const { disabled } = record;\r\n            // 禁用不允许点击\r\n            if (disabled && disabled.value) return;\r\n            let rowId = record[rowKey] || record.key\r\n            if (isObject(record[rowKey])) {//兼容simpletable\r\n                rowId = record[rowKey].value\r\n            }\r\n            let index = data.findIndex(row => {\r\n                if (isObject(row[rowKey])) {//兼容simpletable\r\n                    return rowId === row[rowKey].value\r\n                } else {\r\n                    return row[rowKey] === rowId\r\n                }\r\n            })\r\n            isFunction(onCheckChange) && onCheckChange(record, index)\r\n            // 阻止冒泡防止行点击触发\r\n            e.stopPropagation();\r\n        }\r\n\r\n        chooseStatus = ({ key }) => {\r\n            let { checkColConfig = {} } = this.props\r\n            const { changeCrossSelect } = checkColConfig\r\n            changeCrossSelect(key)\r\n        }\r\n\r\n        render() {\r\n            let {\r\n                columns, checkColConfig = {},  onCheckChange,\r\n            } = this.props\r\n            const { showCheck} = checkColConfig\r\n\r\n           \r\n            if (showCheck) {\r\n                const checkboxColum = {\r\n                    title: this.getTitle.bind(this),\r\n                    // 这个是列使用的方法  要和  onTableCellClick 我们自己定义的方法区分下\r\n                    // 增加单选的触发区域范围\r\n                    onCellClick: this.onCellClick,\r\n                    // 增加全选的触发区域范围, 禁用不允许点击\r\n                    // onHeadCellClick: () => {\r\n                    //     let { disabledAll, onAllCheckChange } = this.props\r\n                    //     disabledAll || isFunction(onAllCheckChange) && onAllCheckChange()\r\n                    // },\r\n                    dataIndex: 'checkbox',\r\n                    className: 'table-checkbox-class',\r\n                    visible: true,\r\n                    attrcode: 'checkbox',\r\n                    itemtype: 'customer',\r\n                    width: '54px', //NCC-56167\r\n                    fixed: 'left',\r\n                    render: (text, record, index) => {\r\n                        let selected = record.selected\r\n                        let disabled = record.disabled\r\n                        if (isObject(record.selected)) {//兼容simpletable\r\n                            selected = record.selected.value\r\n                        }\r\n                        if (isObject(record.disabled)) {//兼容simpletable\r\n                            disabled = record.disabled.value\r\n                        }\r\n                        return (\r\n                            <span fieldid={getSysFieldid('firstcol')}>\r\n                                <Checkbox\r\n                                    className=\"table-checkbox\"\r\n                                    checked={!!selected}\r\n                                    disabled={!!disabled}\r\n                                    tabindex=\"-1\"\r\n                                    onChange={() => {\r\n                                        isFunction(onCheckChange) && onCheckChange(record, index, selected)\r\n                                    }}\r\n                                />\r\n                            </span>)\r\n                    },\r\n                }\r\n                //     let haveCheckCol = columns.some(item => item.attrcode === 'checkbox')\r\n                //     if (!haveCheckCol) {\r\n                columns = [checkboxColum, ...columns]\r\n                // }\r\n            }\r\n            return (\r\n                <Table\r\n                    {...this.props}\r\n                    columns={columns}\r\n                />)\r\n        }\r\n\r\n    }\r\n\r\n}","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-09-15 15:14:02\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2020-11-19 14:12:26\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { isFunction } from \"@platform/api\";\r\nimport { ErrorPop } from \"@platform/base\";\r\n\r\nexport default function errorCol(Table) {\r\n    return class ModalTable extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n        }\r\n\r\n        //修改saga行checkbox/numberindex 列\r\n        changeColumn = () => {\r\n            let {\r\n                columns,\r\n                indexColConfig = {},\r\n                checkColConfig = {},\r\n                name,\r\n            } = this.props;\r\n            let { showIndex = true } = indexColConfig;\r\n            let { showCheck = true } = checkColConfig;\r\n            // 有checkbox 修改checkbox列 ; 无checkbox列，修改numberindex列\r\n            let errorCode = showCheck ? 'checkbox' : showIndex ? 'numberindex' : '';\r\n            if (Array.isArray(columns) && columns.length > 0 && errorCode) {\r\n                let errorCol = columns.find(e => e.attrcode === errorCode);\r\n                if (errorCol) {\r\n                    let oldRender = errorCol.render;\r\n                    let oldCellClick = errorCol.onCellClick;\r\n                    errorCol.onCellClick = (record, e) => {\r\n                        let { saga_status = {} } = record.values || record;\r\n                        if (saga_status.value !== \"1\") {\r\n                            oldCellClick && oldCellClick(record, e);\r\n                        }\r\n                    }\r\n                    errorCol.render = (text, record = {}, index) => {\r\n                        let { saga_status = {} } = record.values || record;\r\n                        return saga_status.value === \"1\" ? (\r\n                            <ErrorPop record={record.values || record} name={name} />\r\n                        ) : (oldRender(text, record, index));\r\n                    };\r\n                }\r\n            }\r\n            return columns;\r\n        };\r\n\r\n        //禁用saga行点击事件\r\n        rowClick = (record, index, e) => {\r\n            if (!record) return;\r\n            let { onRowClick } = this.props;\r\n            let { saga_status = {} } = record.values || record;\r\n            // 错误行禁用\r\n            if (saga_status.value === \"1\") return;\r\n            isFunction(onRowClick) && onRowClick(record, index, e);\r\n        };\r\n\r\n        //禁用saga行快捷键\r\n        rowRef = record => {\r\n            if (!record) return;\r\n            let { saga_status = {} } = record.values || record;\r\n            if (saga_status.value === \"1\") {\r\n                record.element && record.element.setAttribute(\"tabindex\", \"-1\");\r\n            }\r\n        };\r\n\r\n        render() {\r\n            let { columns, onRowClick, ...others } = this.props;\r\n\r\n            return (\r\n                <Table\r\n                    columns={this.changeColumn()}\r\n                    onRowClick={this.rowClick}\r\n                    rowRef={this.rowRef}\r\n                    {...others}\r\n                />\r\n            );\r\n        }\r\n    };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { moment } from '@platform/api';\r\nimport { Modal, Input, InputNumber, Select, DatePicker, TextArea, Radio, Switch, Button, Form } from '@platform/base'\r\nimport { toast, isWrong, createScript, isObj, getSafeRandom } from '@platform/api';\r\nimport refer from './createRefer'\r\nimport './index.less';\r\nimport { isFunction } from \"../../utils\";\r\n\r\nconst FormItem = Form.FormItem;\r\nconst Option = Select.Option;\r\nconst displayTypes = ['select', 'radio', 'checkbox', 'refer']\r\n\r\nexport default function simpleTableModal(Table) {\r\n    return class ModalTable extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { json: {} }\r\n        }\r\n\r\n        // UNSAFE_componentWillMount() {\r\n        //     // 初始化调用getPlatformLang方法获取多语\r\n        //     let callback = (json, bool, LangData) => {\r\n        //         this.setState({ json, LangData });\r\n        //     };\r\n        //     // moduleId为所需加载json文件夹名称前缀\r\n        //     getMultiLang({ moduleId: 'page_table', callback });\r\n        // }\r\n\r\n        handleDoSave = () => {\r\n            let { store, tableModelConfirm } = this.props\r\n            let { closeModal, getStore } = store\r\n            let { modelDatas } = getStore()\r\n            let { operType, record: tableModeldata } = modelDatas\r\n            let tempObj = {},\r\n                moduleId = this.props.name,\r\n                type = operType\r\n            // TODO\r\n            modelDatas.modelColumn.forEach(item => {\r\n                let key = item.attrcode;\r\n                // 过滤操作列和序号列\r\n                if (key != 'customer') {\r\n                    tempObj[key] = {\r\n                        display: isObj(tableModeldata[key]) ? tableModeldata[key].display || null : null,\r\n                        scale: isObj(tableModeldata[key]) ? this.handleScale(tableModeldata[key].scale) : '-1',\r\n                        value: isObj(tableModeldata[key]) ? this.handleValue(key, type, tableModeldata[key].value) : null,\r\n                    };\r\n                }\r\n            });\r\n\r\n            let dist = {\r\n                [moduleId]: {\r\n                    areaType: 'table',\r\n                    pageInfo: {},\r\n                    rows: [\r\n                        {\r\n                            rowId: modelDatas.rowId,\r\n                            status: type == 'add' ? 2 : 1,\r\n                            values: { ...tempObj },\r\n                        },\r\n                    ],\r\n                },\r\n            };\r\n            isFunction(tableModelConfirm) && tableModelConfirm(dist, type);\r\n            closeModal(moduleId);\r\n        };\r\n\r\n        handleScale = data => {\r\n            if (typeof data == 'undefined' || data == null) {\r\n                return '-1';\r\n            }\r\n            return +data;\r\n        };\r\n\r\n        handleValue = (key, type, data) => {\r\n            if (key == 'ts' && type == 'add') {\r\n                return null;\r\n            }\r\n            return typeof data == 'undefined' || data == '' ? null : data;\r\n        };\r\n\r\n        handleSubmit = () => {\r\n            const { modalConfig } = this.props;\r\n            let { langJson } = modalConfig;\r\n            let { flag, errorTitle, errorInfo, errorType, max } = this.checkSubmitRule();\r\n            if (flag) {\r\n                let content = {\r\n                    // \"1\": `请${errorInfo + errorTitle}`,\r\n                    1: `${langJson['table0011'] + errorInfo + errorTitle}`,\r\n                    // \"2\": `${errorTitle}的最大长度为${max.toString()}`\r\n                    2: `${errorTitle + langJson['table0012'] + max.toString()}`,\r\n                };\r\n                toast({ content: content[errorType], color: 'danger' });\r\n            } else {\r\n                // 保存\r\n                this.handleDoSave();\r\n            }\r\n        };\r\n\r\n        HanlderCheckInput = (n, slected) => {\r\n            let { value } = slected;\r\n            let len = String(value).length;\r\n            if ((!n && len > 0) || (len > 0 && len <= n)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        HanlderCheckNumber = (max = Infinity, slected) => {\r\n            let { value } = slected;\r\n            if (value && value <= max) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        // 只检测了为空 还要检测长度\r\n        checkSubmitRule = () => {\r\n            const { modalConfig } = this.props;\r\n            let { langJson } = modalConfig;\r\n            var [errorIndex, errorTitle, errorInfo, errorType, max] = [-1];\r\n\r\n            let { modelDatas } = this.props.store.getStore()\r\n            let { record: tableModeldata, modelColumn } = modelDatas\r\n\r\n            // TODO 区分必输和长度限制\r\n            let distCol = modelColumn.length && modelColumn.filter(\r\n                item => !!item.itemtype && item.itemtype !== 'label' && item.itemtype !== 'customer' && !!item.required,\r\n            );\r\n\r\n            let checkEmpty = distCol.some((item, index) => {\r\n                errorIndex = index;\r\n                errorTitle = item.label;\r\n                errorInfo = displayTypes.includes(item.itemtype) ? langJson['table0013'] : langJson['table0014'];\r\n                errorType = null;\r\n                max = '';\r\n                let checkData = tableModeldata[item.attrcode] || {};\r\n                let { value: checkVal } = checkData;\r\n                // item.value == '' 为空   错误类型1\r\n                // item.maxlength 超出     错误类型2\r\n                if (checkVal == '' || checkVal == null || checkVal == undefined) {\r\n                    errorType = '1';\r\n                    return true;\r\n                }\r\n                if (item.maxlength && String(checkVal).length > item.maxlength) {\r\n                    errorType = '2';\r\n                    max = item.maxlength;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (checkEmpty) {\r\n                return {\r\n                    flag: true,\r\n                    errorIndex,\r\n                    errorTitle,\r\n                    errorInfo,\r\n                    errorType,\r\n                    max,\r\n                };\r\n            }\r\n            return { flag: false };\r\n        };\r\n\r\n        close = () => {\r\n            this.props.store.closeModal()\r\n        };\r\n\r\n        afterEvent = (attrcode, changedrows, val, index, record) => {\r\n            if (typeof this.props.afterEvent == 'function') {\r\n                this.props.afterEvent(this.props.moduleId, attrcode, changedrows, val, index, record);\r\n            }\r\n        };\r\n\r\n        render() {\r\n            const { store, type, name, modalConfig } = this.props\r\n            const { getStore, getCtx, setModalValue } = store\r\n            let modelDatas = getStore('modelDatas')\r\n            let { showModal, record: tableModeldata, modelColumn } = modelDatas\r\n            let { langJson } = modalConfig;\r\n            let title = langJson['table0015'];\r\n            switch (type) {\r\n                case 'add':\r\n                    title = langJson['table0016'];\r\n                    break;\r\n                case 'edit':\r\n                    title = langJson['table0017'];\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            let formMeta = modelColumn.length ?\r\n                modelColumn.filter(\r\n                    item => !!item.itemtype && item.itemtype !== 'label' && item.itemtype !== 'customer',\r\n                ) : []\r\n            return (\r\n                <React.Fragment>\r\n                    <Table {...this.props} />\r\n                    {showModal && <Modal\r\n                        id=\"tableModal\"\r\n                        show={showModal}\r\n                        className=\"table-modal\"\r\n                        backdrop=\"static\"\r\n                        animation={false}\r\n                        onHide={this.close}\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{title}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form showSubmit={false} useRow={true} className=\"table-modal-form\">\r\n                                {\r\n                                    formMeta.map((item, i) => {\r\n                                        let render =\r\n                                            typeof item.render === 'function' ? item.render('', modelDatas.record, modelDatas.index) : null;\r\n                                        if (render) {\r\n                                            let val = tableModeldata[item.attrcode] || {};\r\n                                            return (\r\n                                                <FormItem\r\n                                                    key={i}\r\n                                                    inline={true}\r\n                                                    labelMd={3}\r\n                                                    md={9}\r\n                                                    valuePropsName=\"value\"\r\n                                                    showMast={!!item.required}\r\n                                                    isRequire={!!item.required}\r\n                                                    method=\"blur\"\r\n                                                    labelName={item.label}\r\n                                                >\r\n                                                    {{\r\n                                                        ...(render),\r\n                                                        key: item.attrcode,\r\n                                                        props: {\r\n                                                            ...(render),\r\n                                                            ...item,\r\n                                                            foolValue: val,\r\n                                                            disabled: !!item.disabled,\r\n                                                            onChange: value => {\r\n                                                                setModalValue(item.attrcode, value, 'refer');\r\n                                                                let changedrows = [];\r\n                                                                changedrows.push({\r\n                                                                    rowid:\r\n                                                                        modelDatas.rowId || String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12),\r\n                                                                    newvalue: { value },\r\n                                                                    oldvalue: { value: 'value' },\r\n                                                                });\r\n                                                                this.afterEvent(item.attrcode, changedrows, value, modelDatas.index, modelDatas.record);\r\n                                                            },\r\n                                                        },\r\n                                                    }}\r\n                                                </FormItem>\r\n                                            );\r\n                                        } else if (item.refcode) {\r\n                                            // getCtx 方法没有 注意后面需要的话自己加下\r\n                                            // createScript.call(getCtx(), 'table', name, item.attrcode, item.refcode);\r\n                                        } else {\r\n                                            switch (item.itemtype) {\r\n                                                case 'input':\r\n                                                    return (\r\n                                                        <FormItem\r\n                                                            key={i}\r\n                                                            inline={true}\r\n                                                            labelMd={3}\r\n                                                            md={9}\r\n                                                            valuePropsName=\"value\"\r\n                                                            showMast={!!item.required}\r\n                                                            isRequire={!!item.required}\r\n                                                            method=\"blur\"\r\n                                                            asyncCheck={this.HanlderCheckInput.bind(this, item.maxlength)}\r\n                                                            labelName={item.label}\r\n                                                            errorMessage={\r\n                                                                item.maxlength\r\n                                                                    ? `${item.label + langJson['table0012'] + item.maxlength.toString()}`\r\n                                                                    : `${langJson['table0011'] + langJson['table0014'] + item.label}`\r\n                                                            }\r\n                                                        >\r\n                                                            <Input\r\n                                                                placeholder={`${langJson['table0011'] + langJson['table0014']}+...`}\r\n                                                                name={item.attrcode}\r\n                                                                disabled={!!item.disabled}\r\n                                                                {...item}\r\n                                                                value={tableModeldata[item.attrcode] ? tableModeldata[item.attrcode].value : null}\r\n                                                                onChange={val => {\r\n                                                                    setModalValue(item.attrcode, val);\r\n                                                                }}\r\n                                                                onBlur={val => {\r\n                                                                    let changedrows = [];\r\n                                                                    changedrows.push({\r\n                                                                        rowid:\r\n                                                                            modelDatas.rowId ||\r\n                                                                            String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12),\r\n                                                                        newvalue: { value: val },\r\n                                                                        oldvalue: { value: 'value' },\r\n                                                                    });\r\n                                                                    this.afterEvent(item.attrcode, changedrows, val, modelDatas.index, modelDatas.record);\r\n                                                                }}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                    );\r\n                                                case 'number':\r\n                                                    return (\r\n                                                        <FormItem\r\n                                                            key={i}\r\n                                                            inline={true}\r\n                                                            labelMd={3}\r\n                                                            md={9}\r\n                                                            valuePropsName=\"value\"\r\n                                                            showMast={!!item.required}\r\n                                                            isRequire={!!item.required}\r\n                                                            method=\"blur\"\r\n                                                            asyncCheck={this.HanlderCheckNumber.bind(this, item.max)}\r\n                                                            labelName={item.label}\r\n                                                            errorMessage={\r\n                                                                item.max\r\n                                                                    ? `${item.label + langJson['table0018'] + item.max}`\r\n                                                                    : `${langJson['table0011'] + langJson['table0014'] + item.label}`\r\n                                                            }\r\n                                                        >\r\n                                                            <InputNumber\r\n                                                                placeholder={`${langJson['table0011'] + langJson['table0014']}+...`}\r\n                                                                name={item.attrcode}\r\n                                                                scale={\r\n                                                                    tableModeldata[item.attrcode] &&\r\n                                                                        !isWrong(tableModeldata[item.attrcode].scale) &&\r\n                                                                        tableModeldata[item.attrcode].scale != '-1'\r\n                                                                        ? +tableModeldata[item.attrcode].scale\r\n                                                                        : +item.scale || 0\r\n                                                                }\r\n                                                                disabled={!!item.disabled}\r\n                                                                {...item}\r\n                                                                value={tableModeldata[item.attrcode] ? tableModeldata[item.attrcode].value : null}\r\n                                                                onChange={val => {\r\n                                                                    setModalValue(item.attrcode, val);\r\n                                                                }}\r\n                                                                onBlur={val => {\r\n                                                                    let changedrows = [];\r\n                                                                    changedrows.push({\r\n                                                                        rowid:\r\n                                                                            modelDatas.rowId ||\r\n                                                                            String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12),\r\n                                                                        newvalue: { value: val },\r\n                                                                        oldvalue: { value: 'value' },\r\n                                                                    });\r\n                                                                    this.afterEvent(item.attrcode, changedrows, val, modelDatas.index, modelDatas.record);\r\n                                                                }}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                    );\r\n                                                case 'refer':\r\n                                                    return (\r\n                                                        <FormItem\r\n                                                            key={i}\r\n                                                            inline={true}\r\n                                                            labelMd={3}\r\n                                                            md={9}\r\n                                                            valuePropsName=\"value\"\r\n                                                            showMast={!!item.required}\r\n                                                            isRequire={!!item.required}\r\n                                                            method=\"blur\"\r\n                                                            labelName={item.label}\r\n                                                        >\r\n                                                            {refer(item.refcode, {\r\n                                                                disabled: !!item.disabled,\r\n                                                                foolValue: tableModeldata[item.attrcode] || {},\r\n                                                                onChange: val => {\r\n                                                                    setModalValue(item.attrcode, val, 'refer');\r\n                                                                    let changedrows = [];\r\n                                                                    changedrows.push({\r\n                                                                        rowid:\r\n                                                                            modelDatas.rowId ||\r\n                                                                            String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12),\r\n                                                                        newvalue: { value: val },\r\n                                                                        oldvalue: { value: 'value' },\r\n                                                                    });\r\n                                                                    this.afterEvent(item.attrcode, changedrows, val, modelDatas.index, modelDatas.record);\r\n                                                                },\r\n                                                            })}\r\n                                                        </FormItem>\r\n                                                    );\r\n                                                case 'select':\r\n                                                    return (\r\n                                                        <FormItem\r\n                                                            key={i}\r\n                                                            inline={true}\r\n                                                            labelMd={3}\r\n                                                            md={9}\r\n                                                            method=\"blur\"\r\n                                                            showMast={!!item.required}\r\n                                                            isRequire={!!item.required}\r\n                                                            labelName={item.label}\r\n                                                            errorMessage={`${langJson['table0011'] + langJson['table0013'] + item.label}`}\r\n                                                        >\r\n                                                            <Select\r\n                                                                type=\"customer\"\r\n                                                                disabled={!!item.disabled}\r\n                                                                value={tableModeldata[item.attrcode] ? tableModeldata[item.attrcode].value : ''}\r\n                                                                {...item}\r\n                                                                onChange={val => {\r\n                                                                    setModalValue(item.attrcode, String(val));\r\n                                                                    let changedrows = [];\r\n                                                                    changedrows.push({\r\n                                                                        rowid:\r\n                                                                            modelDatas.rowId ||\r\n                                                                            String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12),\r\n                                                                        newvalue: { value: String(val) },\r\n                                                                        oldvalue: { value: 'value' },\r\n                                                                    });\r\n                                                                    this.afterEvent(\r\n                                                                        item.attrcode,\r\n                                                                        changedrows,\r\n                                                                        String(val),\r\n                                                                        modelDatas.index,\r\n                                                                        modelDatas.record,\r\n                                                                    );\r\n                                                                }}\r\n                                                                getPopupContainer={() => document.querySelector('#tableModal')}\r\n                                                                dropdownStyle={{ zIndex: 18000 }}\r\n                                                                dropdownClassName={NODE_ENV === 'test' && item.attrcode + '-' + 'select'}\r\n                                                            >\r\n                                                                {item.options.length &&\r\n                                                                    item.options.map((one, i) => (\r\n                                                                        <Option value={String(one.value)} key={i} title={one.display}>\r\n                                                                            {' '}\r\n                                                                            {one.display}{' '}\r\n                                                                        </Option>\r\n                                                                    ))}\r\n                                                            </Select>\r\n                                                        </FormItem>\r\n                                                    );\r\n                                                case 'datepicker':\r\n                                                    return (\r\n                                                        <FormItem\r\n                                                            key={i}\r\n                                                            inline={true}\r\n                                                            labelMd={3}\r\n                                                            md={9}\r\n                                                            showMast={!!item.required}\r\n                                                            isRequire={!!item.required}\r\n                                                            labelName={item.label}\r\n                                                            errorMessage={`${langJson['table0011'] + langJson['table0013'] + item.label}`}\r\n                                                        >\r\n                                                            <DatePicker\r\n                                                                type=\"customer\"\r\n                                                                format=\"YYYY-MM-DD\"\r\n                                                                disabled={!!item.disabled}\r\n                                                                getCalendarContainer={() => document.querySelector('#tableModal')}\r\n                                                                placeholder={`${langJson['table0013'] + langJson['table0019'] + langJson['table0020']}`}\r\n                                                                {...item}\r\n                                                                value={tableModeldata[item.attrcode] ? moment(tableModeldata[item.attrcode].value) : null}\r\n                                                                onChange={val => {\r\n                                                                    setModalValue(item.attrcode, val);\r\n                                                                    let changedrows = [];\r\n                                                                    changedrows.push({\r\n                                                                        rowid:\r\n                                                                            modelDatas.rowId ||\r\n                                                                            String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12),\r\n                                                                        newvalue: { value: val },\r\n                                                                        oldvalue: { value: 'value' },\r\n                                                                    });\r\n                                                                    this.afterEvent(item.attrcode, changedrows, val, modelDatas.index, modelDatas.record);\r\n                                                                }}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                    );\r\n                                                case 'textarea':\r\n                                                    return (\r\n                                                        <FormItem key={i} inline={true} labelMd={3} md={9} showMast={true} labelName={item.label}>\r\n                                                            <TextArea\r\n                                                                placeholder={`${langJson['table0011'] + langJson['table0014']}+...`}\r\n                                                                disabled={!!item.disabled}\r\n                                                                name={item.attrcode}\r\n                                                                {...item}\r\n                                                                value={tableModeldata[item.attrcode] ? tableModeldata[item.attrcode].value : null}\r\n                                                                onChange={val => {\r\n                                                                    setModalValue(item.attrcode, val);\r\n                                                                    let changedrows = [];\r\n                                                                    changedrows.push({\r\n                                                                        rowid:\r\n                                                                            modelDatas.rowId ||\r\n                                                                            String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12),\r\n                                                                        newvalue: { value: val },\r\n                                                                        oldvalue: { value: 'value' },\r\n                                                                    });\r\n                                                                    this.afterEvent(item.attrcode, changedrows, val, modelDatas.index, modelDatas.record);\r\n                                                                }}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                    );\r\n                                                case 'radio':\r\n                                                    return (\r\n                                                        <FormItem key={i} inline={true} labelMd={3} md={9} showMast={true} labelName={item.label}>\r\n                                                            <Radio.RadioGroup\r\n                                                                type=\"customer\"\r\n                                                                name={item.attrcode}\r\n                                                                disabled={!!item.disabled}\r\n                                                                selectedValue={\r\n                                                                    tableModeldata[item.attrcode] ? String(tableModeldata[item.attrcode].value) : null\r\n                                                                }\r\n                                                                {...item}\r\n                                                                onChange={val => {\r\n                                                                    setModalValue(item.attrcode, String(val));\r\n                                                                    let changedrows = [];\r\n                                                                    changedrows.push({\r\n                                                                        rowid:\r\n                                                                            modelDatas.rowId ||\r\n                                                                            String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12),\r\n                                                                        newvalue: { value: String(val) },\r\n                                                                        oldvalue: { value: 'value' },\r\n                                                                    });\r\n                                                                    this.afterEvent(\r\n                                                                        item.attrcode,\r\n                                                                        changedrows,\r\n                                                                        String(val),\r\n                                                                        modelDatas.index,\r\n                                                                        modelDatas.record,\r\n                                                                    );\r\n                                                                }}\r\n                                                            >\r\n                                                                {item.options.length &&\r\n                                                                    item.options.map((one, i) => (\r\n                                                                        <Radio value={String(one.value)} key={i}>\r\n                                                                            {' '}\r\n                                                                            {one.display}{' '}\r\n                                                                        </Radio>\r\n                                                                    ))}\r\n                                                            </Radio.RadioGroup>\r\n                                                        </FormItem>\r\n                                                    );\r\n                                                case 'switch':\r\n                                                    return (\r\n                                                        <FormItem key={i} inline={true} labelMd={3} md={9} showMast={true} labelName={item.label}>\r\n                                                            <Switch\r\n                                                                checked={tableModeldata[item.attrcode] ? !!tableModeldata[item.attrcode].value : false}\r\n                                                                disabled={!!item.disabled}\r\n                                                                {...item}\r\n                                                                onChange={val => {\r\n                                                                    setModalValue(item.attrcode, val);\r\n                                                                    let changedrows = [];\r\n                                                                    changedrows.push({\r\n                                                                        rowid:\r\n                                                                            modelDatas.rowId ||\r\n                                                                            String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12),\r\n                                                                        newvalue: { value: val },\r\n                                                                        oldvalue: { value: 'value' },\r\n                                                                    });\r\n                                                                    this.afterEvent(item.attrcode, changedrows, val, modelDatas.index, modelDatas.record);\r\n                                                                }}\r\n                                                            />\r\n                                                        </FormItem>\r\n                                                    );\r\n\r\n                                                case 'rangepicker':\r\n                                                    return (\r\n                                                        <FormItem key={i} inline={true} labelMd={3} md={9} showMast={true} labelName={item.label}>\r\n                                                            <div>rangepicker</div>\r\n                                                        </FormItem>\r\n                                                    );\r\n                                                default:\r\n                                                    return null;\r\n                                            }\r\n                                        }\r\n                                    })\r\n\r\n                                }\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button className=\"btn-2\" onClick={this.handleSubmit}>\r\n                                {langJson['table0021']}\r\n                            </Button>\r\n                            <Button className=\"btn-2 btn-cancel\" onClick={this.close} shape=\"border\">\r\n                                {langJson['table_cancel']}\r\n                            </Button>\r\n                        </Modal.Footer>\r\n\r\n                    </Modal>}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { Refer } from '@platform/base'\r\n\r\nexport default function createRefer(refcode, config = {}) {\r\n    switch (refcode) {\r\n        case 'cont':\r\n            return <Refer refName={'交易类型'} refCode={'cont'} queryGridUrl={'/nccloud/reva/ref/cont.do'} {...config} />;\r\n\r\n        case 'dept':\r\n            return (\r\n                <Refer\r\n                    refName={'部门'}\r\n                    refCode={'dept'}\r\n                    refType={'tree'}\r\n                    queryTreeUrl={'/nccloud/reva/ref/dept.do'}\r\n                    {...config}\r\n                />\r\n            );\r\n\r\n        case 'finance':\r\n            return (\r\n                <Refer\r\n                    refName={'财务组织'}\r\n                    refCode={'finance'}\r\n                    refType={'tree'}\r\n                    queryTreeUrl={'/nccloud/reva/ref/finance.do'}\r\n                    {...config}\r\n                />\r\n            );\r\n\r\n        case 'materialclass':\r\n            return (\r\n                <Refer\r\n                    refName={'物料分类'}\r\n                    refCode={'materialclass'}\r\n                    // refType={'tree'}\r\n                    queryGridUrl={'/nccloud/reva/ref/materialclass.do'}\r\n                    {...config}\r\n                />\r\n            );\r\n\r\n        case 'material':\r\n            return (\r\n                <Refer\r\n                    refName={'物料'}\r\n                    refCode={'material'}\r\n                    refType={'gridTree'}\r\n                    isMultiSelectedEnabled={true}\r\n                    queryGridUrl={'/nccloud/reva/ref/material.do'}\r\n                    queryTreeUrl={'/nccloud/reva/ref/materialclass.do'}\r\n                    {...config}\r\n                />\r\n            );\r\n\r\n        case 'obligation':\r\n            return (\r\n                <Refer\r\n                    refName={'履约义务档案'}\r\n                    refCode={'obligation'}\r\n                    refType={'tree'}\r\n                    queryTreeUrl={'/nccloud/reva/ref/obligation.do'}\r\n                    {...config}\r\n                />\r\n            );\r\n\r\n        default:\r\n            return (\r\n                <Refer\r\n                    refName={'test'}\r\n                    refCode={'test'}\r\n                    // refType={'tree'}\r\n                    queryGridUrl={'/test/test.do'}\r\n                    {...config}\r\n                />\r\n            );\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * 两列布局col取值为6\r\n * 三列布局col取值为4\r\n *\r\n */\r\n// 有label\r\n// const Layout = {\r\n//     3: {\r\n//         label: 1,\r\n//         control: 2,\r\n//     },\r\n//     4: {\r\n//         label: 1,\r\n//         control: 3,\r\n//     },\r\n//     6: {\r\n//         label: 2,\r\n//         control: 4,\r\n//     },\r\n//     12: {\r\n//         label: 1,\r\n//         control: 11,\r\n//     },\r\n// };\r\n\r\n// // 无label\r\n// const Layout4 = {\r\n//     3: {\r\n//         label: 0,\r\n//         control: 3,\r\n//     },\r\n//     4: {\r\n//         label: 0,\r\n//         control: 4,\r\n//     },\r\n//     6: {\r\n//         label: 0,\r\n//         control: 6,\r\n//     },\r\n//     12: {\r\n//         label: 0,\r\n//         control: 12,\r\n//     },\r\n// };\r\n\r\n// const layouts = {\r\n//     Layout,\r\n//     Layout4,\r\n// };\r\n\r\n// const fileType = {\r\n//     IMG: ['jpg', 'jpeg', 'bmp', 'gif'],\r\n//     DOC: [],\r\n//     XLS: [],\r\n\r\n// }\r\n\r\n// // 总配置项\r\n// export default {\r\n//     allTypes: ['input', 'number', 'textarea', 'datepicker', 'rangepicker', 'switch', 'select', 'checkbox', 'radio', 'refer', 'customer', 'label', 'NCTZDatePickerStart', 'NCTZDatePickerEnd', 'checkbox_switch', 'switch_browse'],\r\n//     displayTypes: ['select', 'radio', 'checkbox', 'refer'],\r\n//     string: ['input', 'textarea', 'datepicker', 'select', 'checkbox', 'radio', 'refer', 'label'],\r\n//     boolean: ['switch', 'checkbox_switch', 'switch_browse'],\r\n//     number: ['number'],\r\n//     valueTypesExceptNumber: ['input', 'textarea'],\r\n//     changeTypes: ['datepicker', 'rangepicker', 'switch', 'select', 'checkbox', 'radio', 'refer', 'NCTZDatePickerStart', 'NCTZDatePickerEnd', 'checkbox_switch', 'switch_browse', 'datePickerNoTimeZone'],\r\n//     blurTypes: ['input', 'number', 'textarea'],\r\n//     // 编辑后在onblur中的类型\r\n//     afterBlurTypes: ['input', 'number', 'textarea', 'residtxt', 'datetimepicker', 'timepicker'],\r\n//     valueTypes: ['input', 'number', 'textarea'],\r\n//     noEditType: ['label', 'customer'],\r\n//     getDisplay: ['select', 'radio', 'checkbox'],\r\n//     status: {  // 表格内数据状态\r\n//         origin: '0',\r\n//         edit: '1',\r\n//         add: '2',\r\n//         delete: '3',\r\n//     },\r\n//     timeTypes: ['datepicker', 'NCTZDatePickerStart', 'NCTZDatePickerEnd', 'timepicker', 'datetimepicker', 'rangepicker', 'datePickerNoTimeZone'],\r\n//     layouts, // 表单布局用\r\n//     beforeFocusTypes: ['residtxt', 'input', 'select', 'number', 'textarea', 'password', 'switch_browse', 'refer'],\r\n//     beforeChangeTypes: ['radio'],\r\n//     beforeClickTypes: ['datepicker', 'timepicker', 'datetimepicker', 'NCTZDatePickerStart', 'NCTZDatePickerEnd', 'rangepicker', 'datePickerNoTimeZone', 'checkbox_switch', 'checkbox'],\r\n//     hotKeyModuleIdPrefix: 'hot-key',\r\n//     defaultColor: ['#111111', '#555555', '#111', '#555'],\r\n//     complete: 'areaChangeComplete',\r\n//     isPageModal: true,  // 为true,top的url放在sessionstorage;否则url不变; 默认值是true\r\n//     isRemoveWorkbench: false, // 为true时,去掉工作桌面打开节点;默认值是false\r\n//     hotKeyDatePicker: 'datePicker',\r\n//     //由于enter键与业务组部分enter键搜索逻辑冲突因此添加标识，如果元素有此样式就不执行平台enter键逻辑\r\n//     stopEnterHotKey: 'stopEnterHotKey',\r\n// };","import React from 'react';\r\nimport { Tooltip } from '@platform/base'\r\nimport { isFunction, isWrong, formatDot, isBooleanType, formatAcuracy, isUndefined, convertNum, formatNumber } from '@platform/api'\r\nimport { getSysFieldid, sum } from '@platform/api';\r\nimport './index.less'\r\n\r\nexport function getTotalData(totalColumns, rows, config = {}, totalScale = {}) {\r\n    let _this = this;\r\n    let totalDataObj = {}; //合计行的数据\r\n    let isTotal = []; //缓存模版中需要合计的列\r\n    totalColumns.forEach(eve => {\r\n        const { itemtype } = eve;\r\n        totalDataObj[eve.key] = null; //给合计行数据设置模版上visible===true 的项的attrcode，作为属性\r\n        if (eve.istotal && itemtype === 'number') {\r\n            //收集模版中需要合计的列\r\n            isTotal.push(eve.key);\r\n        }\r\n    });\r\n    const { noTotalRows, noTotalCol = [], showTotal, allowTotalRows } = config; //  业务组传入设置不需要合计的行和列 和是否展示从左列\r\n\r\n    // 将这个不让合计的行的这个提到外面来，减少循环\r\n    let noTotalCode = {};\r\n    if (isFunction(noTotalRows)) {\r\n        if (\r\n            Array.isArray(noTotalRows.call(_this)) &&\r\n            noTotalRows.call(_this).length > 0\r\n        ) {\r\n            noTotalRows.call(_this).forEach(eve => {\r\n                const { code, indexArr } = eve;\r\n                //获取当前前行不需要合计的属性\r\n                noTotalCode[indexArr] = code;\r\n            });\r\n        }\r\n    }\r\n    // 业务组自己注册进来的需要合计的行提出来，解决效率问题\r\n    let allowTotal = [];\r\n    if (isFunction(allowTotalRows)) {\r\n        allowTotal = allowTotalRows.call(_this);\r\n    }\r\n\r\n    rows.forEach((eve, index) => {\r\n        /*业务组自己注册进来的需要合计的行*/\r\n        if (isFunction(allowTotalRows)) {\r\n            if (!allowTotal.includes(index)) {\r\n                return;\r\n            }\r\n        }\r\n        let values = eve.values || eve\r\n        Object.keys(values).forEach(key => {\r\n\r\n            const { value, scale } = values[key] || {};\r\n            if (\r\n                !isWrong(value) &&\r\n                !isBooleanType(value) &&\r\n                !Number.isNaN(Number(value))\r\n            ) {\r\n                if (\r\n                    (Object.keys(noTotalCode).length < 1 ||\r\n                        (Object.keys(noTotalCode).length > 0 &&\r\n                            (!noTotalCode[index] || !noTotalCode[index].includes(key)))) &&\r\n                    key !== 'numberindex' &&\r\n                    !noTotalCol.includes(key)\r\n                ) {\r\n                    const finalScale = Number(!isWrong(scale) && scale != \"-1\" ? scale : (totalScale[key] || 8));\r\n                    // showTotal  意味着要进行外部控制  如果不使用 noTotalCol 控制列 会导致所有列都会计算合计\r\n                    if (showTotal) {\r\n                        //不是通过模版设置展示合计行时\r\n                        totalDataObj[key] = sum(formatDot(totalDataObj[key] || 0, finalScale), formatDot(convertNum(value), finalScale));\r\n                    } else {\r\n                        //通过模版设置展示合计行时\r\n                        if (isTotal.includes(key)) {\r\n                            //判断是否需要合计\r\n                            totalDataObj[key] = sum(formatDot(totalDataObj[key] || 0, finalScale), formatDot(convertNum(value), finalScale));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return [totalDataObj];\r\n}\r\n\r\nexport function getTotalScale(totalColumns, rows) {\r\n    let totalScaleObj = {}; //收集合计每格精度\r\n    totalColumns.forEach(item => {\r\n        //便利合计行所有列\r\n        let scale = 0;\r\n        rows.forEach(eve => {\r\n            let values = eve.values || eve\r\n            //便利表格所有数据\r\n            let valueItem = values[item.key]; //缓存每格数据\r\n            if (\r\n                valueItem &&\r\n                !isWrong(valueItem.value) &&\r\n                !isWrong(valueItem.scale) &&\r\n                valueItem.scale != -1 &&\r\n                Number(valueItem.scale) > scale\r\n            ) {\r\n                //当数据中的精度大于当前缓存的精度， 覆盖当前缓存精度\r\n                scale = Number(valueItem.scale);\r\n            } else if (\r\n                valueItem &&\r\n                !isWrong(valueItem.value) &&\r\n                (isWrong(valueItem.scale) || valueItem.scale == '-1')\r\n            ) {\r\n                //当数据中没有精度并且模版设置了精度，覆盖当前缓存精度\r\n                let itemScale = item.scale ? Number(item.scale) : 0;\r\n                if (itemScale > scale) {\r\n                    scale = itemScale;\r\n                }\r\n            } //模版的精短暂时不判断，有需求在说\r\n        });\r\n        totalScaleObj[item.key] = scale; //存储每格最终精度\r\n    });\r\n    return totalScaleObj;\r\n}\r\n\r\nexport function getFinalTotalData(totalData, totalScale) {\r\n    Object.keys(totalData).forEach(eve => {\r\n        //便利合计行数据的属性\r\n        // if (isNumber(totalData[eve])) {\r\n        if (eve != 'checkbox' && eve != 'numberindex') {\r\n            //判断合计行每格数据类型，如果为数字，进行精度转化\r\n            totalData[eve] = formatAcuracy(totalData[eve], totalScale[eve]); //转换精度重新赋值\r\n        }\r\n    });\r\n    return [totalData];\r\n}\r\n\r\nexport function getTotalColumns(columns, config = {}) {\r\n    let visibleColumns = []\r\n    filterVisible(columns, visibleColumns, config)\r\n\r\n    return visibleColumns\r\n}\r\n\r\nfunction filterVisible(columns, newColumns, config) {\r\n    let numberPd = (config.numberPd || 20);\r\n    columns.forEach(item => {\r\n        const { children, visible, attrcode, width, fixed, istotal, scale, itemtype, islock } = item\r\n        if (!isUndefined(children) && children.length) {\r\n            if (visible) {\r\n                filterVisible(children, newColumns, config)\r\n            }\r\n        } else {\r\n            let finalFixed = (islock && !fixed) ? 'left' : fixed\r\n            if (visible) {\r\n                let colItem = {\r\n                    key: attrcode,\r\n                    dataIndex: attrcode,\r\n                    attrcode,\r\n                    itemtype,\r\n                    width,\r\n                    fixed: finalFixed,\r\n                    istotal,\r\n                    scale,\r\n                };\r\n                if (attrcode === 'opr' && !width) {//如果操作列没有值，则付200px宽度\r\n                    colItem.width = 200;\r\n                }\r\n                //合计行中数字类型，右对齐\r\n                if (attrcode !== 'checkbox' && attrcode !== 'numberindex') {\r\n                    colItem.render = (text, record) => {\r\n                        // let iWidth = 'calc(100% - 46px)';\r\n                        // 三大表与 转单 树表等不一样\r\n                        let iWidth = 'calc(100% - ' + numberPd + 'px)';\r\n                        let styleObj = { textAlign: 'right', width: iWidth };\r\n                        return record[attrcode] ? (\r\n                            <div className=\"total-row-table-cell\" style={styleObj} fieldid={getSysFieldid(attrcode)} >\r\n                                < Tooltip\r\n                                    className=\"tooltip-word-color table-pagination-tip\"\r\n                                    placement=\"top\"\r\n                                    delay={1}\r\n                                    overlay={record[attrcode]}\r\n                                >\r\n                                    <span className=\"ellipsis\">{formatNumber(record[attrcode])}</span>\r\n                                </Tooltip >\r\n                            </div >\r\n                        ) : (<span> &nbsp;</span>)\r\n                    };\r\n                }\r\n                newColumns.push(colItem)\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n//空白列\r\nexport const addBlankCol = (tableDom, columns) => {\r\n    if (tableDom && columns.length) {\r\n        let mulHeaderFlag = false,\r\n            blankrowFlag = false;\r\n        //最后一列是操作列，且不是固定列的flag\r\n        let oprNotFixFlag = false;\r\n        let attrcodeArr = columns.map(item => {\r\n            if (item.children) {\r\n                mulHeaderFlag = true;\r\n            }\r\n            if (item.attrcode == 'opr' && !item.fixed) {\r\n                oprNotFixFlag = true;\r\n            }\r\n            if (item.attrcode == 'blankrow') {\r\n                blankrowFlag = true;\r\n            }\r\n            return item.attrcode;\r\n        });\r\n        if (!mulHeaderFlag && !oprNotFixFlag && !blankrowFlag) {\r\n            let columnsWidth = 0;\r\n            let isopr = false;\r\n            if (attrcodeArr[attrcodeArr.length - 1] !== 'opr') {\r\n                for (let i = 0; i < columns.length - 1; i++) {\r\n                    switch (typeof columns[i].width) {\r\n                        case 'undefined':\r\n                            columnsWidth = columnsWidth + 120;\r\n                            break;\r\n                        case 'number':\r\n                            columnsWidth = columnsWidth + columns[i].width;\r\n                            break;\r\n                        case 'string':\r\n                            let a = columns[i].width;\r\n                            columnsWidth = Number(a.replace(/px/, '')) + columnsWidth;\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                isopr = true;\r\n                for (let j = 0; j < columns.length; j++) {\r\n                    if (j !== columns.length - 2) {\r\n                        switch (typeof columns[j].width) {\r\n                            case 'undefined':\r\n                                columnsWidth = columnsWidth + 120;\r\n                                break;\r\n                            case 'number':\r\n                                columnsWidth = columnsWidth + columns[j].width;\r\n                                break;\r\n                            case 'string':\r\n                                let w = columns[j].width;\r\n                                columnsWidth = Number(w.replace(/px/, '')) + columnsWidth;\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            let lastColWidth = tableDom.getBoundingClientRect().width - columnsWidth;\r\n            if (lastColWidth > 300) {\r\n                blankrowFlag = true;\r\n                let obj = {\r\n                    title: '',\r\n                    key: 'blankrow',\r\n                    dataIndex: 'blankrow',\r\n                    attrcode: 'blankrow',\r\n                    className: 'blankrow',\r\n                    visible: true,\r\n                    itemtype: 'customer',\r\n                    width: 20,\r\n                    render: () => <div />,\r\n                };\r\n                if (isopr) {\r\n                    columns.splice(columns.length - 1, 0, obj);\r\n                } else {\r\n                    columns.push(obj);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return columns\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { getMultiLang, getSysFieldid, myBrowser } from '@platform/api';\r\nimport { Table } from '@platform/base';\r\nimport { getTotalData, getTotalScale, getFinalTotalData, getTotalColumns, addBlankCol } from './util'\r\nimport './index.less';\r\nimport { isFunction } from \"../../utils\";\r\n\r\nexport default function total(HighTable) {\r\n    return class ModalTable extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { json: {} }\r\n            this.browser = myBrowser()\r\n        }\r\n        UNSAFE_componentWillMount() {\r\n            let callback = json => {\r\n                this.setState({ json });\r\n            };\r\n            getMultiLang({ moduleId: 'page_table', callback });\r\n        }\r\n        componentDidMount() {\r\n            const { isTotal } = this.props\r\n            isTotal && this.addScrollEvent();\r\n            isTotal && this.hidebodyScrollbar();\r\n            window.addEventListener('resize', this.hidebodyScrollbar)\r\n        }\r\n        componentDidUpdate() {\r\n            const { isTotal } = this.props\r\n            isTotal && this.addScrollEvent();\r\n            isTotal && this.hidebodyScrollbar();\r\n\r\n        }\r\n        componentWillUnmount() {\r\n            const { isTotal } = this.props\r\n            isTotal && this.removeScrollEvent();\r\n        }\r\n        // 添加滚动事件\r\n        addScrollEvent() {\r\n            //每次重新绑定\r\n            this.removeScrollEvent();\r\n            let totalArea = this.total && this.total.querySelector('.u-table-body');\r\n            let totalInnerArea = this.total && this.total.querySelector('.u-table-body .scroll-container');\r\n            totalArea && totalArea.addEventListener('scroll', this.addTotalAreaScrollEvent);\r\n            totalInnerArea && totalInnerArea.addEventListener('scroll', this.addTotalInnerAreaScrollEvent);\r\n            // 目的是解决 火狐浏览器下 滚动条事件失效问题 NCCLOUD-163960\r\n            if (myBrowser() == 'Firefox') {\r\n                requestAnimationFrame(function () {\r\n                    totalArea.style.overflowX = 'auto';\r\n                    totalArea.style.marginBottom = '0px';\r\n                });\r\n                totalArea.style.marginBottom = '17px';\r\n                totalArea.style.overflowX = 'hidden';\r\n            }\r\n        }\r\n\r\n        addTotalAreaScrollEvent = () => {\r\n            let totalArea = this.total && this.total.querySelector('.u-table-body');\r\n            let bodyArea = this.table && this.table.querySelector('.u-table-body .scroll-container');\r\n            let headerArea = this.table && this.table.querySelector('.u-table-content .u-table-scroll .u-table-header');\r\n            //合计行滚动条事件\r\n            if (totalArea) {\r\n                if (bodyArea) bodyArea.scrollLeft = totalArea.scrollLeft;\r\n                if (headerArea) headerArea.scrollLeft = totalArea.scrollLeft;\r\n            }\r\n        }\r\n        addTotalInnerAreaScrollEvent = () => {\r\n            let totalInnerArea = this.total && this.total.querySelector('.u-table-body .scroll-container');\r\n            let bodyArea = this.table && this.table.querySelector('.u-table-body .scroll-container');\r\n            let headerArea = this.table && this.table.querySelector('.u-table-content .u-table-scroll .u-table-header');\r\n            //合计行滚动条事件\r\n            if (totalInnerArea) {\r\n                if (bodyArea) bodyArea.scrollLeft = totalInnerArea.scrollLeft;\r\n                if (headerArea) headerArea.scrollLeft = totalInnerArea.scrollLeft;\r\n            }\r\n        }\r\n        // 去除滚动事件\r\n        removeScrollEvent() {\r\n            let totalArea = this.total && this.total.querySelector('.u-table-body');\r\n            let totalInnerArea = this.total && this.total.querySelector('.u-table-body .scroll-container');\r\n            totalArea && totalArea.removeEventListener('scroll', this.addTotalAreaScrollEvent);\r\n            totalInnerArea && totalInnerArea.removeEventListener('scroll', this.addTotalInnerAreaScrollEvent);\r\n        }\r\n        onDropBorder = () => {\r\n            let th = this.table.querySelectorAll('.nc-table:not(.total-row) >div.u-table-content >div.u-table-scroll >div:nth-child(1) .u-table-body table colgroup col');\r\n            let totalBody = this.total && this.total.querySelectorAll('.u-table-scroll .u-table-body colgroup col');\r\n            for (let i = 0, len = th.length; i < len; i++) {\r\n                let newWidth = th[i].style.width;\r\n                totalBody[i].style.width = newWidth;\r\n                if (typeof newWidth === 'string') {\r\n                    newWidth = Number(newWidth.match(/\\d+/g)[0]);\r\n                }\r\n            }\r\n            let footerBody = this.total && this.total.querySelector('.u-table-body')\r\n            footerBody.style.overflowX = 'auto';\r\n        };\r\n\r\n        onDraggingBorder = () => {\r\n            let th = this.table.querySelectorAll('.nc-table:not(.total-row) >div.u-table-content >div.u-table-scroll >div:nth-child(1) .u-table-body table colgroup col');\r\n            let totalBody = this.total && this.total.querySelectorAll('.u-table-scroll .u-table-body colgroup col');\r\n            for (let i = 0, len = th.length; i < len; i++) {\r\n                let newWidth = th[i].style.width;\r\n                totalBody[i].style.width = newWidth;\r\n                if (typeof newWidth === 'string') {\r\n                    newWidth = Number(newWidth.match(/\\d+/g)[0]);\r\n                }\r\n            }\r\n            let footerBody = this.total && this.total.querySelector('.u-table-body .scroll-container')\r\n            footerBody.style.overflowX = 'auto';\r\n            this.hidebodyScrollbar();\r\n            isFunction(this.props.onDraggingBorder) && (this.props.onDraggingBorder())\r\n        };\r\n\r\n        haveHorizontalScrollBar = () => {\r\n            let outbody = this.total && this.total.querySelector('.u-table-body .scroll-container');\r\n            if (outbody) {\r\n                let innerbody = outbody.querySelector('table');\r\n                return innerbody.offsetWidth > outbody.offsetWidth\r\n            }\r\n        }\r\n        //当有合计行时并且出现横向滚动条的时候，将合计行上移，盖住body部分的横向滚动条\r\n        hidebodyScrollbar = () => {\r\n            if (!this.total) { return }\r\n            let tableFooter = this.total\r\n            if (this.haveHorizontalScrollBar()) {\r\n                if (tableFooter) {\r\n                    if (this.browser === 'Firefox' || this.browser === 'IE' || this.browser === 'Edge') {\r\n                        tableFooter.style.marginTop = '-17px';\r\n                    } else {\r\n                        tableFooter.style.marginTop = '-10px';\r\n                    }\r\n                }\r\n                //用于合计行文字上下居中 NCCLOUD-191974\r\n                let totalTd = this.total.querySelectorAll('td');\r\n                if (totalTd && totalTd.length) {\r\n                    for (let i = 0, len = totalTd.length; i < len; i++) {\r\n                        if (this.browser === 'Firefox' || this.browser === 'IE' || this.browser === 'Edge') {\r\n                            totalTd[i].style.paddingTop = '5px';\r\n                        } else {\r\n                            totalTd[i].style.paddingTop = '10px';\r\n                        }\r\n                    }\r\n                }\r\n            } else if (!this.haveHorizontalScrollBar()) {\r\n                if (tableFooter) {\r\n                    tableFooter.style.marginTop = '0px';\r\n                    let footerBody = tableFooter.querySelector('.u-table-body .scroll-container')\r\n                    footerBody.style.overflowX = 'visible';\r\n                }\r\n                let totalTd = this.total.querySelectorAll('td');\r\n                if (totalTd && totalTd.length) {\r\n                    for (let i = 0, len = totalTd.length; i < len; i++) {\r\n                        totalTd[i].style.paddingTop = '0px';\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // formNumber = totalData => {\r\n        //     Object.keys(totalData[0]).forEach(eve => {\r\n        //         //便利合计行数据的属性\r\n        //         // if (isNumber(totalData[eve])) {\r\n        //         if (eve != 'checkbox' && eve != 'numberindex' && totalData[0][eve]) {\r\n        //             //判断合计行每格数据类型，如果为数字，进行精度转化\r\n        //             totalData[0][eve] = formatNumber(totalData[0][eve]); //转换精度重新赋值\r\n        //         }\r\n        //     });\r\n        //     return totalData;\r\n        // }\r\n\r\n        handleFooter = () => {\r\n            let { columns, data, totalConfig = {}, checkColConfig = {}, inserttableTotalConfig, numberPd } = this.props\r\n            let finalColumns = []\r\n            let totalData = {}\r\n            if (inserttableTotalConfig) {\r\n                finalColumns = inserttableTotalConfig.totalColumns\r\n                totalData = inserttableTotalConfig.totalData\r\n            } else {\r\n                const { json } = this.state\r\n                //获得合计行的 items\r\n                finalColumns = getTotalColumns(columns, { numberPd: totalConfig.numberPd });\r\n                // 获得 每一列的精度\r\n                let totalScale = getTotalScale(finalColumns, data)\r\n                //合计行的data\r\n                totalData = getTotalData(finalColumns, data, totalConfig, totalScale || {});\r\n                if (totalScale !== null) {\r\n                    // 获取合计行进行精度处理后的数据\r\n                    totalData = getFinalTotalData(totalData[0], totalScale);\r\n                }\r\n\r\n                //totalData = this.formNumber(totalData);\r\n\r\n                //合计文字\r\n                checkColConfig.showCheck ? totalData[0].checkbox = json['table002'] : totalData[0].numberindex = json['table002']\r\n            }\r\n\r\n            return (\r\n                <div fieldid={getSysFieldid('total-row')}>\r\n                    <Table\r\n                        minColumnWidth={10}\r\n                        height={35}\r\n                        ref={dom => {\r\n                            this.total = ReactDOM.findDOMNode(dom);\r\n                        }}\r\n                        className={'total-row'}\r\n                        data={totalData}\r\n                        columns={[...finalColumns]}\r\n                        rowKey={'total-row'}\r\n                        showHeader={false}\r\n                        headerScroll={false}\r\n                        scroll={{}}\r\n                        bodyStyle={{ minHeight: 35, overflowX: 'auto' }}\r\n                    />\r\n                </div>\r\n            );\r\n        };\r\n\r\n        render() {\r\n            const { isTotal } = this.props\r\n            if (isTotal) {\r\n                return (<HighTable\r\n                    {...this.props}\r\n                    footer={this.handleFooter}\r\n                    setCellValue={params => {\r\n                        this.forceUpdate()\r\n                        isFunction(this.props.setCellValue) && (this.props.setCellValue(params))\r\n\r\n                    }}\r\n                    ref={dom => {\r\n                        this.table = ReactDOM.findDOMNode(dom);\r\n                    }}\r\n                    onDraggingBorder={() => { this.onDraggingBorder() }}\r\n                />)\r\n            } else {\r\n                return <HighTable {...this.props} />\r\n            }\r\n        }\r\n\r\n    }\r\n}","/*\r\n * @Descripttion: 过滤\r\n * @version:\r\n * @Author: bbq\r\n * @Date: 2020-08-03 10:17:12\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-01-15 18:05:08\r\n */\r\n\r\nimport React, { Component, useEffect, useCallback, useState, useRef, useMemo, Fragment } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\n\r\nimport { getRandom, isUndefined, isFunction, isWrong, isArray } from '../../utils/index';\r\nimport { formatDatetime, changeTime, isNullOrVoid, formatNumber, formatAcuracy, ncRounding, getRandomPassword, getLangCode } from '@platform/api';\r\nimport CONFIG from '../../config';\r\n\r\nconst { ROW_STATUS } = CONFIG;\r\n\r\nconsole.log(CONFIG);\r\n\r\nimport {\r\n    Button,\r\n    Modal,\r\n    Select,\r\n    Input,\r\n    ButtonGroup,\r\n} from '@platform/base';\r\n\r\nimport { getSysFieldid } from '@platform/api';\r\n\r\nrequire('./panel.less');\r\n\r\nconst { Header, Title, Body, Footer } = Modal;\r\nconst { Option } = Select;\r\n\r\n/**\r\n * 数据处理\r\n * @param {*} IType \r\n * @param {*} display \r\n * @param {*} value \r\n * @param {*} scale \r\n * @param {*} attrcode \r\n * @param {*} languageMeta \r\n * @param {*} values \r\n * @param {*} datatype \r\n * @param {*} options \r\n * @param {*} multiple \r\n * @param {*} langJson \r\n */\r\nconst handleBrowse = function (IType, display, value, scale, attrcode, languageMeta, values, datatype, options, multiple, langJson) {\r\n    // TODO 数据格式的转换\r\n    // 特殊处理下逻辑型  枚举类型\r\n    if (\r\n        datatype === \"32\" &&\r\n        [\"select\", \"checkbox\", \"radio\"].includes(IType) &&\r\n        isArray(options) &&\r\n        !display &&\r\n        value !== null &&\r\n        value !== undefined\r\n    ) {\r\n        if (IType === \"checkbox\" || multiple) {\r\n            let displayList = options\r\n                .filter(item => value.includes(item.value))\r\n                .map(option => {\r\n                    return option.display;\r\n                });\r\n            return displayList.join(\",\");\r\n        } else {\r\n            let { display } =\r\n                options.filter(item => item.value == value)[0] || {};\r\n            return display;\r\n        }\r\n    }\r\n\r\n    switch (true) {\r\n        case CONFIG.displayTypes.includes(IType):\r\n            return display || value;\r\n        case CONFIG.boolean.includes(IType):\r\n            return value == \"Y\" || value == true\r\n                ? langJson[\"table_yes\"]\r\n                : langJson[\"table_no\"];\r\n        case CONFIG.timeTypes.includes(IType):\r\n            if (IType === \"datetimepicker\") {\r\n                return formatDatetime(changeTime(value, \"YYYY-MM-DD HH:mm:ss\"), 'datetime');\r\n            } else if (IType === \"timepicker\") {\r\n                return formatDatetime(value, 'time');\r\n            } else if (IType === \"datePickerNoTimeZone\") {\r\n                return formatDatetime(value, 'date');\r\n            }\r\n            return formatDatetime(changeTime(value), 'date');\r\n        case IType === \"label\":\r\n            return isNullOrVoid(display) ? value : display || value;\r\n        case IType === \"number\":\r\n            // 表格浏览态加了四舍五入\r\n            return formatNumber(formatAcuracy(value, scale), true);\r\n        case IType === \"password\":\r\n            // 密码框浏览态显示***\r\n            return value && getRandomPassword();\r\n        case IType === \"residtxt\": // 对多语的处理\r\n            let LangCode = getLangCode();\r\n            let loginLang = languageMeta.filter(i => i.languageCode == LangCode);\r\n            if (loginLang.length > 0) {\r\n                loginLang[0].index === \"1\" ? (loginLang[0].index = \"\") : \"\";\r\n                if (\r\n                    values[attrcode + loginLang[0].index] &&\r\n                    values[attrcode + loginLang[0].index].value\r\n                ) {\r\n                    value = values[attrcode + loginLang[0].index].value;\r\n                    return value;\r\n                }\r\n                return value;\r\n            }\r\n            return value;\r\n        default:\r\n            return isNullOrVoid(display) ? value : display || value;\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 获取过滤后的数据\r\n * @param {type} \r\n * @return {type} \r\n */\r\nconst getFilterData = ({ allRows, filterFactor, customColData, rowKey, langJson }) => {\r\n    return filterFactor.reduce(\r\n        (currentFactor, factor) => {\r\n            let {\r\n                // 以下是模版字段和筛选条件\r\n                attrcode,\r\n                itemtype,\r\n                factorValue,\r\n                scale: metaScale,\r\n                languageMeta = [],\r\n                itemKey, // 生成的随机数，创建赋值\r\n                datatype,\r\n                options,\r\n                multiple,\r\n            } = factor;\r\n            if (factorValue) {\r\n                const { filteredRow, filteredRowKeyValues, filteredColumnKey } = currentFactor;\r\n                allRows.forEach((row, index) => {\r\n                    const { values, status } = row;\r\n                    let rowKeyValue = row[rowKey];\r\n                    // console.log(rowKey);\r\n                    if (status !== ROW_STATUS.delete) {\r\n                        let tableItemValue = '';\r\n                        // 自定义列穿进来的数据判断\r\n                        if (customColData && customColData[attrcode]) {\r\n                            tableItemValue = customColData[attrcode][rowKeyValue];\r\n                        } else {\r\n                            // 不是自定义列的情况\r\n                            if (values[attrcode]) {\r\n                                // 精度判断数据和模版的情况\r\n                                // tableItemValue = String(values[attrcode].display || values[attrcode].value);\r\n                                tableItemValue = handleBrowse.call(\r\n                                    this,\r\n                                    itemtype,\r\n                                    values[attrcode].display,\r\n                                    values[attrcode].value,\r\n                                    metaScale,\r\n                                    attrcode,\r\n                                    languageMeta,\r\n                                    values,\r\n                                    datatype,\r\n                                    options,\r\n                                    multiple,\r\n                                    langJson,\r\n                                );\r\n                                // console.log(tableItemValue, 'sssss', itemtype,\r\n                                //     values[attrcode].display,\r\n                                //     values[attrcode].value,\r\n                                //     metaScale,\r\n                                //     attrcode,\r\n                                //     languageMeta,\r\n                                //     values,\r\n                                //     datatype,\r\n                                //     options,\r\n                                //     multiple, langJson);\r\n                            }\r\n                        }\r\n                        // 为了不区分大小写统一将字符串转为小写\r\n                        isWrong(tableItemValue) && (tableItemValue = '');\r\n                        const LowerTableItemValue = String(tableItemValue).toLowerCase();\r\n                        const LowerFactorValue = String(factorValue).toLowerCase();\r\n                        if (\r\n                            tableItemValue &&\r\n                            LowerTableItemValue.includes(LowerFactorValue)\r\n                        ) {\r\n                            !filteredColumnKey.includes(itemKey) &&\r\n                                filteredColumnKey.push(itemKey);\r\n                            !filteredRowKeyValues.includes(rowKeyValue) && filteredRow.push(row);\r\n                            !filteredRowKeyValues.includes(rowKeyValue) && filteredRowKeyValues.push(rowKeyValue);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            return currentFactor;\r\n        },\r\n        { filteredRow: [], filteredRowKeyValues: [], filteredColumnKey: [] },\r\n    );\r\n}\r\n\r\n/**\r\n * 获取列模版的一维结构\r\n * @param columns 模版结构\r\n * @param finalFactorList 结果容器\r\n */\r\nconst getFactorList = ({ columns, finalFactorList }) => {\r\n    return columns.reduce((currentValue, column) => {\r\n        // 获取表格列配置\r\n        const { children, visible } = column;\r\n        if (!isUndefined(children)) {\r\n            // 判断和并列的情况\r\n            getFactorList({ columns: children, finalFactorList: currentValue });\r\n            return currentValue;\r\n        } else {\r\n            visible && currentValue.push(column);\r\n            return currentValue;\r\n        }\r\n    }, finalFactorList);\r\n};\r\n\r\n/**\r\n * 筛选条件录入项组件\r\n * @param {*} filterFactors 整体的筛选条件\r\n * @param {*} itemKey 筛选条件录入项组件标识\r\n * @param {*} filterItemList 筛选条件录入项组件配置参数列表\r\n * @param {*} setFilterItemList 筛选条件录入项组件标识列表更新方法\r\n * @param {*} afterFilterItemList 有效的筛选项列表\r\n * @param {*} factorList 所有项的筛选条件数据集合\r\n * @param {*} columns 可以被选择的模版项集合\r\n * @param {*} currentTable 表格数据实例\r\n * @param {*} langJson 多语\r\n */\r\nconst FilterItem = ({\r\n    filterFactors: { current },\r\n    itemKey,\r\n    filterItemList,\r\n    setFilterItemList,\r\n    afterFilterItemList,\r\n    factorList,\r\n    columns,\r\n    langJson,\r\n}) => {\r\n    /**\r\n     * 当前筛选项的信息\r\n     */\r\n    const { selectedAttr, selectFcous, inputFocus } = filterItemList[itemKey];\r\n    /**\r\n     * 当前项的筛选条件\r\n     */\r\n    let echoInputValue = '';\r\n    const currentFactor = current[itemKey];\r\n    if (currentFactor) {\r\n        const { factorValue } = currentFactor;\r\n        factorValue && (echoInputValue = factorValue);\r\n    }\r\n    const [inputValue, setInputValue] = useState(echoInputValue);\r\n    const [selectedValue, setSelectedValue] = useState(selectedAttr);\r\n\r\n    /**\r\n     * select列字段选择回调\r\n     * @param {*} attr 列的字段\r\n     */\r\n    const handleSelectChange = attr => {\r\n        const { current: afterFilterItemListCurrent } = afterFilterItemList;\r\n        /**\r\n         * 更新select的选项\r\n         */\r\n        filterItemList[itemKey].selectedAttr = attr;\r\n        setSelectedValue(attr);\r\n        /**\r\n         * 设置列字段标题的筛选状态\r\n         */\r\n        const filteringList = Object.values(filterItemList).map(\r\n            filterItem => filterItem.selectedAttr,\r\n        );\r\n        const filteredList = Object.values(afterFilterItemListCurrent).map(\r\n            afterFilterItem => afterFilterItem.selectedAttr,\r\n        );\r\n        columns.forEach(column => {\r\n            const { attrcode } = column;\r\n            if (filteringList.includes(attrcode)) {\r\n                column.filterStatus = 'filtering';\r\n            } else {\r\n                column.filterStatus = '';\r\n            }\r\n            if (filteredList.includes(attrcode)) {\r\n                column.filterStatus = 'filtered';\r\n            }\r\n        });\r\n        /**\r\n         * 更改表格, 更新筛选标识\r\n         */\r\n        // tableScope.setState({ table: currentTable });\r\n        /**\r\n         * 当选择‘请选择’的时候,将当前筛选条件清空,pselect时请选择的意思\r\n         */\r\n        if (attr === 'pselect') {\r\n            Reflect.deleteProperty(current, itemKey);\r\n            return;\r\n        }\r\n        /**\r\n         * 1.如果当前筛选项已经选择了筛选条件, 此时就将当前筛选条件和之前的筛选条件合并\r\n         */\r\n        if (currentFactor) {\r\n            current[itemKey] = { ...currentFactor, ...factorList[attr] };\r\n        } else {\r\n            /**\r\n             * 1.如果当前筛选项没有筛选条件, 此时就将当前筛选条件当作筛选条件\r\n             */\r\n            current[itemKey] = {\r\n                ...factorList[attr],\r\n                factorValue: inputValue,\r\n                itemKey,\r\n            };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * input输入条件内容回调\r\n     * @param {*} value 输入的内容\r\n     */\r\n    const handleInputChange = value => {\r\n        /**\r\n         * 1.如果当前筛选项已经选择了筛选条件, 才给条件添加筛选内容\r\n         */\r\n        if (currentFactor) {\r\n            current[itemKey] = { ...currentFactor, factorValue: value, itemKey };\r\n            /**\r\n             * 更新input的值\r\n             * 更新筛选项的渲染配置的值\r\n             * pselect时请选择的意思\r\n             */\r\n            setInputValue(value);\r\n        } else if (selectedValue !== 'pselect') {\r\n            /**\r\n             * 1.当前选择的条件不是‘请选择’时, 添加当前项的筛选条件\r\n             */\r\n            current[itemKey] = {\r\n                ...factorList[selectedValue],\r\n                factorValue: value,\r\n                itemKey,\r\n            };\r\n            /**\r\n             * 更新input的值\r\n             * 更新筛选项的渲染配置的值\r\n             */\r\n            setInputValue(value);\r\n        }\r\n    };\r\n    /**\r\n     * 删除按钮回调\r\n     */\r\n    const handleDel = () => {\r\n        /**\r\n         * 删除当前项\r\n         */\r\n        Reflect.deleteProperty(filterItemList, itemKey);\r\n        /**\r\n         * 删除当前项的筛选条件\r\n         */\r\n        Reflect.deleteProperty(current, itemKey);\r\n        /**\r\n         * 更新筛选标识\r\n         */\r\n        const { current: afterFilterItemListCurrent } = afterFilterItemList;\r\n        const filteringList = Object.values(filterItemList).map(\r\n            filterItem => filterItem.selectedAttr,\r\n        );\r\n        const filteredList = Object.values(afterFilterItemListCurrent).map(\r\n            afterFilterItem => afterFilterItem.selectedAttr,\r\n        );\r\n        columns.forEach(column => {\r\n            const { attrcode } = column;\r\n            if (!filteringList.includes(attrcode)) {\r\n                column.filterStatus = '';\r\n            }\r\n            if (filteredList.includes(attrcode)) {\r\n                column.filterStatus = 'filtered';\r\n            }\r\n        });\r\n        /**\r\n         * 更新筛选标识, 和筛选项\r\n         */\r\n        // tableScope.setState({ table: currentTable });\r\n        setFilterItemList({ ...filterItemList });\r\n    };\r\n\r\n    return (\r\n        <div className=\"filter-item-container\">\r\n            <div className=\"select-container\">\r\n                <Select\r\n                    showClear={false}\r\n                    autoFocus={selectFcous}\r\n                    value={selectedValue}\r\n                    onChange={handleSelectChange}\r\n                >\r\n                    {/* 请选择 */}\r\n                    {[{ attrcode: 'pselect', label: langJson['table0026'] }, ...columns].map(\r\n                        column => {\r\n                            const { attrcode, label, title } = column;\r\n\r\n                            let option = title || label;\r\n\r\n                            if (isFunction(option)) {\r\n                                console.warn('the column label is Function , maybe error')\r\n                                option = option({});\r\n                            }\r\n                            return <Option key={attrcode} value={attrcode}>{option}</Option>;\r\n                        },\r\n                    )}\r\n                </Select>\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <Input\r\n                    value={inputValue}\r\n                    disabled={selectedValue === 'pselect'}\r\n                    onChange={handleInputChange}\r\n                    // maxLength={20}\r\n                    autoFocus={inputFocus}\r\n                />\r\n            </div>\r\n            <i className=\"iconfont nc-theme-icon-font-c icon-shanchu\" onClick={handleDel} />\r\n        </div>\r\n    );\r\n};\r\n\r\n/**\r\n * 筛选面板组件\r\n * @param {*} tableColumns  表格模版信息\r\n * @param {*} tableScope 表格实例\r\n * @param {*} tableName 表格名称\r\n * @param {*} langJson 多语\r\n * @param {*} handleResetCallBack 重置后回调\r\n * @param {*} handleFilterCallBack 筛选后回调\r\n * \r\n */\r\nconst FilterPanel = ({\r\n    tableColumns,\r\n    tableScope,\r\n    filterData,\r\n    customColData,\r\n    rowKey,\r\n    // 当前选择的列\r\n    selectedAttr,\r\n    // 当前列的状态 \r\n    filterStatus,\r\n    // 是否重置后渲染\r\n    isReset,\r\n    // 重置后回调\r\n    handleResetCallBack,\r\n    // 筛选后回调\r\n    handleFilterCallBack,\r\n    tableName,\r\n    langJson,\r\n    open = false,\r\n    onHide,\r\n}) => {\r\n    /**\r\n     * FilterPanel的真实dom\r\n     */\r\n    let FilterPanelRef = null;\r\n    /**\r\n     * 保存整体的筛选条件\r\n     */\r\n    const filterFactors = useRef({});\r\n    /**\r\n     * 筛选后回显筛选项配置列表\r\n     */\r\n    const afterFilterItemList = useRef({});\r\n    /**\r\n     * 筛选后回显筛选项的筛选条件列表\r\n     */\r\n    const afterFilterFactors = useRef({});\r\n\r\n    /**\r\n     * 筛选条件录入项组件配置参数列表, 通过这个列表渲染录入项组件\r\n     */\r\n    const [filterItemList, setFilterItemList] = useState({});\r\n    /**\r\n     * 列筛选状态\r\n     */\r\n    // const [columnStatus, setColumnStatus] = useState({});\r\n    /**\r\n     * 当前筛选列\r\n     */\r\n    const [current, setCurrent] = useState({ selectedAttr, filterStatus });\r\n    /**\r\n     * 模态框的状态, 默认隐藏\r\n     */\r\n    // const [panelStatus, setPanelStatus] = useState(open);\r\n    // 改为始终受控\r\n\r\n    /**\r\n     * 模态框的提示\r\n     */\r\n    const [filterTips, setFilterTips] = useState('');\r\n\r\n    /**\r\n     * 将模版处理成一维的\r\n     */\r\n    const columns = useMemo(\r\n        () => getFactorList({ columns: tableColumns, finalFactorList: [] }),\r\n        [tableColumns],\r\n    );\r\n    /**\r\n     * 将模版数据处理,整理为每种类型的的筛选条件\r\n     */\r\n    const factorList = useMemo(\r\n        () => columns.reduce((currentValue, column) => {\r\n            const { attrcode, itemtype, languageMeta, scale, datatype, options, multiple } = column;\r\n            currentValue[attrcode] = { attrcode, itemtype, languageMeta, scale, datatype, options, multiple };\r\n            return currentValue;\r\n        }, {}),\r\n        [columns],\r\n    );\r\n\r\n    /**\r\n     * 每次弹开重新渲染\r\n     * 关闭弹窗回调\r\n     */\r\n    const handleHide = () => {\r\n        // 设置选择项\r\n        filterFactors.current = {};\r\n\r\n        // 清除不符合的过滤项\r\n        setFilterItemList({}); // 不清空 减少更新\r\n        // 清空提示信息\r\n        filterTips.length && setFilterTips('');\r\n\r\n        // 这里更新状态的顺序会导致  弹窗可能不能正确销毁\r\n        setTimeout(() => {\r\n            // 关闭弹窗\r\n            onHide && onHide({ filterItemList, afterFilterItemList, arrColumns: columns });\r\n        }, 20);\r\n    };\r\n\r\n    /**\r\n     * 以前是可以在外部直接调用的  现在不允许 外部的条件要传入尽量才行 然后执行默认筛选\r\n     * 筛选按钮回调\r\n     * @filterFactor 筛选条件 用于在卡片返回列表时重新筛选使用\r\n     * @filterResultItem 是筛选结果项\r\n     */\r\n    const handleFilter = (filterFactor, filterResultItem) => {\r\n        // 如果传入筛选条件,那就使用传入的\r\n        filterFactor && (filterFactors.current = filterFactor);\r\n        filterFactor && (afterFilterFactors.current = filterFactor);\r\n        filterResultItem && (afterFilterItemList.current = filterResultItem);\r\n        const { current: filterFactorsCurrent } = filterFactors;\r\n        const { current: afterFilterItemListCurrent } = afterFilterItemList;\r\n        const { current: afterFilterFactorsCurrent } = afterFilterFactors;\r\n\r\n        // 筛选并更新表格显示数据\r\n        const { filteredRow, filteredRowKeyValues, filteredColumnKey } = getFilterData(\r\n            {\r\n                // 筛选原数据, 去除筛选api可能添加的filterindex\r\n                allRows: filterData.map(row => {\r\n                    if (row.filterIndex) {\r\n                        delete row.filterIndex;\r\n                    }\r\n                    return row;\r\n                }),\r\n                // 筛选条件\r\n                filterFactor: Object.values(filterFactorsCurrent),\r\n                // 自定义列传入数据\r\n                customColData,\r\n                rowKey,\r\n                langJson,\r\n            });\r\n\r\n        // 判断筛选结果\r\n        console.log(filteredRow, filteredRowKeyValues, filteredColumnKey);\r\n        if (filteredRow.length) {\r\n            // 清空提示\r\n            setFilterTips('');\r\n\r\n            // 存储有效的筛选项和筛选条件列表\r\n            const {\r\n                newAfterFilterItemListCurrent,\r\n                newAfterFilterFactorsCurrent,\r\n            } = filteredColumnKey.reduce(\r\n                (currentValue, attr) => {\r\n                    const {\r\n                        newAfterFilterItemListCurrent,\r\n                        newAfterFilterFactorsCurrent,\r\n                    } = currentValue;\r\n                    if (afterFilterItemListCurrent[attr]) {\r\n                        newAfterFilterItemListCurrent[attr] = afterFilterItemListCurrent[attr];\r\n                        newAfterFilterFactorsCurrent[attr] = afterFilterFactorsCurrent[attr];\r\n                    } else {\r\n                        newAfterFilterItemListCurrent[attr] = filterItemList[attr];\r\n                        newAfterFilterFactorsCurrent[attr] = filterFactorsCurrent[attr];\r\n                    }\r\n                    return currentValue;\r\n                },\r\n                { newAfterFilterFactorsCurrent: {}, newAfterFilterItemListCurrent: {} },\r\n            );\r\n\r\n            // 缓存筛选条件\r\n            afterFilterItemList.current = newAfterFilterItemListCurrent;\r\n            afterFilterFactors.current = newAfterFilterFactorsCurrent;\r\n\r\n            // 修改列上面的状态\r\n            const filteringList = Object.values(filterItemList).map(\r\n                filterItem => filterItem.selectedAttr,\r\n            );\r\n            const filteredList = Object.values(newAfterFilterItemListCurrent).map(\r\n                afterFilterItem => afterFilterItem.selectedAttr,\r\n            );\r\n            columns.forEach(column => {\r\n                const { attrcode } = column;\r\n                if (filteredList.includes(attrcode)) {\r\n                    column.filterStatus = 'filtered';\r\n                } else if (!filteringList.includes(attrcode)) {\r\n                    column.filterStatus = '';\r\n                }\r\n            });\r\n\r\n            // 设置列状态\r\n            // 设置行状态\r\n            // 处理已选等逻辑\r\n            handleFilterCallBack && handleFilterCallBack({\r\n                filteredRow,\r\n                filterItemList,\r\n                filteredRowKeyValues,\r\n                afterFilterItemList: newAfterFilterItemListCurrent,\r\n                afterFilterFactors: newAfterFilterFactorsCurrent,\r\n                arrColumns: columns,\r\n            });\r\n\r\n            // 关闭弹窗\r\n            handleHide();\r\n        } else {\r\n            // '没有找到，换个词试一试'\r\n            setFilterTips(langJson['table0027']);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * enter执行筛选的快捷键\r\n     */\r\n    const enterCallBack = e => {\r\n        if (e && e.keyCode == 13) {\r\n            // enter 键\r\n            handleFilter();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 模态框打开结束时回调\r\n     */\r\n    const handleEntered = () => {\r\n        FilterPanelRef.childNodes[1]\r\n            .querySelector('.modal-content-parent,.modal-content-resizeWrap-parent')\r\n            .addEventListener('keydown', enterCallBack);\r\n        setFilterItemList({ ...filterItemList });\r\n    };\r\n\r\n    /**\r\n     * 模态框关闭结束时回调\r\n     */\r\n    const handleExited = () => {\r\n        FilterPanelRef.childNodes[1]\r\n            .querySelector('.modal-content-parent,.modal-content-resizeWrap-parent')\r\n            .removeEventListener('keydown', enterCallBack);\r\n    };\r\n\r\n    /**\r\n     * 添加按钮回调\r\n     */\r\n    const handleAdd = () => {\r\n        /**\r\n         * 新增筛选条件录入项组件的标识, 新增筛选项\r\n         */\r\n        let key = getRandom();\r\n        Object.values(filterItemList).forEach(filterItem => {\r\n            filterItem.selectFcous = false;\r\n            filterItem.inputFocus = false;\r\n        });\r\n        filterItemList[key] = {\r\n            key,\r\n            selectedAttr: 'pselect',\r\n            selectFcous: true,\r\n            inputFocus: false,\r\n        };\r\n        setFilterItemList({ ...filterItemList });\r\n    };\r\n\r\n    /**\r\n     * 清空按钮回调\r\n     */\r\n    const handleClear = () => {\r\n        // 清空筛选项\r\n        let key = getRandom();\r\n        setFilterItemList({\r\n            [key]: {\r\n                key,\r\n                selectedAttr: 'pselect',\r\n                selectFcous: true,\r\n                inputFocus: false,\r\n            },\r\n        });\r\n        // 清空筛选条件\r\n        filterFactors.current = {};\r\n        // 设置表格筛选图标\r\n        const filteringList = Object.values(filterItemList).map(\r\n            filterItem => filterItem.selectedAttr,\r\n        );\r\n        columns.forEach(column => {\r\n            const { attrcode } = column;\r\n            if (filteringList.includes(attrcode)) {\r\n                column.filterStatus === 'filtering' && (column.filterStatus = '');\r\n            }\r\n        });\r\n        // 不更新表格\r\n        // tableScope.setState({ table: currentTable });\r\n    };\r\n\r\n    /**\r\n     * 清空表格筛选的标识\r\n     */\r\n    const handleClearFilterStatus = () => {\r\n        columns.forEach(column => {\r\n            column.filterStatus = '';\r\n        });\r\n        tableScope.filterData = null;\r\n        afterFilterItemList.current = {};\r\n        afterFilterFactors.current = {};\r\n\r\n        // 去除 其他逻辑放到外部 store去处理\r\n        // handleResetCallBack && handleResetCallBack({\r\n        //     filterItemList,\r\n        //     arrColumns: columns,\r\n        // });\r\n    };\r\n\r\n    /**\r\n     * 重置按钮回调\r\n     */\r\n    const handleReset = () => {\r\n        /**\r\n         * 清空筛选后回显筛选项配置列表\r\n         */\r\n        afterFilterItemList.current = {};\r\n        /**\r\n         * 清空筛选后回显筛选项的筛选条件列表\r\n         */\r\n        afterFilterFactors.current = {};\r\n\r\n        // 设置表格筛选图标, 重置时将筛选图标全部清空\r\n        columns.forEach(column => {\r\n            column.filterStatus = '';\r\n        });\r\n\r\n        handleResetCallBack && handleResetCallBack({\r\n            filterItemList,\r\n            arrColumns: columns,\r\n        });\r\n        /**\r\n         * 关闭弹窗\r\n         */\r\n        handleHide();\r\n    };\r\n\r\n    /**\r\n     * CtrlF打开弹窗回调\r\n     */\r\n    const handleCtrlFOpen = () => {\r\n        let finalFilterItemList = null;\r\n        let { current: afterFilterFactorsCurrent } = afterFilterFactors;\r\n        let { current: afterFilterItemListCurrent } = afterFilterItemList;\r\n\r\n        if (Object.keys(afterFilterItemListCurrent).length) {\r\n            /**\r\n             * 渲染缓存的有效的筛选项和筛选条件\r\n             */\r\n            filterFactors.current = afterFilterFactorsCurrent;\r\n            finalFilterItemList = afterFilterItemListCurrent;\r\n            setFilterItemList(finalFilterItemList);\r\n        } else {\r\n            /**\r\n             * 当没有有效的筛选项和筛选条件时\r\n             */\r\n            let key = getRandom();\r\n            Object.values(filterItemList).forEach(filterItem => {\r\n                filterItem.selectFcous = false;\r\n                filterItem.inputFocus = false;\r\n            });\r\n            filterItemList[key] = {\r\n                key,\r\n                selectedAttr: 'pselect',\r\n                selectFcous: true,\r\n                inputFocus: false,\r\n            };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 点击表头打开弹窗回调\r\n     * 这里包含三种情况, \r\n     * 1.直接点击表头,弹出筛选框增一个筛选条件\r\n     * 2.筛选成功点击成功图标,重新筛选, 如果只筛选了一项那个进行重置\r\n     * 3.筛选成功, 点击表头其他区域, 弹出筛选框\r\n     * \r\n     * @param selectedAttr 当前列\r\n     * @param filterStatus 筛选状态\r\n     */\r\n    const handleHeaderOpen = ({ selectedAttr, filterStatus }) => {\r\n        let key = getRandom();\r\n        let finalFilterItemList = null;\r\n        let { current: filterFactorsCurrent } = filterFactors;\r\n        let { current: afterFilterFactorsCurrent } = afterFilterFactors;\r\n        let { current: afterFilterItemListCurrent } = afterFilterItemList;\r\n        if (Object.keys(afterFilterItemListCurrent).length) {\r\n            /**\r\n             * 已经筛选过的情况下, 点击表头不点击筛选图标, 只是弹出筛选框,\r\n             * 并且保存原有筛选项, 不增加筛选项\r\n             */\r\n            if (filterStatus === 'filtered') {\r\n                handleCtrlFOpen();\r\n                return;\r\n            }\r\n            /**\r\n             * 具有有效的筛选项, 已经筛选出结果\r\n             */\r\n            const allocationSelectedAttrs = Object.values(\r\n                afterFilterItemListCurrent,\r\n            ).filter(filterItem => {\r\n                filterItem.selectFcous = false;\r\n                filterItem.inputFocus = false;\r\n                return filterItem.selectedAttr === selectedAttr;\r\n            });\r\n\r\n            if (allocationSelectedAttrs.length) {\r\n                /**\r\n                 * 当前点击列,为有效的筛选项, 将当前项筛选条件去掉重新筛选,\r\n                 * 如果去掉当前筛选条件后没有了筛选条件,执行重置操作\r\n                 */\r\n                allocationSelectedAttrs.forEach(filterItem => {\r\n                    const { key } = filterItem;\r\n                    Reflect.deleteProperty(filterItemList, key);\r\n                    Reflect.deleteProperty(filterFactorsCurrent, key);\r\n                    Reflect.deleteProperty(afterFilterFactorsCurrent, key);\r\n                    Reflect.deleteProperty(afterFilterItemListCurrent, key);\r\n                });\r\n                filterFactors.current = afterFilterFactorsCurrent;\r\n                finalFilterItemList = afterFilterItemListCurrent;\r\n                if (Object.values(afterFilterItemListCurrent).length) {\r\n                    // 再次进行筛选\r\n                    handleFilter();\r\n                    return;\r\n                } else {\r\n                    // 进行重置\r\n                    handleReset();\r\n                    return;\r\n                }\r\n            } else {\r\n                /**\r\n                 * 当前点击列,不是有效的筛选项, 增加一个空筛选项\r\n                 */\r\n                filterFactors.current = afterFilterFactorsCurrent;\r\n                finalFilterItemList = {\r\n                    ...afterFilterItemListCurrent,\r\n                    [key]: {\r\n                        key,\r\n                        selectedAttr,\r\n                        selectFcous: false,\r\n                        inputFocus: true,\r\n                    },\r\n                };\r\n                /**\r\n                 * 设置表格筛选图标\r\n                 */\r\n                columns.forEach(column => {\r\n                    const { attrcode } = column;\r\n                    if (selectedAttr === attrcode) {\r\n                        // 解决  多页签情况下  列缓存被清除的问题\r\n                        column.filterStatus = column.filterStatus || 'filtering';\r\n                    }\r\n                });\r\n            }\r\n            setFilterItemList({ ...finalFilterItemList });\r\n        } else {\r\n            /**\r\n             * 没有有有效的筛选项, 没有筛选出结果, 增加一个空筛选项\r\n             */\r\n            Object.values(filterItemList).forEach(filterItem => {\r\n                filterItem.selectFcous = false;\r\n                filterItem.inputFocus = false;\r\n            });\r\n            filterItemList[key] = {\r\n                key,\r\n                selectedAttr,\r\n                selectFcous: false,\r\n                inputFocus: true,\r\n            };\r\n            /**\r\n             * 设置表格筛选图标\r\n             */\r\n            columns.forEach(column => {\r\n                const { attrcode } = column;\r\n                if (selectedAttr === attrcode) {\r\n                    // 解决  多页签情况下  列缓存被清除的问题\r\n                    column.filterStatus = column.filterStatus || 'filtering';\r\n                }\r\n            });\r\n\r\n        }\r\n        /**\r\n         * 1.打开弹窗\r\n         */\r\n        // setPanelStatus(true);\r\n    };\r\n\r\n    // 更新下\r\n    useEffect(() => {\r\n        console.log(isReset, 'isReset');\r\n        isReset && handleClearFilterStatus();\r\n    }, [isReset])\r\n\r\n    // 更新下\r\n    useEffect(() => {\r\n        console.log(selectedAttr, filterStatus, 'currentFilter');\r\n        selectedAttr && handleHeaderOpen({ selectedAttr, filterStatus });\r\n    }, [selectedAttr, filterStatus])\r\n\r\n    // 给筛选按钮事件, 设置默认值, 解决报错\r\n    const handleFilterClick = handleFilter.bind(null, null, null);\r\n\r\n    return (\r\n        <Modal\r\n            ref={dom => {\r\n                FilterPanelRef = ReactDOM.findDOMNode(dom);\r\n            }}\r\n            size=\"lg\"\r\n            zIndex={800}\r\n            show={open}\r\n            backdrop={true} //是否展示遮罩层\r\n            onHide={handleHide.bind(null)}\r\n            backdropClosable={true}\r\n            onEntered={handleEntered}\r\n            onExited={handleExited}\r\n            draggable={true}\r\n            resizable={true}\r\n            className=\"filterPanel-modal\"\r\n            fieldid=\"filterPanel\"\r\n        >\r\n            <Header closeButton>\r\n                <Title fieldid={`${langJson['table0028']}${tableName || ''}`}>\r\n                    {`${langJson['table0028']}${tableName || ''}:`}\r\n                    <span className={filterTips ? 'table-filter-tips' : 'filter-tips-hidden'}>\r\n                        <span className=\"iconfont icon icon-gantanhao\" />{filterTips}\r\n                    </span>\r\n                </Title>\r\n            </Header>\r\n            <Body>\r\n                {Object.values(filterItemList).map(value => {\r\n                    const { key } = value;\r\n                    return (\r\n                        <FilterItem\r\n                            key={getRandom()}\r\n                            itemKey={key}\r\n                            afterFilterItemList={afterFilterItemList}\r\n                            filterFactors={filterFactors}\r\n                            filterItemList={filterItemList}\r\n                            factorList={factorList}\r\n                            columns={columns}\r\n                            tableScope={tableScope}\r\n                            currentTable={{}}\r\n                            setFilterItemList={setFilterItemList}\r\n                            langJson={langJson}\r\n                        />\r\n                    );\r\n                })}\r\n                <div className=\"add-btn-container\">\r\n                    <div className=\"add-btn\" fieldid={getSysFieldid('add_btn')} onClick={handleAdd}>\r\n                        {/* 添加条件 */}\r\n                        {`+${langJson['table0029']}`}\r\n                    </div>\r\n                    {/* 清空 */}\r\n                    <Button onClick={handleClear} fieldid=\"clear\" >{langJson['table0030']}</Button>\r\n                </div>\r\n            </Body>\r\n            <Footer>\r\n                <ButtonGroup>\r\n                    <Button\r\n                        className=\"filter-btn\"\r\n                        fieldid=\"filter\"\r\n                        colors=\"primary\"\r\n                        onClick={handleFilterClick}\r\n                    >\r\n                        {/* 筛选 */}\r\n                        {langJson['table0028']}\r\n                    </Button>\r\n                    <Button className=\"reset-btn\" fieldid=\"reset\" onClick={handleReset}>\r\n                        {/* 重置 */}\r\n                        {langJson['table0031']}\r\n                    </Button>\r\n                </ButtonGroup>\r\n                {/* 取消 */}\r\n                <Button onClick={handleHide.bind(null)} fieldid=\"cancel\" >{langJson['table_cancel']}</Button>\r\n            </Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default FilterPanel;","/*\r\n * @Descripttion: 过滤\r\n * @version:\r\n * @Author: bbq\r\n * @Date: 2020-08-03 10:17:12\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-01-14 14:49:53\r\n */\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport classNames from 'classnames';\r\nimport { isFunction, filterColumns, uuidv4 } from '../../utils/index';\r\n\r\nimport { getSysFieldid } from '@platform/api';\r\n\r\nimport FilterPanel from './panel';\r\n\r\nrequire('./index.less');\r\n\r\n/**\r\n * @description: 创建列上面的属性\r\n * @param {type} \r\n * @return {type} \r\n */\r\nconst createFilterTitle = (columns, nonFilterable = [], onTitleClick) => {\r\n    // 过滤不可见的列\r\n    // columns = filterColumns(columns, 'visible', false);\r\n    //  返回渲染列\r\n    return columns.map(item => {\r\n\r\n        if (item.children) {\r\n            return {\r\n                ...item,\r\n                children: createFilterTitle(item.children, nonFilterable, onTitleClick),\r\n            };\r\n        }\r\n        let {\r\n            className,\r\n            filterStatus,\r\n        } = item;\r\n        // label 是为了兼容旧版\r\n        // headerClick 是为了兼容旧版 TODO  props 属性的传递\r\n\r\n        return {\r\n            ...item,\r\n            className: classNames(className, 'filterable-column'),\r\n            titleIcon: () => {\r\n                return <Fragment>\r\n                    {/* 是否筛选状态 */}\r\n                    {!nonFilterable.includes(item.attrcode) && filterStatus !== 'filtered' && <i\r\n                        className=\"iconfont th-filter icon-lieguolv\"\r\n                        onClick={e => {\r\n                            onTitleClick && onTitleClick(item);\r\n                        }}\r\n                    />}\r\n                    {/* 筛选出结果的状态 */}\r\n                    {!nonFilterable.includes(item.attrcode) && filterStatus === 'filtered' && (\r\n                        <i\r\n                            className=\"iconfont th-filter icon-lieshaixuanx filtered\"\r\n                            onClick={e => {\r\n                                /**\r\n                                 * 点击筛选图标, 只有当前被筛选时,直接重置,\r\n                                 * 还有其他列同时被筛选时, 去除当前列筛选条件重新筛选\r\n                                 */\r\n                                e.stopPropagation();\r\n                                onTitleClick && onTitleClick(item, true);\r\n                                // this.FilterPanelCallBack.current.handleHeaderOpen({ selectedAttr: attrcode });\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Fragment>\r\n            },\r\n        };\r\n    });\r\n}\r\n\r\n/**\r\n * 创建过滤行\r\n * @param {*} Table \r\n */\r\nexport default function filterRow(Table) {\r\n    if (!Table) {\r\n        console.error('缺少Table组件');\r\n    }\r\n    // TODO\r\n    return class MetaTable extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.onTitleClick = this.onTitleClick.bind(this);\r\n\r\n            this.state = {\r\n                open: false,\r\n                filterColumns: [],\r\n            };\r\n\r\n            this.uuid = uuidv4();\r\n        }\r\n\r\n        /**\r\n         * @description: 获取panel中要使用的  模板数据\r\n         * @param {type} \r\n         * @return {type} \r\n         */\r\n        getFilterPanelItems() {\r\n            let {\r\n                columns,\r\n                // 不允许过滤的列\r\n                nonFilterable = ['numberindex', 'opr', 'checkbox'],\r\n            } = this.props;\r\n\r\n            return filterColumns(columns, column => {\r\n                const { attrcode, visible } = column;\r\n                return !nonFilterable.includes(attrcode) && visible;\r\n            });\r\n        }\r\n\r\n        /**\r\n         * @description: 头部点击事件\r\n         * @param {type} \r\n         * @return {type} \r\n         */\r\n        onTitleClick(column, icon) {\r\n            let {\r\n                arrColumns,\r\n                // 不允许过滤的列\r\n                nonFilterable = ['numberindex', 'opr', 'checkbox'],\r\n            } = this.props;\r\n            // console.log(column);\r\n            let { attrcode, filterStatus } = column;\r\n            !nonFilterable.includes(attrcode) && this.setState({\r\n                open: icon ? false : true,\r\n                selectedAttr: attrcode,\r\n                ...(icon ? {} : { filterStatus }),\r\n            });\r\n            // { selectedAttr: attrcode, filterStatus }\r\n        }\r\n\r\n        render() {\r\n\r\n            let {\r\n                columns,\r\n                high_filter = {},\r\n                ...others\r\n            } = this.props;\r\n\r\n            let {\r\n                langJson = {},\r\n                alloweFilter = true,\r\n                nonFilterable = ['numberindex', 'opr', 'checkbox'],\r\n                handleResetCallBack,\r\n                handleFilterCallBack,\r\n                onHide,\r\n                // 是否重置\r\n                isReset = false,\r\n                panelTitle,\r\n                filterData = [],\r\n                customColData,\r\n                rowKey,\r\n            } = high_filter;\r\n\r\n            // console.log(alloweFilter);\r\n\r\n            let { open, selectedAttr, filterStatus } = this.state;\r\n\r\n            if (alloweFilter) {\r\n                // 处理筛选时的表头\r\n                columns = createFilterTitle(columns, nonFilterable, this.onTitleClick);\r\n            }\r\n            // console.log('this column is', this.getFilterPanelItems());\r\n            // console.log('langJson', langJson);\r\n            // TODO 快捷键功能 CTRL + F\r\n            return <Fragment>\r\n                {alloweFilter &&\r\n                    <FilterPanel\r\n                        tableColumns={this.getFilterPanelItems()}\r\n                        filterData={filterData}\r\n                        customColData={customColData}\r\n                        rowKey={rowKey}\r\n                        open={open}\r\n                        isReset={isReset}\r\n                        selectedAttr={selectedAttr}\r\n                        filterStatus={filterStatus}\r\n                        onHide={params => {\r\n                            let { arrColumns } = params;\r\n                            let columnStatus = {};\r\n                            // 设置表格筛选图标, 在正常关闭时, 只将filtering状态的图标清空\r\n                            arrColumns.forEach(column => {\r\n                                const { attrcode, filterStatus } = column;\r\n                                if (filterStatus === 'filtering') {\r\n                                    column.filterStatus = '';\r\n                                    columnStatus[attrcode] = { filterStatus: '' };\r\n                                }\r\n                            });\r\n                            onHide && onHide({ ...params, ...{ columnStatus } });\r\n\r\n                            // 清掉当前的选择项\r\n                            this.setState({ open: false, selectedAttr: '', filterStatus: '' });\r\n                        }}\r\n                        tableScope={this}\r\n                        tableName={panelTitle}\r\n                        // 筛选后的回调\r\n                        handleFilterCallBack={params => {\r\n                            let {\r\n                                filterItemList,\r\n                                afterFilterItemList,\r\n                                arrColumns,\r\n                            } = params;\r\n\r\n                            // 记录要变话状态的列\r\n                            let columnStatus = {};\r\n                            const filteringList = Object.values(filterItemList).map(\r\n                                filterItem => filterItem.selectedAttr,\r\n                            );\r\n                            const filteredList = Object.values(afterFilterItemList).map(\r\n                                afterFilterItem => afterFilterItem.selectedAttr,\r\n                            );\r\n                            // 改引用不太稳定\r\n                            arrColumns.forEach(column => {\r\n                                const { attrcode } = column;\r\n                                if (filteredList.includes(attrcode)) {\r\n                                    columnStatus[attrcode] = { filterStatus: 'filtered' };\r\n                                } else if (!filteringList.includes(attrcode)) {\r\n                                    columnStatus[attrcode] = { filterStatus: '' };\r\n                                }\r\n                            });\r\n                            // console.log(arrColumns, columnStatus);\r\n                            handleFilterCallBack && handleFilterCallBack({ ...params, ...{ columnStatus } });\r\n                        }}\r\n                        // 筛选重置后的回调\r\n                        handleResetCallBack={params => {\r\n                            let { arrColumns } = params;\r\n                            let columnStatus = {};\r\n                            // 设置表格筛选图标, 重置时将筛选图标全部清空\r\n                            arrColumns.forEach(column => {\r\n                                columnStatus[column.attrcode] = { filterStatus: '' };\r\n                            });\r\n                            // console.log(columnStatus);\r\n                            handleResetCallBack && handleResetCallBack({ ...params, ...{ columnStatus } });\r\n                        }}\r\n                        langJson={langJson}\r\n                    />\r\n                }\r\n                <Table\r\n                    columns={columns}\r\n                    {...others}\r\n                />\r\n\r\n            </Fragment>\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-08-07 16:24:53\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-03-03 16:39:20\r\n */\r\nimport React from 'react';\r\n\r\nrequire('./index.less');\r\n\r\nconst OFFSET = {\r\n    x: 2,\r\n    y: 2,\r\n};\r\n\r\n// 获取px\r\nfunction getPx(value) {\r\n    return Math.abs(value) + 'px';\r\n}\r\n\r\n// get nearest parent element matching selector   origin from stackoverflow  add by bbqin\r\nconst Closest = function (el, selector) {\r\n    if (!el) {\r\n        return null;\r\n    }\r\n    var matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\r\n\r\n    while (el) {\r\n        if (matchesSelector.call(el, selector)) {\r\n            break;\r\n        }\r\n        el = el.parentElement;\r\n    }\r\n    return el;\r\n};\r\n\r\n/**\r\n * 获取父级可以滚动的元素 特指y轴\r\n * @param {DOM} el \r\n */\r\nconst getScrollParentDOM = function (el) {\r\n    if (!el) {\r\n        return null;\r\n    }\r\n    while (el) {\r\n        if (el.style.overflowY === 'scroll' || el === document.body) {\r\n            break;\r\n        }\r\n        el = el.parentElement;\r\n    }\r\n    return el;\r\n}\r\n\r\n/**\r\n * 设置样式\r\n * @param {DOM} $dom \r\n * @param {Object} style \r\n */\r\nconst setStyle = function ($dom, style = {}) {\r\n    for (const key in style) {\r\n        if (style.hasOwnProperty(key)) {\r\n            $dom.style[key] = style[key];\r\n        }\r\n    }\r\n};\r\n\r\nconst isHasClass = function ($dom, name) {\r\n    return $dom && name && $dom.className.indexOf(name) !== -1;\r\n};\r\n\r\n// 添加class\r\nconst addClass = function ($dom, name) {\r\n    !isHasClass($dom, name) && ($dom.className += ` ${name}`);\r\n};\r\n\r\n// 移除class\r\nconst removeClass = function ($dom, name) {\r\n    $dom && ($dom.className = $dom.className.replace(name, ''));\r\n};\r\n\r\nconst isDomShow = function ($dom) {\r\n    return $dom.style.display !== 'none';\r\n};\r\n\r\nconst mouseButton = 0; // 鼠标左键\r\n\r\n/**\r\n * 已知BUG \r\n * 点击checkbox时  ctrl选中难以生效 猜测 可能是checkbox 自己的选中事件和本事件出现了冲突\r\n */\r\n\r\nexport default class Selectable extends React.Component {\r\n    static defaultProps = {\r\n        unitKey: 'key', // 行关键字 rowid\r\n        canvas: '', // 绘制区域  默认是body\r\n        onSelect: null, // 选中回调\r\n        selector: 'tr', // 行选择器\r\n        response: 15, // 响应距离\r\n        disabled: false, // 可选值 true false 'shift' 'ctrl' 'slide'\r\n        userSelect: false, // 启用用户文字选中\r\n        single: false, // shif启用内置单选\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // 框选响应遮罩\r\n        this.createSelectableShape();\r\n        // 事件指定\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onMouseUp = this.onMouseUp.bind(this);\r\n\r\n        // 当前组件的键位状态\r\n        this.hotkey = null;\r\n        this.drag = null;\r\n\r\n        // 鼠标初始位置的记录\r\n        this.startPoint = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n\r\n        // receive 的初始值\r\n        this.receiveItem = props.startItem;\r\n\r\n        // 记录起始行和最终行\r\n        this.startItem = props.startItem;\r\n        this.endItem = null;\r\n\r\n        // 记录当前选中的数据 针对方案一\r\n        this.selectorItem = {};\r\n        // 或者框选的行目前有两种方案 \r\n        // 方案一  给cavans 上的tr都注册mouseEnter  mouseLeave 事件 实时记录经过的行\r\n        // 方案二  渲染好框之后 计算位置 落在坐标之内的行记录下来\r\n    }\r\n\r\n    /**\r\n     * 创建框选遮罩\r\n     */\r\n    createSelectableShape() {\r\n        let shapeCls = 'mouse-selectable-shape';\r\n        this.$selectableShape = document.querySelector(`.${shapeCls}`);\r\n        if (this.$selectableShape) {\r\n            return null;\r\n        }\r\n        let fragment = document.createDocumentFragment();\r\n        let $selectableShape = document.createElement('div');\r\n        $selectableShape.className = shapeCls;\r\n        // 合并样式\r\n        setStyle($selectableShape, this.props.style);\r\n        fragment.appendChild($selectableShape);\r\n        document.body.appendChild(fragment);\r\n        this.$selectableShape = document.querySelector(`.${shapeCls}`);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        // 如果传入的初始位置不为空  那么重新设置初始位置\r\n        if (this.receiveItem != nextProps.startItem && nextProps.startItem) {\r\n            this.startItem = nextProps.startItem;\r\n        }\r\n\r\n        this.props = { ...this.props, ...nextProps };\r\n\r\n        let { userSelect, canvas } = this.props;\r\n        let $canvas = document.querySelector(`${canvas}`);\r\n        // 禁用鼠标选中 文字\r\n        !userSelect && $canvas && this.getEnabled('slide') && addClass($canvas, 'user-unselect');\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { canvas, selector, userSelect } = this.props;\r\n        // 目标容器画布\r\n        let $canvas = document.querySelector(`${canvas}`);\r\n        // specialCanvas  用来越过tr的mouseDown 封锁\r\n\r\n        document.body.addEventListener('mousedown', this.onMouseDown);\r\n        document.body.addEventListener('mousemove', this.onMouseMove);\r\n        document.body.addEventListener('mouseover', this.onMouseOver);\r\n        document.body.addEventListener('mouseup', this.onMouseUp);\r\n        // 禁用鼠标选中 文字\r\n        !userSelect && $canvas && this.getEnabled('slide') && addClass($canvas, 'user-unselect');\r\n\r\n        if (!$canvas) {\r\n            // console.log('特殊情况，初始化时没有找到对应dom');\r\n            return;\r\n        }\r\n        let $item = $canvas.querySelector(selector);\r\n        if ($item) {\r\n            this.startItem = this.getItemKey($item);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        // 清理事件 \r\n        document.body.removeEventListener('mousedown', this.onMouseDown);\r\n        document.body.removeEventListener('mousemove', this.onMouseMove);\r\n        document.body.removeEventListener('mouseover', this.onMouseOver);\r\n        document.body.removeEventListener('mouseup', this.onMouseUp);\r\n\r\n        // 清理dom\r\n        this.$selectableShape = null;\r\n    }\r\n\r\n    /**\r\n     * 根据关键子获取禁用状态\r\n     * @param {String} key \r\n     */\r\n    getEnabled(key) {\r\n        let { disabled } = this.props;\r\n\r\n        if (Object.prototype.toString.call(disabled) !== \"[object Array]\") {\r\n            disabled = [disabled];\r\n        }\r\n\r\n        return !disabled.includes(key || true);\r\n    }\r\n\r\n    /**\r\n     * 获取选中项的 值\r\n     * @param {DOM} $item \r\n     */\r\n    getItemKey($item) {\r\n        if (!$item) {\r\n            return null;\r\n        }\r\n        return $item.getAttribute('cellSelectorKey');\r\n    }\r\n\r\n    /**\r\n     * 获取当前的 选中项dom\r\n     * @param {DOM} $target \r\n     */\r\n    getItem($target) {\r\n        // 如果点到tbody\r\n        if (!$target || $target.querySelector('tr')) {\r\n            return null;\r\n        }\r\n        if ($target.tagName === 'TD') {\r\n            return $target.querySelector(this.props.selector);\r\n        }\r\n        // 如果往下找  找到了\r\n        return Closest($target, this.props.selector + ', tr');\r\n    }\r\n\r\n    /**\r\n     * 鼠标按下事件\r\n     */\r\n    onMouseDown = e => {\r\n        let { canvas } = this.props;\r\n        // 目标容器画布\r\n        let $canvas = document.querySelector(`${canvas}`);\r\n        // console.log('onMouseDown', e);\r\n        let ele = e.target;\r\n        let $sideBox = $canvas && $canvas.querySelector('.edit-table-modal');\r\n        \r\n\r\n        // mac 平台右键是使用control + 触摸板点击触发的  会有问题\r\n        if (/Mac|iPod|iPhone|iPad/.test(navigator.platform)\r\n            && (e.keyCode === '17' || e.key === 'Control' || e.code === 'ControlLeft')\r\n            && e.button === mouseButton) {\r\n\r\n            return;\r\n        }\r\n        if (e.button !== mouseButton || !$canvas || !$canvas.contains(ele) || !this.getEnabled() || !ele ||\r\n            ele.className.indexOf('u-table-thead-th-drag-gap') !== -1 ||\r\n            ($sideBox && $sideBox.contains(ele)) ||\r\n            ele.parentElement.className.indexOf('u-table-thead-th-drag-gap') !== -1) {\r\n            this.hotkey = null;\r\n            this.drag = false;\r\n\r\n            if ($sideBox && $sideBox.contains(ele)) {\r\n                // 此时不能clearData 否则可能有问题\r\n                return true;\r\n            }\r\n            let $setColumnMenu = document.querySelector('#nc-table-setColumnMenu');\r\n            if ($canvas && !$canvas.contains(ele) && !($setColumnMenu && $setColumnMenu.contains(ele))) {\r\n                let isSelect =  $canvas.querySelector('.column-title-actived, .table-cell-actived');\r\n                // TODO 是否需要判断页面是否选中了内容\r\n                isSelect && this.clearData({ isSelect }, this.hotkey);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        // 注意顺序 \r\n        this.clearShape();\r\n        // 上面的方法会清空所有状态\r\n        this.startPoint = {\r\n            x: e.clientX,\r\n            y: e.clientY,\r\n        };\r\n\r\n        // 不同的键位判断\r\n        if ((e.ctrlKey || e.metaKey) && e.shiftKey && this.getEnabled('ctrl') && this.getEnabled('shift')) {\r\n            this.hotkey = 'ctrl&shift';\r\n        } else if ((e.ctrlKey || e.metaKey) && this.getEnabled('ctrl')) { // e.metaKey 修复 mac commend 键\r\n            // console.log(this.getItem(ele));\r\n            this.hotkey = 'ctrl';\r\n            // 将上一次选中的获取并转换\r\n            let hasSelectorItem = this.props.hasSelectorItem;\r\n            let key = this.getItemKey(this.getItem(ele));\r\n            let isSelect = false;\r\n            // 外部方法处理\r\n            if (hasSelectorItem) {\r\n                isSelect = hasSelectorItem(this.hotkey, key);\r\n            }\r\n            // 选中获取反选\r\n            if (this.selectorItem[key] || isSelect) {\r\n                // 移除\r\n                delete this.selectorItem[key];\r\n                // this.selectorItem[key] = false;\r\n            } else {\r\n                this.selectorItem[key] = true;\r\n                this.startItem = key;\r\n            }\r\n        } else if (e.shiftKey && this.getEnabled('shift')) {\r\n            this.hotkey = 'shift';\r\n        } else {\r\n            this.hotkey = 'down';\r\n            if (ele.getAttribute('cellDrag') && this.getEnabled('drag')) {\r\n                // 触发拖拽事件\r\n                this.drag = true;\r\n                this.hotkey = 'drag';\r\n            } else {\r\n                // 清理数据\r\n                let isSelect =  $canvas && $canvas.querySelector('.column-title-actived, .table-cell-actived');\r\n                this.clearData({ isSelect }, this.hotkey);\r\n            }\r\n            // 记录一下点击时的值\r\n            let key = this.getItemKey(this.getItem(ele));\r\n            this.startItem = key;\r\n        }\r\n    };\r\n\r\n    // getScrollParentDOM\r\n    /**\r\n     * 最后一个元素时  移动并滚动\r\n     * @param {DOM} $last \r\n     */\r\n    moveToScroll($last, reverse) {\r\n        if (!$last) {\r\n            return;\r\n        }\r\n        let $scroll = getScrollParentDOM($last),\r\n            sh = $scroll.offsetHeight,\r\n            step = $last.offsetHeight,\r\n            lt = $last.getBoundingClientRect().top,\r\n            st = $scroll.getBoundingClientRect().top;\r\n        if (reverse && (step * 2 > lt - st)) {\r\n            $scroll.scrollTop -= step;\r\n            return;\r\n        }\r\n        if (step * 2 > sh + st - lt) { // 剩余接近两行时\r\n            $scroll.scrollTop += step;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 记录最后一次\r\n     * @param {*} e \r\n     */\r\n    onMouseOver = e => {\r\n        this.endItem = this.getItemKey(this.getItem(e.target)) || this.endItem;\r\n    }\r\n\r\n    /**\r\n     * 鼠标区域内移动事件\r\n     */\r\n    onMouseMove = e => {\r\n        let { canvas } = this.props;\r\n\r\n        // 目标容器画布\r\n        let $canvas = document.querySelector(`${canvas}`);\r\n\r\n        let { response } = this.props;\r\n        // 禁用了\r\n        if (!this.getEnabled('slide') || !$canvas || (!$canvas.contains(e.target) && this.$selectableShape !== e.target)) {\r\n            return false;\r\n        }\r\n\r\n        // console.log('onMouseMove');\r\n\r\n        if (e.button == mouseButton && this.hotkey && !this.drag) {\r\n            // 初始位置\r\n            let X = this.startPoint.x,\r\n                Y = this.startPoint.y,\r\n                // 当前视口\r\n                clientX = e.clientX,\r\n                clientY = e.clientY,\r\n                // 当前页面\r\n                pageX = e.pageX,\r\n                pageY = e.pageY,\r\n                // 滚动条偏移量\r\n                offsetY = pageY - clientY,\r\n                offsetX = pageX - clientX,\r\n                // width = document.body.clientWidth,\r\n                // height = document.body.clientHeight,\r\n                // 应该用窗口高度\r\n                width = window.innerWidth,\r\n                height = window.innerHeight,\r\n                style = this.$selectableShape.style;\r\n\r\n            // 如果响应距离不够或者  响应遮罩未显示 就不进行遮罩的选择  以及是否是可用的功能\r\n            if ((Math.abs(clientY - Y) < response && Math.abs(clientX - X) < response) || this.endItem === this.startItem) {\r\n                return false;\r\n            }\r\n            addClass($canvas, 'pointer-events-none');\r\n            this.hotkey = 'slide';\r\n            // 位置计算\r\n            style.right = 'auto';\r\n            style.bottom = 'auto';\r\n            // 框框的绘制\r\n            if (clientX >= X && clientY >= Y) {\r\n                style.top = getPx(offsetY + Y - OFFSET.y);\r\n                style.left = getPx(offsetX + X - OFFSET.x);\r\n            } else if (clientX < X && clientY >= Y) {\r\n                style.top = getPx(offsetY + Y - OFFSET.y);\r\n                style.left = getPx(offsetX + clientX + OFFSET.x);\r\n            } else if (clientX >= X && clientY < Y) {\r\n                style.top = getPx(offsetY + clientY + OFFSET.y);\r\n                style.left = getPx(offsetX + X - OFFSET.x);\r\n            } else {\r\n                style.top = getPx(offsetY + clientY + OFFSET.y);\r\n                style.left = getPx(offsetX + clientX + OFFSET.x);\r\n            }\r\n\r\n            // 初始化宽度\r\n            style.width = getPx(clientX - OFFSET.x - X);\r\n            style.height = getPx(clientY - OFFSET.y - Y);\r\n\r\n            // 滚动框选\r\n            this.moveToScroll(e.target, clientY < Y);\r\n        }\r\n\r\n        // 拖拽\r\n        if (e.button == mouseButton && this.hotkey && this.drag) {\r\n            let { onSelect, response } = this.props;\r\n            this.endItem = this.getItemKey(this.getItem(e.target)) || this.endItem;\r\n            onSelect && onSelect(this.selectorItem, this.hotkey, { currentKey: this.endItem, startKey: this.startItem }); // 回调中给出操作类型\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 鼠标弹起事件\r\n     */\r\n    onMouseUp = e => {\r\n        let { canvas } = this.props;\r\n        // 目标容器画布\r\n        let $canvas = document.querySelector(`${canvas}`);\r\n\r\n        let { onSelect, response, single, clearData } = this.props;\r\n        if (e.button !== mouseButton || !this.hotkey || !$canvas || !$canvas.contains(e.target)) {\r\n            this.clearShape();\r\n        } else {\r\n            this.endItem = this.getItemKey(this.getItem(e.target)) || this.endItem;\r\n            // console.log(this.endItem, 'this.endItem');\r\n            let direction = 'down';\r\n            if (this.hotkey === 'drag' && this.endItem === this.startItem) {\r\n                this.hotkey = null;\r\n                this.drag = false;\r\n                return;\r\n            }\r\n            switch (this.hotkey) {\r\n                case 'ctrl':\r\n                case 'ctrl&shift':\r\n                case 'shift':\r\n                    break;\r\n                case 'slide':\r\n                case 'drag':\r\n                    // 这种情况 只记录开始和结束\r\n                    let startY = this.startPoint.y,\r\n                        endY = e.clientY,\r\n                        startX = this.startPoint.x,\r\n                        endX = e.clientX;\r\n                    if (endY - startY < 0) {\r\n                        direction = 'up';\r\n                    }\r\n                    this.clearShape();\r\n                    if ((Math.abs(endY - startY) < response && Math.abs(endX - startX) < response) || this.endItem === this.startItem) {\r\n                        this.hotkey = null;\r\n                        this.drag = false;\r\n                        return;\r\n                    }\r\n                    break;\r\n                default:\r\n                    // console.log('空空如也', this.hotkey, this.selectorItem, this.endItem);\r\n                    break;\r\n            }\r\n            // 清理一下无效数据\r\n            delete this.selectorItem[null];\r\n            // down的情况 由外部的rowClick来进行处理 否则就需要去除外部的逻辑\r\n            if (this.hotkey && this.hotkey !== 'down') {\r\n                onSelect && onSelect(this.selectorItem, this.hotkey, { currentKey: this.endItem, startKey: this.startItem, dragEnd: this.drag, direction }); // 回调中给出操作类型\r\n            }\r\n            if (this.hotkey && this.hotkey === 'down' && single) {\r\n                onSelect && onSelect(this.selectorItem, this.hotkey, { currentKey: this.endItem, startKey: this.startItem });\r\n            }\r\n            // console.log('onMouseUp', this.hotkey, this.selectorItem, this.endItem);\r\n        }\r\n\r\n        this.hotkey = null;\r\n        this.drag = false;\r\n    };\r\n\r\n    /**\r\n     * 清理数据\r\n     */\r\n    clearData(info, hotkey) {\r\n        let { clearData } = this.props;\r\n        // 记录当前选中的数据 针对方案一\r\n        this.selectorItem = {};\r\n\r\n        clearData && clearData(info, hotkey);\r\n    }\r\n\r\n    /**\r\n     * 主要给框选用\r\n     * 清理框选遮罩样式\r\n     */\r\n    clearShape() {\r\n        let { canvas } = this.props;\r\n        // 目标容器画布\r\n        let $canvas = document.querySelector(`${canvas}`);\r\n        removeClass($canvas, 'pointer-events-none');\r\n        if (this.$selectableShape) {\r\n            this.$selectableShape.style.width = '0';\r\n            this.$selectableShape.style.height = '0';\r\n            this.$selectableShape.style.top = 'auto';\r\n            this.$selectableShape.style.right = 'auto';\r\n            this.$selectableShape.style.bottom = 'auto';\r\n            this.$selectableShape.style.left = 'auto';\r\n            this.$selectableShape.style.display = 'block';\r\n            this.$selectableShape.style.border = 'none';\r\n        }\r\n\r\n        // 清除初始位置\r\n        this.startPoint = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","/*\r\n * @Descripttion: 框选\r\n * @version:\r\n * @Author: bbq\r\n * @Date: 2020-08-03 10:16:50\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-03-08 15:54:04\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { isFunction, uuidv4, isIE } from '../../utils/index';\r\nimport { getSysFieldid } from '@platform/api';\r\n// import { Selectable as Selector } from '@platform/base';\r\nimport Selector from './Selector';\r\n\r\nrequire('./index.less');\r\n\r\n// 导出\r\nselectable.Selector = Selector;\r\n\r\nconst SPECIAL_KEY = '__tableHeader__';\r\n\r\n// 是否是ie浏览器\r\nconst inIEClassName = isIE() ? ' table-cell-wrapper-ie ' : '';\r\n\r\n/**\r\n * 解析选择项\r\n * @param {*} item \r\n */\r\nconst parseSelectItem = function (item = '') {\r\n    const keys = item.split('@');\r\n    if (keys.length < 2) {\r\n        console.warn('缺少一部分key')\r\n        return {};\r\n    }\r\n    return {\r\n        rowKeyValue: keys[0],\r\n        attrcode: keys[1],\r\n    };\r\n}\r\n\r\n/**\r\n * 获取列集合\r\n * @param {*} arrColumns \r\n * @param {*} startAttrcode \r\n * @param {*} endAttrcode \r\n * @param {*} disabledColumn \r\n */\r\nconst getColumnSection = function (arrColumns, startAttrcode, endAttrcode, disabledColumn, disabledColType) {\r\n    // console.log(arrColumns, 'arrColumns'); // 包含了父级\r\n    let columnObjSection = [];\r\n    let columnCodeSection = [];\r\n    if (startAttrcode === endAttrcode) {\r\n        arrColumns.some(column => {\r\n            if (column['attrcode'] === startAttrcode) {\r\n                columnObjSection = [{ attrcode: startAttrcode, label: column['label'] }];\r\n                !column.children && (columnCodeSection = [startAttrcode]);\r\n                return true;\r\n            }\r\n        });\r\n    } else {\r\n        arrColumns.some(column => {\r\n            if (column['attrcode'] === startAttrcode || column['attrcode'] === endAttrcode) {\r\n                // 第二次进入这个逻辑\r\n                if (columnObjSection.length > 0) {\r\n                    columnObjSection.push({ attrcode: column['attrcode'], label: column['label'] });\r\n                    !column.children && (columnCodeSection.push(column['attrcode']));\r\n                    return true;\r\n                }\r\n                // 第一次\r\n                !column.children && (columnCodeSection.push(column['attrcode']));\r\n                columnObjSection.push({ attrcode: column['attrcode'], label: column['label'] });\r\n            } else {\r\n                // 第一次之后\r\n                !column.children && columnCodeSection.length > 0 && columnCodeSection.push(column['attrcode']);\r\n                columnCodeSection.length > 0 && columnObjSection.push({ attrcode: column['attrcode'], label: column['label'] });\r\n            }\r\n        });\r\n    }\r\n    // 去除禁止的列  为啥不在上面做\r\n    columnCodeSection = columnCodeSection.filter(item => !disabledColumn.includes(item));\r\n    columnObjSection = columnObjSection.filter(item => !disabledColumn.includes(item.attrcode));\r\n    return { columnObjSection, columnCodeSection };\r\n}\r\n\r\n/**\r\n * 特殊类型\r\n * @description: \r\n * @param {type} \r\n * @return {type} \r\n */\r\nconst handleSpecialItem = function (item = {}, data = [], rowKey) {\r\n    let { rowKeyValue, attrcode } = item;\r\n    let normalItem = item;\r\n    // 表头上的数据\r\n    if (rowKeyValue === SPECIAL_KEY) {\r\n        const row = data[0];\r\n\r\n        if (!row) {\r\n            return {\r\n                normalItem: { attrcode },\r\n                specialItem: item,\r\n            }\r\n        }\r\n\r\n        return {\r\n            normalItem: {\r\n                rowKeyValue: row[rowKey],\r\n                attrcode,\r\n            },\r\n            specialItem: item,\r\n        }\r\n    }\r\n\r\n    return {\r\n        normalItem,\r\n        specialItem: null,\r\n    }\r\n}\r\n\r\n/**\r\n * 创建标准化表格\r\n * @param {*} Table \r\n */\r\nexport default function selectable(Table) {\r\n    if (!Table) {\r\n        console.error('缺少Table组件');\r\n    }\r\n    // TODO\r\n    return class MetaTable extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.uuid = uuidv4();\r\n        }\r\n\r\n        // 处理选中的数据 返回一个二维数组\r\n        getSelectorData(selectItems, hotkey, { currentKey, startKey, dragEnd, direction }) {\r\n            let { high_selectable = {} } = this.props;\r\n            let activeCells = {};\r\n            let activeSpecialCells = [];\r\n            let {\r\n                data, arrColumns, rowKey,\r\n                onBatchChange,\r\n                disabledColType = ['customer'],\r\n                disabledColumn = ['numberindex', 'opr', 'checkbox'],\r\n                disabledBatchColumn = ['numberindex', 'opr', 'checkbox'],\r\n            } = high_selectable;\r\n\r\n            // 区间型\r\n            if (hotkey === 'shift' || hotkey === 'ctrl&shift' || hotkey === 'slide' || hotkey === 'drag') {\r\n                // let items = Object.keys(selectItems);\r\n                if (!startKey || !currentKey) {\r\n                    console.warn(hotkey + ' invalid select section must start and end');\r\n                    return {};\r\n                }\r\n\r\n                // 开始项\r\n                const startItem = parseSelectItem(startKey);\r\n                // 区分表头\r\n                let { normalItem: startNormalItem, specialItem: startSpecialItem } = handleSpecialItem(startItem, data, rowKey);\r\n                const { rowKeyValue: startRowKeyValue, attrcode: startAttrcode } = startNormalItem;\r\n\r\n                // 结束项\r\n                const endItem = parseSelectItem(currentKey);\r\n                // 区分表头\r\n                let { normalItem: endNormalItem, specialItem: endSpecialItem } = handleSpecialItem(endItem, data, rowKey);\r\n                const { rowKeyValue: endRowKeyValue, attrcode: endAttrcode } = endNormalItem;\r\n\r\n                // 判断rowKeyValue 同列的才能批改\r\n                if (startAttrcode !== endAttrcode && hotkey === 'drag') {\r\n                    console.warn('column patch must single !');\r\n                    return {};\r\n                }\r\n\r\n                // 计算列区间\r\n                const { columnCodeSection, columnObjSection } = getColumnSection(arrColumns, startAttrcode, endAttrcode, disabledColumn, disabledColType);\r\n                console.log(columnCodeSection, columnObjSection, '已经选中的单元格');\r\n\r\n                // 区分表头\r\n                if (startSpecialItem && endSpecialItem) {\r\n                    activeSpecialCells = columnObjSection;\r\n\r\n                    console.log(startSpecialItem, endSpecialItem, activeSpecialCells);\r\n                    return { activeSpecialCells, activeCells };\r\n                }\r\n\r\n                if (startSpecialItem || endSpecialItem) {\r\n                    activeSpecialCells = columnObjSection;\r\n                    console.log(startSpecialItem, endSpecialItem, activeSpecialCells);\r\n                }\r\n\r\n                // 后置 让头选择可以进行\r\n                if (!startRowKeyValue || !endRowKeyValue) { return {}; }\r\n\r\n                // 行区间开始和结束的标识\r\n                let inSection = false;\r\n                // 行区间\r\n                data.some(row => {\r\n                    const rowKeyValue = row[rowKey];\r\n                    // 不知道开始行 先匹配，先记录\r\n                    if (rowKeyValue === startRowKeyValue || rowKeyValue === endRowKeyValue) {\r\n                        activeCells[rowKeyValue] = columnCodeSection;\r\n                        // 最后一次匹配 退出\r\n                        if (inSection || startRowKeyValue === endRowKeyValue) {\r\n                            return true;\r\n                        }\r\n                        // 第一次匹配 记录\r\n                        inSection = true;\r\n                    } else {\r\n                        // 在第一次和最后一次之间时 匹配\r\n                        if (inSection) {\r\n                            activeCells[rowKeyValue] = columnCodeSection;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            // 分散型\r\n            if (hotkey === 'ctrl') {\r\n                for (let key in selectItems) {\r\n                    const { rowKeyValue, attrcode } = parseSelectItem(key);\r\n                    if (!rowKeyValue) { return {}; }\r\n                    // 去除禁用的\r\n                    if (!disabledColumn.includes(attrcode) && rowKeyValue !== SPECIAL_KEY) {\r\n                        activeCells[rowKeyValue] = activeCells[rowKeyValue] || [];\r\n                        activeCells[rowKeyValue].push(attrcode);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // 单点\r\n            if (hotkey === 'down' && currentKey) {\r\n                const { rowKeyValue, attrcode } = parseSelectItem(currentKey);\r\n                if (!rowKeyValue) { return {}; }\r\n\r\n                if (!disabledColumn.includes(attrcode) && !disabledBatchColumn.includes(attrcode) && rowKeyValue !== SPECIAL_KEY) {\r\n                    activeCells[rowKeyValue] = activeCells[rowKeyValue] || [];\r\n                    activeCells[rowKeyValue].push(attrcode);\r\n                }\r\n            }\r\n\r\n            // 批改触发\r\n            if (hotkey === 'drag' && dragEnd) {\r\n                const activeCell = parseSelectItem(startKey);\r\n                if (!activeCell.rowKeyValue) { return {}; }\r\n                activeCell.direction = direction;\r\n                !disabledBatchColumn.includes(activeCell.attrcode) && isFunction(onBatchChange) && onBatchChange(activeCell, activeCells, direction);\r\n            }\r\n\r\n            return { activeSpecialCells, activeCells };\r\n        }\r\n\r\n        render() {\r\n\r\n            let {\r\n                high_selectable = {},\r\n                ...others\r\n            } = this.props;\r\n\r\n            let uniqueSelector = `selectable-${this.uuid}`;\r\n\r\n            let {\r\n                langJson,\r\n                selector = \" tbody tr .table-cell-wrapper, thead tr .column-title-wrapper, thead tr .column-title-wrapper-bg, tbody tr .table-cell-wrapper-bg, tbody tr .table-cell-drag-icon\",\r\n                canvas = '.' + uniqueSelector,\r\n                disabled = false, // 可选值 true false 'shift' 'ctrl' 'slide' 'drag'\r\n                // 启用用户文字选中\r\n                userSelect = false,\r\n                enable = false,\r\n                // 启用单选 \r\n                single = true,\r\n                // 是否选中单元格\r\n                selectCell = true,\r\n                // 开始项  主要配合外部的 单选事件处理\r\n                startItem = '',\r\n                onSelect,\r\n                onDeSelect,\r\n                onClearData,\r\n                getPrevSelector,\r\n                store,\r\n                disabledBatchColumn = ['numberindex', 'opr', 'checkbox'],\r\n            } = high_selectable;\r\n\r\n            return <div className={classNames(uniqueSelector, 'selectable-canvas', {\r\n                'selectable-canvas-enabled': enable,\r\n                'table-cell-wrapper-ie': inIEClassName,\r\n                // 'user-unselect': enable,\r\n            })}>\r\n                {enable &&\r\n                    <Selector\r\n                        canvas={canvas}\r\n                        hasSelectorItem={(hotkey, key) => {\r\n                            if (hotkey === 'ctrl') {\r\n                                let prevSelector = getPrevSelector && getPrevSelector(key, hotkey);\r\n                                let { rowKeyValue: currentRowKeyValue, attrcode } = parseSelectItem(key);\r\n                                // 选中获取反选\r\n                                if (!selectCell && prevSelector) {\r\n                                    let isSelect = false;\r\n                                    for (const item in prevSelector) {\r\n                                        let { rowKeyValue } = parseSelectItem(item);\r\n                                        // 清除已选\r\n                                        if (currentRowKeyValue === rowKeyValue && prevSelector[item]) {\r\n                                            isSelect = true;\r\n                                            onDeSelect && onDeSelect({ [currentRowKeyValue]: [attrcode] }, hotkey);\r\n                                        }\r\n                                    }\r\n                                    return isSelect;\r\n                                } else if (prevSelector[key]) {\r\n                                    // 移除\r\n                                    onDeSelect && onDeSelect({ [currentRowKeyValue]: [attrcode] }, hotkey);\r\n                                    return true;\r\n                                } else {\r\n                                    prevSelector[key] = true;\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }}\r\n                        single={single}\r\n                        selector={selector}\r\n                        disabled={disabled} // 可选值 true false 'shift' 'ctrl' 'slide'\r\n                        userSelect={userSelect} // 启用用户文字选中\r\n                        // 开始项  主要配合外部的 单选事件处理\r\n                        startItem={startItem}\r\n                        onSelect={(selectItems, hotkey, { currentKey, startKey, dragEnd, direction }) => {\r\n                            let { activeCells, activeSpecialCells } = this.getSelectorData(selectItems, hotkey, { currentKey, startKey, dragEnd, direction });\r\n\r\n                            // shift 的逻辑处理\r\n                            if (hotkey === 'shift' || hotkey === 'ctrl&shift') {\r\n                                if (this.prevActiveCells && this.prevStartKey &&\r\n                                    startKey === this.prevStartKey &&\r\n                                    currentKey !== this.prevCurrentKey) {\r\n                                    onDeSelect && onDeSelect(this.prevActiveCells, hotkey);\r\n                                }\r\n                                // 记录数据  为了清除数据\r\n                                this.prevActiveCells = activeCells;\r\n                                this.prevStartKey = startKey;\r\n                                this.prevCurrentKey = currentKey;\r\n                            }\r\n\r\n                            // console.log(activeCells);\r\n                            if (!activeCells) { return; }\r\n                            let current = {};\r\n                            if (currentKey) {\r\n                                current = parseSelectItem(currentKey);\r\n                                if (!current.rowKeyValue) { return; }\r\n                                // 放到后面  onSelect代码逻辑还是要走的\r\n                                if (current.rowKeyValue === SPECIAL_KEY || disabledBatchColumn.includes(current.attrcode)) {\r\n                                    current = {};\r\n                                }\r\n                            }\r\n                            // console.log(selectItems, activeCells, activeSpecialCells);\r\n                            let isBatch = hotkey === 'ctrl' || hotkey === 'shift' || hotkey === 'ctrl&shift' || hotkey === 'slide' || hotkey === 'drag';\r\n                            onSelect && onSelect(activeCells, activeSpecialCells, hotkey, { current, isBatch });\r\n                        }}\r\n                        clearData={(info, hotkey) => {\r\n                            onClearData && onClearData(info.isSelect, hotkey);\r\n                        }}\r\n                    />\r\n                }\r\n                <Table\r\n                    headerEventNoStop={true}\r\n                    {...others}\r\n                />\r\n\r\n            </div>\r\n        }\r\n    }\r\n}","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-08-23 16:13:06\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2020-08-24 15:30:46\r\n */\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { isFunction, excelPackageData } from '../../utils'\r\nimport { getMultiLang, toast } from '@platform/api';\r\nimport './index.less';\r\n\r\nexport default function excel(Table) {\r\n    return class Excel extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = { json: {} }\r\n        }\r\n\r\n        componentDidMount() {\r\n            const { excelConfig } = this.props;\r\n            const { onBatchChange } = excelConfig\r\n            //配置 禁用excel粘贴功能\r\n            if (onBatchChange) {\r\n                // 监听crtl v\r\n                this.listenCrtlV();\r\n            }\r\n        }\r\n\r\n        getPasteData = () => {\r\n            return new Promise(resolve => {\r\n                // 异步处理\r\n                //IE浏览器\r\n                if (window.clipboardData) {\r\n                    let pasteContent = window.clipboardData.getData('Text');\r\n                    resolve(pasteContent);\r\n                    //其他浏览器\r\n                } else if (navigator.clipboard) {\r\n                    navigator.clipboard.readText().then(res => {\r\n                        let pasteContent = res;\r\n                        resolve(pasteContent);\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n        formatPasteData = pasteContent => {\r\n            const { excelConfig } = this.props\r\n            const { langJson } = excelConfig\r\n            if (pasteContent.length > 2) {\r\n                var endStr = pasteContent.substr(pasteContent.length - 1, pasteContent.length);\r\n                if (endStr === '\\n') {\r\n                    pasteContent = pasteContent.substr(0, pasteContent.length - 1);\r\n                }\r\n            }\r\n            //判断是否多列\r\n            let reg = /\\t/\r\n            let text = []\r\n            if (reg.test(pasteContent)) {\r\n                let rows = pasteContent.split('\\n') || [];\r\n                toast({ color: 'danger', title: langJson['table_tips'], content: `只能粘贴一列数据` });\r\n                rows.forEach(row => {\r\n                    let cells = row.split('\\t') || []\r\n                    let firstCell = cells[0]\r\n                    text.push(firstCell)\r\n                })\r\n            } else {\r\n                text = pasteContent.split('\\n');\r\n            }\r\n            return text\r\n        }\r\n\r\n        listenCrtlV = () => {\r\n            const { store, excelConfig } = this.props\r\n            const { onBatchChange, langJson } = excelConfig\r\n            let pasteRange = this.tableDom.querySelector('.u-table-body table')\r\n            pasteRange.addEventListener('paste', e => {\r\n                let { getActiveCell } = store\r\n                const { tableId } = excelConfig;\r\n                let activeCell = getActiveCell()\r\n                let text = this.formatPasteData(e.clipboardData.getData('text/plain'));\r\n                console.log(text.length, text.length <= 1)\r\n                let flag = pasteRange.contains(e.target) && activeCell && text.length > 1\r\n                if (flag) {\r\n                    document.body.focus()\r\n                    let rows = store.getData();\r\n                    let param = {\r\n                        pasteContent: text,\r\n                        activeCell,\r\n                        langJson,\r\n                        rows,\r\n                        getRowOldValue: store.getRowOldValue,\r\n                        tableId,\r\n                    }\r\n                    let data = excelPackageData(param)\r\n                    if (!data) { return }\r\n                    isFunction(onBatchChange) && onBatchChange(data)\r\n                    e.preventDefault();\r\n                    // 表格数据  是否包含删除的数据 这里要斟酌下\r\n                    // let rows = store.getViewData('filter');\r\n                }\r\n\r\n            })\r\n            document.addEventListener('keydown', e => {\r\n                if ((e.metaKey || e.ctrlKey) && e.keyCode === 86) {\r\n                    this.getPasteData().then(pasteContent => {\r\n                        let { getActiveCell } = store\r\n                        let activeCell = getActiveCell()\r\n                        if (pasteContent && activeCell) {\r\n                            const { tableId } = excelConfig;\r\n                            let { column } = activeCell\r\n                            let { itemtype } = column\r\n                            let booleanType = ['switch', 'checkbox_switch']\r\n                            let text = this.formatPasteData(pasteContent);\r\n                            let flag = activeCell && text.length > 1\r\n                            if (flag && booleanType.includes(itemtype)) {\r\n                                document.body.focus()\r\n                                let rows = store.getData();\r\n                                let param = {\r\n                                    pasteContent: text,\r\n                                    activeCell,\r\n                                    langJson,\r\n                                    rows,\r\n                                    getRowOldValue: store.getRowOldValue,\r\n                                    tableId,\r\n                                }\r\n                                let data = excelPackageData(param)\r\n                                if (!data) { return }\r\n                                isFunction(onBatchChange) && onBatchChange(data)\r\n                                e.preventDefault();\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Table\r\n                    {...this.props}\r\n                    ref={dom => {\r\n                        this.tableDom = ReactDOM.findDOMNode(dom);\r\n                    }}\r\n                />)\r\n        }\r\n\r\n    }\r\n}","import CONFIG from '../../config';\r\nimport { isFunction, isUndefined } from '../../utils/index';\r\nimport { Subtr, isNullOrVoid } from '@platform/api';\r\n\r\n\r\n/**\r\n * 处理多表头\r\n * @param {object} column \r\n */\r\nexport function handleMeta(column) {\r\n    if (column.children) {\r\n        column.children.map(child => {\r\n            if (child.children) {\r\n                return handleMeta(child);\r\n            }\r\n            return handleChildMeta(child);\r\n        })\r\n    } else {\r\n        return handleChildMeta(column);\r\n    }\r\n\r\n}\r\n/**\r\n * 给meta添加sorter\r\n * @param {object} item \r\n */\r\nfunction handleChildMeta(item) {\r\n    let {\r\n        attrcode: ICode,\r\n        itemtype: IType,\r\n        isSort = true,\r\n        sorter: Isorter,\r\n    } = item;\r\n\r\n    if (isSort && !isFunction(Isorter)) {\r\n        switch (true) {\r\n            case IType === 'number':\r\n                item.sorter = (front, behind) => {\r\n                    let prev = front.values || front;\r\n                    let next = behind.values || behind;\r\n                    let frontValue = String(prev[ICode] ? prev[ICode].value || '0' : '0');\r\n                    let behindValue = String(next[ICode] ? next[ICode].value || '0' : '0');\r\n                    return Subtr(Number(frontValue.replace(/,/g, '')), Number(behindValue.replace(/,/g, '')));\r\n                };\r\n                break;\r\n            case CONFIG.timeTypes.includes(IType):\r\n                item.sorter = (front, behind) => {\r\n                    let prev = front.values || front;\r\n                    let next = behind.values || behind;\r\n                    let frontValue = prev[ICode] ? prev[ICode].value || '' : '';\r\n                    let behindValue = next[ICode] ? next[ICode].value || '' : '';\r\n                    return frontValue.localeCompare(behindValue);\r\n                };\r\n                break;\r\n            case CONFIG.displayTypes.includes(IType):\r\n                item.sorter = (front, behind) => {\r\n                    let prev = front.values || front;\r\n                    let next = behind.values || behind;\r\n                    let frontValue = String(prev[ICode] ? prev[ICode].display || '' : '');\r\n                    let behindValue = String(next[ICode] ? next[ICode].display || '' : '');\r\n                    return frontValue.localeCompare(behindValue);\r\n                };\r\n                break;\r\n            case IType === 'label':\r\n                item.sorter = (front, behind) => {\r\n                    let prev = front.values || front;\r\n                    let next = behind.values || behind;\r\n                    let fvalue = prev[ICode] ? prev[ICode].value || '' : '';\r\n                    let fdisplay = prev[ICode] ? prev[ICode].display : '';\r\n                    let bvalue = next[ICode] ? next[ICode].value || '' : '';\r\n                    let bdisplay = next[ICode] ? next[ICode].display : '';\r\n                    const frontValue = String(isNullOrVoid(fdisplay) ? fvalue : fdisplay);\r\n                    const behindValue = String(isNullOrVoid(bdisplay) ? bvalue : bdisplay);\r\n                    return frontValue.localeCompare(behindValue);\r\n                };\r\n                break;\r\n            case ICode !== 'numberindex' && ICode !== 'opr' && ICode !== 'checkbox' && ICode !== 'blankrow':\r\n                item.sorter = (front, behind) => {\r\n                    let prev = front.values || front;\r\n                    let next = behind.values || behind;\r\n                    let frontValue = String(prev[ICode] ? prev[ICode].value || '' : '');\r\n                    let behindValue = String(next[ICode] ? next[ICode].value || '' : '');\r\n                    return frontValue.localeCompare(behindValue);\r\n                };\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n// 处理多头排序标识\r\nexport function handleSortcolumns({ columns, sortObj }) {\r\n    columns.forEach(eve => {\r\n        //获取合计行的列配置\r\n        const { children } = eve;\r\n        if (!isUndefined(children)) {\r\n            //判断和并列的情况\r\n            handleSortcolumns({ columns: children, sortObj });\r\n        } else {\r\n            columns.forEach(item => {\r\n                //保存返回的column状态，没有则终止order状态\r\n                if (sortObj[item.attrcode]) {\r\n                    item.order = sortObj[item.attrcode].order;\r\n                    item.orderNum = sortObj[item.attrcode].orderNum;\r\n                } else {\r\n                    item.order = 'flatscend';\r\n                    item.orderNum = '';\r\n                }\r\n            });\r\n        }\r\n    });\r\n}","import React, { Component } from \"react\";\r\nimport { Icon } from '@platform/base';\r\nimport sort from \"bee-table/build/lib/sort\";\r\nimport { handleMeta } from './sort';\r\nimport './index.less';\r\nexport default function columnSort(Table) {\r\n    let ComplexTable = sort(Table, Icon);\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n        }\r\n        render() {\r\n            let { columns, backSort, sortChange, isSort = true } = this.props;\r\n            if (!isSort) {\r\n                return (<Table {...this.props} />)\r\n            }\r\n            // 后端排序和前端排序, 不传config.sort就走前端排序的sort逻辑\r\n            const sort = backSort || {\r\n                mode: \"single\",\r\n                backSource: false,\r\n                sortFun: (sortParam, sortData) => {\r\n                    // console.log(sortParam); // 对象{[field: \"contact\",order: \"ascend\",orderNum: 1]}\r\n                    // console.log(sortData); // 对象{[每一行参与排序的数据]}  没有values的\r\n                    sortChange(sortParam, sortData);\r\n                }\r\n            };\r\n            columns.forEach(item => { handleMeta(item) });\r\n            return (<ComplexTable {...this.props} sort={sort} />)\r\n        }\r\n\r\n    }\r\n\r\n}","\r\nimport React, { Component, Fragment } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { isFunction, isArray, handleBrowseData } from '../../utils';\r\nimport classnames from \"classnames\";\r\nimport { NumberInput, HotKeys } from \"@platform/base\";\r\nimport './index.less';\r\n\r\n\r\nexport default function contextMenu(Table) {\r\n    return class ContextRightMenu extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.pasteCell = {\r\n                rowIndex: -1,\r\n                attrcode: '',\r\n                column: {},\r\n            };\r\n\r\n            //需要业务适配点击事件\r\n            this.editBussMenu = ['insert_up', 'insert_down', 'delete'];\r\n            this.copyMenu = ['copy-row', 'copy-column'];\r\n            this.insert_up = 0;\r\n            this.insert_down = 0;\r\n            this.wrapper = null;\r\n        }\r\n\r\n        //执行复制\r\n        execCommandCopy = (btnCode, activeHeads, currentMeta, activedCells, selectedRows, arrayMeta) => {\r\n            let copyText = this.getTableContent(btnCode, activeHeads, currentMeta, activedCells, selectedRows, arrayMeta);\r\n            //执行复制事件\r\n            if (this.wrapper) {\r\n                let textElement = ReactDOM.findDOMNode(this.wrapper).querySelector(\"#table-copy-element\");\r\n                textElement.value = copyText; // 修改文本框的内容\r\n                textElement.select(); // 选中文本\r\n                document.execCommand(\"copy\"); // 执行浏览器复制命令 \r\n            }\r\n\r\n        }\r\n\r\n        getTableContent = (btnCode, activeHeads, currentMeta, activedCells, selectedRows, arrayMeta) => {\r\n            //复制选中内容\r\n            let copyContent = '';\r\n            //选中表头\r\n            if (activeHeads && activeHeads.length) {\r\n                //多表头也是一个数组\r\n                copyContent = copyContent + this.getHeadContent(activeHeads, currentMeta, btnCode, arrayMeta);\r\n            }\r\n            //选中表体\r\n            if (activedCells) {\r\n                let rowKeyValues = Object.keys(activedCells);\r\n                if (rowKeyValues && rowKeyValues.length) {\r\n                    //此处 activedCells必须是数组，因为需要按照行的顺序复制\r\n                    copyContent = copyContent + this.getBodyContent(selectedRows, activedCells, btnCode, arrayMeta);\r\n                }\r\n            }\r\n            return copyContent;\r\n        }\r\n\r\n        //获取选中表头数据 \r\n        getHeadContent = (activeHeads, currentMeta, btnCode) => {\r\n            //activeHeads: [{attrcode1,lable1},{attrcode2,label2}]\r\n            //arrayMeta拉平数据\r\n            let copyContent = '';\r\n\r\n            let array = [];\r\n            let start = 0;\r\n            let maxLength = 0;\r\n\r\n            let uniqueFlag = {};\r\n\r\n            let arrayMeta = [];\r\n            TraverNode(currentMeta, []);\r\n\r\n            for (let i = 0; i < arrayMeta.length; i++) {\r\n                let item = arrayMeta[i];\r\n                let parentNode = item.parentNode;\r\n                if (!item.visible) continue;\r\n                //判断叶子节点\r\n                let hasSel = false;\r\n                if (btnCode === 'copy' || btnCode === 'copy-column') {\r\n                    let index = activeHeads.findIndex((e) => e.attrcode === item.attrcode);\r\n                    //选中节点包含叶子节点\r\n                    if (index !== -1) {\r\n                        array[start] = [item]\r\n                        hasSel = true;\r\n                        //判断父节点\r\n                        if (parentNode && parentNode.length) {\r\n                            //若为复制 需要判断是否选中\r\n                            if (btnCode === 'copy') {\r\n                                for (let j = parentNode.length - 1; j >= 0; j--) {\r\n                                    let index = activeHeads.findIndex((e) => e.attrcode === parentNode[j].attrcode);\r\n                                    if (index !== -1) {\r\n                                        if (!array[start]) array[start] = [];\r\n                                        if (!uniqueFlag[activeHeads[index].attrcode]) {\r\n                                            uniqueFlag[activeHeads[index].attrcode] = true;\r\n                                            array[start].push(activeHeads[index]);\r\n                                        } else {\r\n                                            array[start].push(' ');\r\n                                        }\r\n                                        hasSel = true;\r\n                                    }\r\n                                }\r\n                                //若为复制列 不需要判断，直接所有父元素全部复制\r\n                            } else if (btnCode === 'copy-column') {\r\n                                if (!array[start]) array[start] = [];\r\n                                for (let j = parentNode.length - 1; j >= 0; j--) {\r\n                                    if (!uniqueFlag[parentNode[j].attrcode]) {\r\n                                        uniqueFlag[parentNode[j].attrcode] = true;\r\n                                        array[start].push(parentNode[j]);\r\n                                    } else {\r\n                                        array[start].push('');\r\n                                    }\r\n                                }\r\n                                hasSel = true;\r\n                            }\r\n                        }\r\n                        //选中节点不含叶子节点\r\n                    } else {\r\n                        //判断是否含父节点\r\n                        if (parentNode && parentNode.length) {\r\n                            //记录第一个被选中的父节点\r\n                            let firstIndex = -1;\r\n                            for (let j = parentNode.length - 1; j >= 0; j--) {\r\n                                let index = activeHeads.findIndex((e) => e.attrcode === parentNode[j].attrcode);\r\n                                if (index !== -1) {\r\n                                    hasSel = true;\r\n                                    if (btnCode === 'copy') {\r\n                                        if (!array[start]) array[start] = [];\r\n                                        if (!uniqueFlag[activeHeads[index].attrcode]) {\r\n                                            uniqueFlag[activeHeads[index].attrcode] = true;\r\n                                            array[start].push(activeHeads[index]);\r\n                                        } else {\r\n                                            array[start].push('');\r\n                                        }\r\n\r\n                                        if (j < parentNode.length - 1 && firstIndex !== -1) {\r\n                                            firstIndex = parentNode.length - 1 - j;\r\n                                            // 填充叶子节点\r\n                                            array[start].unshift(...Array(firstIndex).fill(''));\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (hasSel && btnCode === 'copy-column') {\r\n                                array[start] = [item]\r\n                                for (let j = parentNode.length - 1; j >= 0; j--) {\r\n                                    if (!uniqueFlag[parentNode[j].attrcode]) {\r\n                                        uniqueFlag[parentNode[j].attrcode] = true;\r\n                                        array[start].push(parentNode[j]);\r\n                                    } else {\r\n                                        array[start].push('');\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    //复制行，则为复制整个表头区域\r\n                } else if (btnCode === 'copy-row') {\r\n                    hasSel = true;\r\n                    array[start] = [item];\r\n                    if (parentNode && parentNode.length) {\r\n                        for (let j = parentNode.length - 1; j >= 0; j--) {\r\n                            if (!uniqueFlag[parentNode[j].attrcode]) {\r\n                                uniqueFlag[parentNode[j].attrcode] = true;\r\n                                array[start].push(parentNode[j]);\r\n                            } else {\r\n                                array[start].push('');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (hasSel) {\r\n                    //记录树最大深度\r\n                    array[start] = array[start].reverse();\r\n                    maxLength = Math.max(array[start].length, maxLength)\r\n                    start++;\r\n                }\r\n            }\r\n\r\n            //处理表头选中内容\r\n            for (let i = 0; i < array[0].length; i++) {\r\n                for (let j = 0; j < array.length; j++) {\r\n                    //填充多表头\r\n                    if (array[j].length < maxLength) {\r\n                        array[j].push(...Array(maxLength - array[j].length).fill(''))\r\n                    }\r\n                    //获取label\r\n                    let tdContent = typeof array[j][i] === 'string' ? array[j][i] : array[j][i].label;\r\n                    copyContent = copyContent + tdContent + \"\\t\";\r\n                }\r\n                copyContent = copyContent + \"\\n\";\r\n            }\r\n            return copyContent;\r\n\r\n            function TraverNode(nodes, parentNode = []) {\r\n                if (isArray(nodes)) {\r\n                    nodes.map(item => {\r\n                        item.parentNode = parentNode;\r\n                        //只存叶子节点\r\n                        if (item.visible && !isArray(item.children) || (isArray(item.children) && item.children.length < 1)) {\r\n                            arrayMeta.push(item);\r\n                        }\r\n                        TraverNode(item.children, [...parentNode, item]);\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        //对选中列 根据模板顺序排序\r\n        sortActiveColumn = (visibleColumns, activedCells) => {\r\n            let activeColumn = {};\r\n            //获取所有选中列编码\r\n            for (let rowid in activedCells) {\r\n                let rowActiveCells = activedCells[rowid];\r\n                rowActiveCells.forEach(code => {\r\n                    if (!activeColumn[code]) {\r\n                        activeColumn[code] = true\r\n                    }\r\n                })\r\n            }\r\n\r\n            //对选中列编码 根据模板顺序排序\r\n            let sortedColumn = [];\r\n            visibleColumns.forEach(item => {\r\n                let code = item.attrcode;\r\n                if (activeColumn[code]) {\r\n                    sortedColumn.push(item);\r\n                }\r\n            })\r\n\r\n            return sortedColumn;\r\n        }\r\n\r\n        //获取选中表体数据\r\n        getBodyContent = (selectedRows, activedCells, btnCode, arrayMeta) => {\r\n            let visibleColumns = arrayMeta.filter(e => e.visible === true);\r\n            let sortedActiveColumn = this.sortActiveColumn(visibleColumns, activedCells);\r\n            let copyContent = '';\r\n\r\n            //复制整行\r\n            if (btnCode === 'copy-row') {\r\n                selectedRows.forEach((selectedRow, rowIndex) => {\r\n                    let values = selectedRow.values;\r\n                    //根据模板顺序 获取显示的数据\r\n                    visibleColumns.forEach((item, index) => {\r\n                        let cellValue = values[item.attrcode] || {};\r\n                        copyContent =\r\n                            copyContent +\r\n                            (this.getDisplay(item, cellValue, values) || '');\r\n                        if (index < visibleColumns.length - 1) {\r\n                            copyContent = copyContent + \"\\t\";\r\n                        }\r\n                    })\r\n                    if (rowIndex < selectedRows.length - 1) {\r\n                        copyContent = copyContent + \"\\n\";\r\n                    }\r\n                })\r\n            }\r\n\r\n            //复制整列\r\n            if (btnCode === 'copy-column') {\r\n                selectedRows.forEach((selectedRow, rowIndex) => {\r\n                    let values = selectedRow.values;\r\n                    //根据模板顺序 获取显示的数据\r\n                    sortedActiveColumn.forEach((item, index) => {\r\n                        let code = item.attrcode;\r\n                        let cellValue = values[code] || {};\r\n                        copyContent =\r\n                            copyContent +\r\n                            (this.getDisplay(item, cellValue, values) || '');\r\n\r\n                        if (index < sortedActiveColumn.length - 1) {\r\n                            copyContent = copyContent + \"\\t\";\r\n                        }\r\n                    })\r\n                    if (rowIndex < selectedRows.length - 1) {\r\n                        copyContent = copyContent + \"\\n\";\r\n                    }\r\n                })\r\n            }\r\n\r\n            //复制单元格\r\n            if (btnCode === 'copy') {\r\n                selectedRows.forEach((selectedRow, rowIndex) => {\r\n                    let rowid = selectedRow.rowid || selectedRow.rowId;\r\n                    let avtiveCodes = activedCells[rowid];\r\n                    let values = selectedRow.values;\r\n                    //根据模板顺序 获取显示的数据\r\n                    sortedActiveColumn.forEach((item, index) => {\r\n                        let code = item.attrcode;\r\n                        if (avtiveCodes.includes(code)) {\r\n                            let cellValue = values[code] || {};\r\n                            copyContent =\r\n                                copyContent +\r\n                                (this.getDisplay(item, cellValue, values) || '')\r\n                        }\r\n                        if (index < sortedActiveColumn.length - 1) {\r\n                            copyContent = copyContent + \"\\t\";\r\n                        }\r\n                    })\r\n                    if (rowIndex < selectedRows.length - 1) {\r\n                        copyContent = copyContent + \"\\n\";\r\n                    }\r\n                })\r\n            }\r\n            return copyContent;\r\n        }\r\n\r\n        //根据itemtype不同的类型，整理复制出来单元格的数据，使其与表格显示的数据统一\r\n        getDisplay = (item, cellValue, values) => {\r\n            let { langJson = {} } = this.props.contextMenuConfig;\r\n            return handleBrowseData(\r\n                item.itemtype,\r\n                cellValue.display,\r\n                cellValue.value,\r\n                cellValue.scale,\r\n                item.attrcode,\r\n                item.languageMeta,\r\n                values,\r\n                item.datatype,\r\n                item.options,\r\n                item.multiple,\r\n                langJson\r\n            );\r\n        }\r\n\r\n        //获取粘贴板数据\r\n        getPasteData = () => {\r\n            return new Promise((resolve) => {\r\n                // 异步处理\r\n                //IE浏览器\r\n                if (window.clipboardData) {\r\n                    let pasteContent = this.handlePasteContent(window.clipboardData.getData('Text'));\r\n                    resolve(pasteContent);\r\n                    //其他浏览器\r\n                } else if (navigator.clipboard) {\r\n                    navigator.clipboard.readText().then(res => {\r\n                        let pasteContent = this.handlePasteContent(res);\r\n                        resolve(pasteContent);\r\n                    })\r\n                }\r\n            });\r\n        }\r\n\r\n        //去除空内容及最后一个换行符 转为数据为数组\r\n        handlePasteContent = (pasteContent) => {\r\n            if (pasteContent.length > 2) {\r\n                let endStr = pasteContent.substr(pasteContent.length - 1, pasteContent.length);\r\n                if (endStr === '\\n') {\r\n                    pasteContent = pasteContent.substr(0, pasteContent.length - 1);\r\n                }\r\n            }\r\n            pasteContent = pasteContent.split('\\n');\r\n            return pasteContent;\r\n        }\r\n\r\n        createContextMenu = () => {\r\n            let { contextMenuClick, showBusinessBtn, status, langJson = {}, showPasteBtn, extendRightMenu } = this.props.contextMenuConfig;\r\n            return (\r\n                <Fragment>\r\n                    {\r\n                        <li\r\n                            className={'table-extend-right-menu copy'}\r\n                            onClick={() => {\r\n                                contextMenuClick('copy', (activeHeads, currentMeta, activedCells, selectedRows, arrayMeta) => {\r\n                                    this.execCommandCopy('copy', activeHeads, currentMeta, activedCells, selectedRows, arrayMeta);\r\n                                });\r\n                            }}\r\n                        >{langJson['table_copy']}</li>\r\n                    }\r\n                    {/* {\r\n                        status === 'edit' && showPasteBtn &&\r\n                        <li\r\n                            className='table-extend-right-menu paste'\r\n                            onClick={() => {\r\n                                this.getPasteData().then((pasteContent) => {\r\n                                    contextMenuClick('paste', null, {\r\n                                        pasteContent,\r\n                                        activeCell: this.pasteCell,\r\n                                    })\r\n                                })\r\n                            }}\r\n                        >{langJson['table_paste']}</li>\r\n                    } */}\r\n                    {\r\n                        this.copyMenu.map(code => {\r\n                            return <li\r\n                                className={classnames({\r\n                                    'table-extend-right-menu': true,\r\n                                    [code]: true,\r\n                                    'table-menus-sep': code === 'copy-column'\r\n                                })}\r\n                                onClick={() => {\r\n                                    contextMenuClick(code, (activeHeads, currentMeta, activedCells, selectedRows, arrayMeta) => {\r\n                                        this.execCommandCopy(code, activeHeads, currentMeta, activedCells, selectedRows, arrayMeta);\r\n                                    });\r\n                                }}\r\n                            >{langJson['table_' + code]}</li>\r\n                        })\r\n                    }\r\n\r\n                    {\r\n                        status === 'edit' && showBusinessBtn && this.editBussMenu.map(code => {\r\n                            return <li\r\n                                //className={'table-extend-right-menu insert ' + code}\r\n                                className={classnames({\r\n                                    'table-extend-right-menu insert': true,\r\n                                    [code]: true,\r\n                                    'table-menus-sep': code === 'insert_down' || code === 'delete'\r\n                                })}\r\n                                onClick={() => {\r\n                                    contextMenuClick(code, null, null, this[code], this.pasteCell.rowIndex)\r\n                                }}\r\n                            >{langJson['table_' + code]}\r\n                                {\r\n                                    (code === 'insert_up' || code === 'insert_down') &&\r\n                                    <NumberInput\r\n                                        className='insert_number'\r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                        }}\r\n                                        onChange={(value) => {\r\n                                            this[code] = value;\r\n                                        }}\r\n                                    />\r\n                                }\r\n                            </li>\r\n                        })\r\n                    }\r\n\r\n\r\n                    {/* {\r\n                        status === 'edit' && showBusinessBtn && showPasteBtn &&\r\n                        <li\r\n                            className='table-extend-right-menu insert-paste'\r\n                            onClick={() => {\r\n                                this.getPasteData().then((pasteContent) => {\r\n                                    this.pasteCell.rowIndex = this.pasteCell.rowIndex + 1;\r\n                                    contextMenuClick('insert_paste', null, {\r\n                                        pasteContent,\r\n                                        activeCell: this.pasteCell,\r\n                                    },\r\n                                        pasteContent.length,\r\n                                        this.pasteCell.rowIndex - 1\r\n                                    )\r\n                                })\r\n                            }}\r\n                        >{langJson['table_insert_paste']}</li>\r\n                    } */}\r\n\r\n                    {isFunction(extendRightMenu) && extendRightMenu()}\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        onCellMouseDown = (record, rowIndex, attrcode, __col, e) => {\r\n            this.pasteCell.rowIndex = rowIndex;\r\n            this.pasteCell.attrcode = attrcode;\r\n            this.pasteCell.column = __col;\r\n            let { onCellMouseDown, store, rowKey } = this.props;\r\n            //记录当前单元格\r\n            if (e && e.button === 2) {\r\n                let activedCells = store.getCache('activedCells');\r\n                let rowId = record[rowKey].value || record[rowKey];\r\n                if (activedCells) {\r\n                    let currentRowCell = activedCells[rowId];\r\n                    if (Array.isArray(currentRowCell) && currentRowCell.includes(attrcode)) {\r\n                        return;\r\n                    }\r\n                    for (let rowKeyValue in activedCells) {\r\n                        (activedCells[rowKeyValue] || []).forEach(attrcode => {\r\n                            store.setCellProps(\r\n                                rowKeyValue,\r\n                                attrcode,\r\n                                {\r\n                                    actived: false,\r\n                                    leftLine: false,\r\n                                    rightLine: false,\r\n                                    topLine: false,\r\n                                    bottomLine: false,\r\n                                },\r\n                                false,\r\n                            );\r\n                        });\r\n                    }\r\n                }\r\n\r\n                store.setCellProps(\r\n                    rowId,\r\n                    attrcode,\r\n                    {\r\n                        actived: true,\r\n                        leftLine: true,\r\n                        rightLine: true,\r\n                        topLine: true,\r\n                        bottomLine: true,\r\n                    },\r\n                    true,\r\n                );\r\n                activedCells = { [rowId]: [attrcode] };\r\n                store.setCache(\r\n                    \"activedCells\",\r\n                    activedCells,\r\n                );\r\n            }\r\n            isFunction(onCellMouseDown) && onCellMouseDown(record, rowIndex, attrcode, __col, e);\r\n        }\r\n\r\n        render() {\r\n            let { contextMenuConfig, onCellMouseDown, ...others } = this.props;\r\n            let { enable, extendRightMenu, contextMenuClick } = contextMenuConfig;\r\n            return <div ref={dom => {\r\n                this.wrapper = dom;\r\n            }}>\r\n                <HotKeys\r\n                    keyMap={{ copyHandler: ['ctrl+c'] }}\r\n                    handlers={{\r\n                        copyHandler: () => {\r\n                            contextMenuClick('copy', (activeHeads, currentMeta, activedCells, selectedRows, arrayMeta) => {\r\n                                this.execCommandCopy('copy', activeHeads, currentMeta, activedCells, selectedRows, arrayMeta);\r\n                            }, undefined, undefined, undefined, true);\r\n                        },\r\n                    }}\r\n                    className=\"copy-hotkeys-wrapper\"\r\n                    focused={true}\r\n                    attach={false}\r\n                >\r\n                    <textarea id=\"table-copy-element\"></textarea>\r\n                    <Table\r\n                        {...others}\r\n                        //记录右键菜单触发行\r\n                        onCellMouseDown={this.onCellMouseDown}\r\n                        //注册右键菜单\r\n                        extendRightMenu={\r\n                            enable ? this.createContextMenu() :\r\n                                isFunction(extendRightMenu) ? extendRightMenu() : null\r\n                        }\r\n                    />\r\n                </HotKeys>\r\n            </div>\r\n        }\r\n\r\n    }\r\n}","/*\r\n * @Descripttion: 表格的tab键 enter键 上下左右键\r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-09-05 09:49:57\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2020-12-22 14:31:59\r\n */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport { ViewModel, isFunction, isArray, isArrowKeyDown } from '@platform/api';\r\nimport { findNextFocusItemInTable } from '../../../../WithKeyboardChange/util/findNextFocusItemInTable';\r\nimport { TableWithKeyboardChange, EditTableWithKeyboardChange } from '../../../../WithKeyboardChange';\r\nimport { TableWithAutoFocus } from '../../../../WithAutoFocus';\r\n\r\nimport './index.less';\r\n/**\r\n* 快捷键逻辑处理\r\n* @param {*} Table \r\n*/\r\nexport default function hotkey(Table, componentParams) {\r\n\r\n    if (!Table) {\r\n        console.error('缺少Table组件');\r\n    }\r\n\r\n    class MetaTable extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n        }\r\n\r\n        // click\r\n        handleTableCellClick(record, index, attrcode, col, e) {\r\n            this.mousedown = false;\r\n        }\r\n\r\n        // cell 点击时\r\n        handleCellMouseDown(record, index, attrcode, col, e) {\r\n            this.mousedown = true;\r\n        }\r\n\r\n        render() {\r\n            let {\r\n                rowKey,\r\n                onCellMouseDown,\r\n                onCellFocus,\r\n                onCellKeyDown,\r\n                onTableCellClick,\r\n                onEnter,\r\n                hotKeyWithArrow,\r\n                hotKeyWithEnter,\r\n                high_hotkey,\r\n                ...others\r\n            } = this.props;\r\n            return <Table\r\n                onCellMouseDown={(record, index, attrcode, col, e) => {\r\n                    let res = onCellMouseDown ? onCellMouseDown(record, index, attrcode, col, e) : true;\r\n                    return res !== false && this.handleCellMouseDown(record, index, attrcode, col, e);\r\n                }}\r\n                onCellFocus={(record, index, attrcode, col, e) => {\r\n                    let res = onCellFocus ? onCellFocus(record, index, attrcode, col, e) : true;\r\n                }}\r\n                onCellKeyDown={(record, index, attrcode, col, e) => {\r\n                    let res = onCellKeyDown ? onCellKeyDown(record, index, attrcode, col, e) : true;\r\n                }}\r\n                onTableCellClick={(record, index, attrcode, col, e) => {\r\n                    let res = onTableCellClick ? onTableCellClick(record, index, attrcode, col, e) : true;\r\n                    return res !== false && this.handleTableCellClick(record, index, attrcode, col, e);\r\n                }}\r\n                onEnter={({ e, target = undefined, itemType }) => {\r\n                    const { tableId } = high_hotkey;\r\n                    hotKeyWithEnter({ e, ViewModel, moduleId: tableId, target, itemType: itemType });\r\n                }}\r\n                hotKeyWithArrow={({ e, target = undefined, itemType }) => {\r\n                    const { tableId } = high_hotkey;\r\n                    hotKeyWithArrow({ e, ViewModel, moduleId: tableId, target, itemType: itemType });\r\n                }}\r\n                rowKey={rowKey}\r\n                {...others}\r\n            />\r\n        }\r\n    }\r\n\r\n    // 自动聚焦\r\n    // MetaTable = TableWithAutoFocus(MetaTable);\r\n    // 上下键 enter键\r\n    // console.log(componentParams);\r\n    const { name, type, user } = componentParams;\r\n    return TableWithAutoFocus(name === 'editTable' ? EditTableWithKeyboardChange(MetaTable) : TableWithKeyboardChange(MetaTable));\r\n}","/*\r\n * @Descripttion: 数据源  状态\r\n * @version:\r\n * @Author: renyjk\r\n * @Date: 2020-05-29 10:59:26\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-03-08 15:48:28\r\n */\r\n\r\n/**\r\n * 一些原则的说明\r\n * 1、所有index  应该是指当前可见的数据 不包含被过滤的和假删除的\r\n * 2、所有表格内部的操作  应尽量使用 rowKey 来完成\r\n * 3、内部的api也尽量用  rowKey来操作\r\n * 4、getTrueRowIndex 方法里的这个index  应该是指\r\n * 5、getTrueRowIndexOfFilter过滤之前的index 所有涉及的API 都需要调整下 TODO\r\n *\r\n *\r\n *\r\n */\r\n\r\nimport {\r\n    BaseStore,\r\n    ArrayData,\r\n    TreeData,\r\n    itemCreator,\r\n} from \"@platform/template\";\r\nimport { ajax, pageTo, getSafeRandom } from \"@platform/api\";\r\nimport {\r\n    isBoolean,\r\n    isPromise,\r\n    isArray,\r\n    isObject,\r\n    isString,\r\n    isWrong,\r\n    isUndefined,\r\n    isFunction,\r\n    isNullOrVoid,\r\n    isWrongFalse,\r\n} from \"./utils/index\";\r\nimport CONFIG from \"./config\";\r\nconst { ROW_STATUS } = CONFIG;\r\n\r\n// 表格数据类型\r\nexport function TableData(data, keyPath = \"rowid\") {\r\n    return new ArrayData(data, keyPath);\r\n}\r\n// 表格META类型\r\n/**\r\n *\r\n *  meta={\r\n *  'body1':{\r\n *      name: \"分组一\",\r\n *      code: \"body1\",\r\n *      items:[],\r\n *  },\r\n * 'body2':{\r\n *      name: \"分组一\",\r\n *      code: \"body1\",\r\n *      items:[],\r\n *  },\r\n *  gridrelation:{\r\n *  },\r\n * }\r\n *\r\n */\r\nexport function TableMeta(data, keyPath = \"attrcode\") {\r\n    for (let areacode of Object.keys(data)) {\r\n        if (\r\n            isObject(data[areacode]) &&\r\n            isArray(data[areacode].items) &&\r\n            data[areacode].moduletype === \"table\"\r\n        ) {\r\n            //业务组修改模板, 增加新列, treeData中没有 导致treeData的query方法获取不到新列\r\n            data[areacode].items.isArrayData = false;\r\n            data[areacode].items = new TreeData(data[areacode].items, keyPath);\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\r\n/**\r\n * 不要删 后面可以用来测试效率\r\n * @description: info打印\r\n * @param {type}\r\n * @return:\r\n */\r\n//\r\nconst infoLog = function (target, name, descriptor) {\r\n    var oldValue = descriptor.value;\r\n    descriptor.value = function () {\r\n        console.time(`Function ${name} is call, time `);\r\n        let res = oldValue.apply(this, arguments);\r\n        console.timeEnd(`Function ${name} is call, time `);\r\n        return res;\r\n    };\r\n    return descriptor;\r\n};\r\n\r\n/**\r\n *  使用轩轩的  itemCreator 来获取类型的初始值\r\n *  如果初始值出问题  找轩轩讨论\r\n * @description: 暂时保留\r\n * @param {type}\r\n * @return:\r\n */\r\n//\r\nfunction typeFormat(origin, type) {\r\n    let isVoid = isWrong.call(null, origin);\r\n    switch (true) {\r\n        // 'input', 'textarea', 'datepicker', 'select', 'checkbox', 'radio', 'refer', 'label' 和 number的空value处理\r\n        case [\r\n            \"input\",\r\n            \"textarea\",\r\n            \"datepicker\",\r\n            \"select\",\r\n            \"checkbox\",\r\n            \"radio\",\r\n            \"refer\",\r\n            \"label\",\r\n            \"number\",\r\n        ].includes(type) && isVoid:\r\n            return \"\";\r\n        // switch 的空value处理为boolean值\r\n        case [\"switch\", \"checkbox_switch\", \"switch_browse\"].includes(type) &&\r\n            isVoid:\r\n            return !!origin;\r\n        default:\r\n            return origin;\r\n    }\r\n}\r\n\r\nexport default class Store extends BaseStore {\r\n    constructor(props) {\r\n        super(props);\r\n        this.name = \"PublicStore\";\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    // 数据源\r\n    store = {\r\n        // 表格数据\r\n        data: new TableData([], \"rowid\"),\r\n\r\n        // 列模板\r\n        meta: {},\r\n\r\n        // 表格属性\r\n        props: {\r\n            rowKey: \"rowid\",\r\n            status: \"browse\",\r\n            // 需要聚焦的目标行\r\n            focusIndex: -1,\r\n            // 当前正在操作的行\r\n            currentIndex: -1,\r\n            currentInfo: {},\r\n        },\r\n\r\n        // 已选行\r\n        selectedIndex: new Set(),\r\n\r\n        // 所有pk\r\n        allpks: [],\r\n\r\n        // checkbox选中\r\n        checkInfo: {\r\n            checkedAll: false, //全选标志\r\n            indeterminate: false, //半选标志\r\n            selectIndex: [], //选中行\r\n            disabledAll: false,\r\n            crossPageSelectIndex: new Set(), //跨页选择\r\n        },\r\n        config: {}, //业务组传进来的config\r\n        sortParam: undefined, //存储新的排序信息\r\n        key: 1,\r\n    };\r\n\r\n    // 缓存\r\n    cache = {\r\n        base: null, // 不同情况的初始数据\r\n        beforeEdit: null, //侧拉展开之前的数据（）\r\n        all: null, //初始表格的全数据\r\n        // 进行深度删除后的数据，作为删除后的操作的初始数据 为了在浏览态删除后，编辑态取消不会将删除的数据在显示出来\r\n        afterDel: null,\r\n        // 行的旧值 为数组 既可以存对象 也可以存索引\r\n        oldRows: [],\r\n        // 列初始值\r\n        colInitialValue: {},\r\n        // 多语\r\n        langJson: {},\r\n        // 批改\r\n        oldBatchData: null,\r\n    };\r\n\r\n    /**\r\n     * @description: 复写\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getStore(paths) {\r\n        return super.get(paths);\r\n    }\r\n\r\n    /**\r\n     * @description: 复写\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setStore(paths, value, shouldForceUpdate = true, callback) {\r\n        let res = super.set(paths, value);\r\n        shouldForceUpdate && this.forceUpdate(callback);\r\n        return res;\r\n    }\r\n\r\n    /*-------------缓存-------------*/\r\n\r\n    /**\r\n     * @description: 设置缓存\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setCache(path, value) {\r\n        if (!path) {\r\n            console.warn(\"invalid params <path> to setting\");\r\n            return;\r\n        }\r\n        if (!isArray(path)) {\r\n            path = [path];\r\n        }\r\n        let current = this.cache;\r\n        let len = path.length;\r\n        path.forEach((item, index) => {\r\n            if (!current[item]) {\r\n                current[item] = {};\r\n            }\r\n\r\n            if (index === len - 1) {\r\n                current[item] = value;\r\n            } else {\r\n                current = current[item];\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description: 获取缓存\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getCache(paths) {\r\n        if (isUndefined(paths)) {\r\n            console.warn(\"invalid params <paths> to setting\");\r\n            return;\r\n        }\r\n        if (!isArray(paths)) {\r\n            paths = [paths];\r\n        }\r\n\r\n        let current = this.cache;\r\n\r\n        paths.some(item => {\r\n            if (isUndefined(item) || isNullOrVoid(current)) {\r\n                isUndefined(item) &&\r\n                    console.warn(\"paths has empty item[%s]\", paths);\r\n                return true;\r\n            }\r\n            if (!current[item]) {\r\n                current = null;\r\n                return true;\r\n            }\r\n            current = current[item];\r\n            return false;\r\n        });\r\n        // console.log(this.cache);\r\n        return current;\r\n    }\r\n\r\n    /*-------------私有-------------*/\r\n\r\n    /*-------------列-------------*/\r\n    /**\r\n     * @description: 设置所有meta\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setMeta(meta, id, shouldForceUpdate = true) {\r\n        let name = this.getStore(\"name\");\r\n        id && this.setStore(\"name\", id || name, false);\r\n\r\n        // 我觉得这里应该 考虑page上的meta更新\r\n        this.setStore([\"meta\"], new TableMeta(meta), shouldForceUpdate);\r\n\r\n        // console.log(this._setColInitialValue);\r\n\r\n        // 设置列里面的初始值  如果这时候 没有name 则下面在获取初始值是需要重新计算\r\n        this._setColInitialValue();\r\n    }\r\n\r\n    /**\r\n     * @description: 获取所有meta\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getMeta = () => {\r\n        let meta = this.getStore(\"meta\"),\r\n            res = {};\r\n        for (let key of Object.keys(meta)) {\r\n            // 去除一下浅拷贝 避免JSON.parse报错\r\n            res[key] = meta[key]; // JSON.parse(JSON.stringify(meta[key]));\r\n            if (isObject(meta[key]) && meta[key].items) {\r\n                if (meta[key].moduletype === \"table\") {\r\n                    res[key].items = meta[key].items.get\r\n                        ? meta[key].items.get()\r\n                        : meta[key].items; // getArrayData\r\n                } else if (meta[key].moduletype === \"form\") {\r\n                    res[key].items = meta[key].items;\r\n                }\r\n            }\r\n        }\r\n        // console.log(res);\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * @description: 是否包含当前meta\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    _hasMeta(id) {\r\n        let meta = this.getStore(\"meta\") || {};\r\n        if (!id || !isObject(meta[id]) || !meta[id].items) {\r\n            return null;\r\n        }\r\n        return meta[id].items;\r\n    }\r\n\r\n    /**\r\n     * @description: 获取id所在视图的meta\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getViewMeta(id) {\r\n        let viewMeta = this._hasMeta(id);\r\n        // getTreeData\r\n        viewMeta = viewMeta && isFunction(viewMeta.get) ? viewMeta.get() : [];\r\n        // console.log(viewMeta);\r\n        return viewMeta;\r\n    }\r\n\r\n    /**\r\n     * filterParentColumn 代表是否去除父级元素\r\n     * @description: 获取id所在视图的meta\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getArrayMeta(id, filterParentColumn = true) {\r\n        if (isUndefined(id)) {\r\n            id = this.getStore(\"name\");\r\n            !id && console.warn(\"not find current meta name\");\r\n        }\r\n        let viewMeta = this._hasMeta(id);\r\n        if (viewMeta && !viewMeta.getArrayData) {\r\n            console.warn('viewMeta not init, please setMeta');\r\n        }\r\n        // getArrayData\r\n        viewMeta = viewMeta ? (viewMeta.getArrayData ? viewMeta.getArrayData() : viewMeta) : [];\r\n        // console.log(viewMeta);\r\n        return viewMeta.filter(item => {\r\n            let children = item.children;\r\n            let condition =\r\n                !children ||\r\n                !(filterParentColumn && isArray(children) && children.length >= 0);\r\n            return condition;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description: 获取列字段属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getColumn(id, code) {\r\n        let viewMeta = this._hasMeta(id);\r\n        if (!viewMeta) {\r\n            console.warn(`can't find meta id, please check meta & id`, id);\r\n            return {};\r\n        }\r\n        let item = viewMeta.query(code);\r\n        !item && console.warn(`can't find code, please check meta & id`, viewMeta, code);\r\n        return item || {};\r\n    }\r\n\r\n    /**\r\n     * @description: 设置列数据\r\n     * @param column: { [attrcode]: { visible: false } }\r\n     * @return:\r\n     */\r\n    setColumn(id, column = {}, shouldForceUpdate = true, pattern = \"merge\") {\r\n        for (let attrcode in column) {\r\n            let item = this.getColumn(id, attrcode);\r\n            let value = column[attrcode];\r\n\r\n            if (pattern === \"merge\") {\r\n                // TODO 合并数据\r\n                for (let key in value) {\r\n                    item[key] = value[key];\r\n                }\r\n            } else {\r\n                // TODO: 替换数据\r\n                item = value;\r\n            }\r\n        }\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * 生成列的初始值\r\n     * @description:\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    _generateColInitialValue() {\r\n        let values = {};\r\n        let name = this.getStore(\"name\");\r\n\r\n        let allMeta = this.getMeta();\r\n        let tabRelation =\r\n            allMeta.gridrelation &&\r\n            allMeta.gridrelation[name] &&\r\n            allMeta.gridrelation[name].tabRelation;\r\n        if (isArray(tabRelation)) {\r\n            tabRelation.forEach(itemCode => {\r\n                // 这里有个隐患  可能获取不到对应code的meta\r\n                this._generateItemValue(itemCode, values);\r\n            });\r\n        } else {\r\n            this._generateItemValue(name, values);\r\n        }\r\n\r\n        // console.log('初始值 ', values);\r\n\r\n        return JSON.parse(JSON.stringify(values));\r\n    }\r\n\r\n    _generateItemValue(itemCode, values) {\r\n        let meta = this.getArrayMeta(itemCode);\r\n        if (!meta.length) {\r\n            console.warn(\"meta is empty array\");\r\n        }\r\n\r\n        meta.forEach(item => {\r\n            if (!item.children) {\r\n                // 有children 说明是父级节点\r\n                // 不进行else判断 为了避免下面校验时   不存在合并行字段报错\r\n                let defaultCreator =\r\n                    itemCreator({ itemtype: item.itemtype }) || {};\r\n\r\n                // console.log(defaultCreator);\r\n\r\n                // console.log(defaultCreator.defaultValue);\r\n                // TODO:\r\n                values[item.attrcode] = {\r\n                    scale: null,\r\n                    display: \"\",\r\n                    value: \"\",\r\n                    ...(defaultCreator.defaultValue || {}),\r\n                    ...(item.initialvalue || {}),\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description: 更新设置列的默认值\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    _setColInitialValue() {\r\n        let values = this._generateColInitialValue();\r\n        this.setCache(\"colInitialValue\", values);\r\n\r\n        // console.log(this);\r\n    }\r\n\r\n    /**\r\n     * @description: 获取列的默认值\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    _getColInitialValue() {\r\n        let values = this.getCache(\"colInitialValue\");\r\n        if (!values || !Object.keys(values).length) {\r\n            values = this._generateColInitialValue();\r\n            this.setCache(\"colInitialValue\", values);\r\n        }\r\n        return JSON.parse(JSON.stringify(values));\r\n    }\r\n\r\n    /*-------------单元格-------------*/\r\n\r\n    /**\r\n     * @description: 获取单元格values\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    _getCellValue(row = {}, attrcode) {\r\n        return (row[\"values\"] || {})[attrcode] || {};\r\n    }\r\n\r\n    /**\r\n     * @description: 设置单元格values\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    _setCellValue(row, attrcode, value) {\r\n        row[\"values\"] = row[\"values\"] || {};\r\n        return (row[\"values\"][attrcode] = value);\r\n    }\r\n\r\n    /**\r\n     * rowIndex 可视数据index\r\n     * @description: 设置单元格数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setCellValue({\r\n        rowIndex,\r\n        rowKeyValue,\r\n        attrcode,\r\n        value = {},\r\n        pattern = \"merge\",\r\n        shouldForceUpdate = true,\r\n        callback,\r\n    } = {}) {\r\n        if (!rowKeyValue && rowIndex === -1) {\r\n            console.warn(\"rowIndex is -1\");\r\n            return;\r\n        }\r\n\r\n        // console.log(this.itemGraph);\r\n\r\n        // 获取真实的rowIndex\r\n        !rowKeyValue && (rowKeyValue = this._getRowKeyValue({ rowIndex }));\r\n\r\n        let data = this.getStore(\"data\");\r\n        if (!data.query(rowKeyValue || rowIndex)) {\r\n            return console.warn('not find row data!');\r\n        }\r\n\r\n        let row = data.update(\r\n            rowKeyValue || rowIndex,\r\n            oldRow => {\r\n                let props = this._getCellValue(oldRow, attrcode);\r\n                if (pattern == \"merge\") {\r\n                    value = { ...props, ...value };\r\n                }\r\n\r\n                // 一旦设置 清理掉 validated\r\n                callback && callback(props, value, rowKeyValue, attrcode);\r\n\r\n                // TODO:\r\n                if (\r\n                    !callback && props && value.validated === false && (\r\n                        (isWrong(props.value) && !isWrong(value.value)) ||\r\n                        (isWrong(props.display) && !isWrong(props.display))\r\n                    )\r\n                ) {\r\n                    delete value.validated;\r\n                }\r\n\r\n                // console.log(value);\r\n                this._setCellValue(oldRow, attrcode, value);\r\n                return oldRow;\r\n            },\r\n        );\r\n\r\n        shouldForceUpdate && this.updateItem([rowKeyValue, attrcode]);\r\n        shouldForceUpdate && this.updateItem([rowKeyValue, 'sp_col_customer__']);\r\n\r\n        // shouldForceUpdate && this.forceUpdate();\r\n\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     * rowIndex 可视数据index\r\n     * @description: 获取单元格数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getCellValue({ rowIndex, rowKeyValue, attrcode } = {}) {\r\n        if (!rowKeyValue && rowIndex === -1) {\r\n            console.warn(\"rowIndex is -1\");\r\n            return;\r\n        }\r\n        // 获取真实的rowIndex\r\n        !rowKeyValue && (rowKeyValue = this._getRowKeyValue({ rowIndex }));\r\n\r\n        let row = this.getStore(\"data\").query(rowKeyValue || rowIndex);\r\n\r\n        return this._getCellValue(row, attrcode);\r\n    }\r\n\r\n    /**\r\n     * rowIndex 可视数据index\r\n     * @description: 设置单元格属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setCellProps(\r\n        rowKeyValue,\r\n        attrcode,\r\n        value = {},\r\n        shouldForceUpdate = true,\r\n        pattern = \"merge\",\r\n    ) {\r\n        if (isUndefined(rowKeyValue)) {\r\n            console.warn(\"invalid params\");\r\n            return;\r\n        }\r\n\r\n        // rowKeyValue = this._getRowKeyValue({ rowKeyValue });\r\n\r\n        // get(this.valueGraph, [rowKeyValue, attrcode]).forceUpdate();\r\n        let data = this.getStore(\"data\");\r\n        if (!data.query(rowKeyValue)) {\r\n            return console.warn('not find row data!');\r\n        }\r\n\r\n        let row = data.update(rowKeyValue, oldRow => {\r\n            let props = this._getCellValue(oldRow, attrcode);\r\n\r\n            if (pattern == \"merge\") {\r\n                value = { ...props, ...value };\r\n            }\r\n\r\n            // console.log(value);\r\n            this._setCellValue(oldRow, attrcode, value);\r\n            return oldRow;\r\n        });\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n        // 这里需要优化\r\n        // shouldForceUpdate && this.updateItem([rowKeyValue, attrcode]);\r\n        // shouldForceUpdate && this.updateItem([rowKeyValue, 'sp_col_customer__']);\r\n\r\n        return row;\r\n    }\r\n\r\n    /**\r\n     * rowIndex 可视数据index\r\n     * @description: 获取单元格属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getCellProps({\r\n        rowIndex, // 行\r\n        attrcode, // 列\r\n        rowKeyValue,\r\n    } = {}) {\r\n        if (!rowKeyValue && rowIndex === -1) {\r\n            console.warn(\"rowIndex is -1\");\r\n            return;\r\n        }\r\n\r\n        // 获取真实的rowIndex\r\n        !rowKeyValue && (rowKeyValue = this._getRowKeyValue({ rowIndex }));\r\n\r\n        let row = this.getStore(\"data\").query(rowKeyValue || rowIndex);\r\n\r\n        return this._getCellValue(row, attrcode);\r\n    }\r\n\r\n    /*-------------行-------------*/\r\n\r\n    /**\r\n     * TODO 看看能不能优化下\r\n     * 获取真实的rowIndex  不建议频繁使用\r\n     * view 目前有 normal sort delete filter\r\n     * @description: 获取行的index\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getTrueRowIndex({ rowKeyValue, rowIndex } = {}, view = \"normal\") {\r\n        if (isUndefined(rowKeyValue) && isUndefined(rowIndex)) {\r\n            console.warn(\"invalid params\");\r\n            return -1;\r\n        }\r\n\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        let data = this.getStore(\"data\");\r\n        let len = data.length;\r\n\r\n        // 只传index 的情况\r\n        if (isUndefined(rowKeyValue)) {\r\n            let row = this.getViewData(view)[rowIndex];\r\n            if (!row) {\r\n                console.warn(\"not find row, maybe row overflow\");\r\n                return -1;\r\n            }\r\n            rowKeyValue = row[rowKey];\r\n        }\r\n\r\n        // 可以some 优化下\r\n        data.some((item, index) => {\r\n            if (item[rowKey] === rowKeyValue) {\r\n                rowIndex = index;\r\n            }\r\n            return item[rowKey] === rowKeyValue;\r\n        });\r\n\r\n        rowIndex = rowIndex >= 0 && rowIndex < len ? rowIndex : -1;\r\n        rowIndex === -1 && console.warn(\"rowIndex 为 -1，可能会导致后面报错\");\r\n        return rowIndex;\r\n    }\r\n\r\n    /**\r\n     * @description: 获取行的index\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    _getRowKeyValue({ rowKeyValue, rowIndex }) {\r\n        if (isUndefined(rowKeyValue) && isUndefined(rowIndex)) {\r\n            console.warn(`invalid params _getRowKeyValue`);\r\n            return;\r\n        }\r\n\r\n        // 检测 rowKeyValue\r\n        if (rowKeyValue) {\r\n            return rowKeyValue;\r\n        }\r\n\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        let viewData = this.getViewData();\r\n        let len = viewData.length;\r\n\r\n        let row = viewData[rowIndex];\r\n\r\n        if (row && row[rowKey]) {\r\n            rowKeyValue = row[rowKey];\r\n        } else {\r\n            console.warn(\r\n                \"rowIndex overflow rowIndex: %s, len: %s\",\r\n                rowKeyValue,\r\n                len,\r\n            );\r\n        }\r\n\r\n        return rowKeyValue;\r\n    }\r\n\r\n    /**\r\n     * 如果rowKeyValues里有数字  则转换一下\r\n     * @description: 获取行的rowKeyValues\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    _getRowKeyValues({ rowKeyValues, rowIndexs, defaultAll = false }) {\r\n        if (isUndefined(rowKeyValues) && isUndefined(rowIndexs)) {\r\n            !defaultAll && console.warn(`invalid params ${rowKeyValues}`);\r\n            if (defaultAll) {\r\n                let data = this.getStore(\"data\");\r\n                let rowKey = this.getTableProps(\"rowKey\");\r\n                // data.getKeys()\r\n                return data.order || data.map(row => row[rowKey]);\r\n            }\r\n            return [];\r\n        }\r\n\r\n        // 检测 rowKeyValues 的类型\r\n        if (rowKeyValues) {\r\n            // 转数组\r\n            rowKeyValues = isArray(rowKeyValues)\r\n                ? rowKeyValues\r\n                : [rowKeyValues];\r\n            return rowKeyValues;\r\n        }\r\n\r\n        // 转数组\r\n        rowIndexs = isArray(rowIndexs) ? rowIndexs : [rowIndexs];\r\n\r\n        let viewData = this.getViewData();\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        let len = viewData.length;\r\n        let finalRowKeyValues = [];\r\n\r\n        // 避免外部没判断报错\r\n        rowIndexs.forEach(rowIndex => {\r\n            let row = viewData[rowIndex];\r\n\r\n            if (row && row[rowKey]) {\r\n                finalRowKeyValues.push(row[rowKey]);\r\n            } else {\r\n                console.warn(\r\n                    \"rowIndex overflow rowIndex: %d, len: %d\",\r\n                    rowIndex,\r\n                    len,\r\n                );\r\n            }\r\n        });\r\n\r\n        // console.log(\"rowKeyValues\", finalRowKeyValues);\r\n        return finalRowKeyValues || [];\r\n    }\r\n\r\n    /**\r\n     * rowIndex 可视数据index\r\n     * @description: 获取行属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getRowProps({ rowKeyValue, rowIndex }, name) {\r\n        // 获取 rowKeyValue\r\n        rowKeyValue = this._getRowKeyValue({ rowKeyValue, rowIndex });\r\n\r\n        let data = this.getStore(\"data\"),\r\n            row = data.query(rowKeyValue);\r\n        return row[name];\r\n    }\r\n\r\n    /**\r\n     * rowKeyValue 可以是 index 也可以是 key\r\n     * @description: 设置行属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setRowProps(\r\n        { rowKeyValue, rowIndex } = {},\r\n        value = {},\r\n        shouldForceUpdate = true,\r\n        pattern = \"merge\",\r\n    ) {\r\n        // 获取rowKeyValue\r\n        rowKeyValue = this._getRowKeyValue({ rowKeyValue, rowIndex });\r\n\r\n        let data = this.getStore(\"data\");\r\n\r\n        data.update(rowKeyValue, oldRow => {\r\n            oldRow = Object.assign({}, oldRow, value);\r\n            return oldRow;\r\n        });\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * 这个方法和上面一个是否合并为一个 要考虑下\r\n     * rowKeyValues 可以是 index 也可以是 key\r\n     * @description: 设置行属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setRowsProps(\r\n        { rowKeyValues, rowIndexs, defaultAll = true } = {},\r\n        value = {},\r\n        shouldForceUpdate = true,\r\n    ) {\r\n        // 获取rowKeyValue\r\n        rowKeyValues = this._getRowKeyValues({\r\n            rowKeyValues,\r\n            rowIndexs,\r\n            defaultAll,\r\n        });\r\n\r\n        rowKeyValues.forEach(rowKeyValue => {\r\n            this.setRowProps({ rowKeyValue }, value, false);\r\n        });\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * @description: 设置行属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setRowsCellPropsByKey(\r\n        rowKeyValues,\r\n        value = {},\r\n        shouldForceUpdate = true,\r\n        defaultAll,\r\n    ) {\r\n        rowKeyValues = this._getRowKeyValues({ rowKeyValues, defaultAll });\r\n        rowKeyValues.forEach(rowKeyValue => {\r\n            let data = this.getStore(\"data\"),\r\n                row = data.query(rowKeyValue);\r\n            if (isObject(row)) {\r\n                // Update\r\n                for (let attrcode in row.values) {\r\n                    this.setCellProps(rowKeyValue, attrcode, value, false);\r\n                }\r\n            } else {\r\n                console.warn(`can't find row data`, rowKeyValue);\r\n            }\r\n        });\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * @description: 设置行属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setRowsCellPropsByIndex(\r\n        rowIndexs,\r\n        value = {},\r\n        shouldForceUpdate = true,\r\n        defaultAll,\r\n    ) {\r\n        // 获取rowKeyValue\r\n        let rowKeyValues = this._getRowKeyValues({ rowIndexs, defaultAll });\r\n        rowKeyValues.forEach(rowKeyValue => {\r\n            let data = this.getStore(\"data\"),\r\n                row = data.query(rowKeyValue);\r\n            if (isObject(row)) {\r\n                // Update\r\n                for (let attrcode in row.values) {\r\n                    this.setCellProps(rowKeyValue, attrcode, value, false);\r\n                }\r\n            } else {\r\n                console.warn(`can't find row data`, rowKeyValue);\r\n            }\r\n        });\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * @description: 根据规则来获取数据\r\n     * // 可以设计为字符串或者数组\r\n     * @param {rule: '!disabled && !selected || value > 1' }\r\n     * @return:\r\n     */\r\n    _getDataByRules(data) {\r\n        // TODO 规则解析\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * rowIndexs 是当前视图的\r\n     * @description: 获取多行的数据\r\n\r\n     * @return: \r\n     */\r\n    getRows({ rowIndexs, rowKeyValues, filter } = {}) {\r\n        let data = this.getStore(\"data\"),\r\n            rows = [];\r\n\r\n        if (filter) {\r\n            return this._getDataByRules(data, filter);\r\n        }\r\n\r\n        // 获取rowKeyValues\r\n        rowKeyValues = this._getRowKeyValues({ rowKeyValues, rowIndexs });\r\n\r\n        (rowKeyValues || rowIndexs || []).forEach(item => {\r\n            let row = data.query(item);\r\n            !row && console.warn(\"not find row data\");\r\n            rows.push(row);\r\n        });\r\n\r\n        return rows;\r\n    }\r\n\r\n    /**\r\n     * rowIndex 是当前视图的\r\n     * @description: 设置行数据  主要用于更新\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setRows({ rows = [], shouldForceUpdate = true } = {}) {\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        let data = this.getStore(\"data\");\r\n        // 更新不需要默认值\r\n        // let initialValue = this._getColInitialValue();\r\n\r\n        let newRows = [];\r\n\r\n        rows.forEach(item => {\r\n            let rowKeyValue = item[rowKey],\r\n                row = data.query(item[rowKey]);\r\n\r\n            if (isObject(row)) {\r\n                data.update(rowKeyValue, oldRow => {\r\n                    //  Update values status ==\r\n                    const values = Object.assign(\r\n                        {},\r\n                        // 合并里面的状态\r\n                        oldRow.values || {},\r\n                        // 合并默认值\r\n\r\n                        item.values || {},\r\n                    );\r\n\r\n                    // 深度合并拷贝一下 (先合并 values层  再合并values内部)\r\n                    for (let key in values) {\r\n                        values[key] = values[key] || {};\r\n\r\n                        values[key] = Object.assign(\r\n                            {},\r\n                            // 合并默认状态\r\n                            (oldRow.values || {})[key],\r\n                            // 合并默认值  实际上应该从itemCreate中取出默认值  这里可以偷个懒\r\n                            {\r\n                                display: !isUndefined(values[key].display) ? values[key].display : null,\r\n                                value: !isUndefined(values[key].value) ? values[key].value : null,\r\n                                scale: !isUndefined(values[key].scale) ? values[key].scale : -1,\r\n                            },\r\n                            // values[key],\r\n                        )\r\n\r\n                        // TODO 清除 错误状态\r\n                        if (\r\n                            values[key].validated === false && (!isWrong(values[key].value || values[key].display))\r\n                        ) {\r\n                            delete values[key].validated;\r\n                            delete oldRow.values[key].validated;\r\n                        }\r\n                    }\r\n\r\n                    // 合并状态等其他属性\r\n                    oldRow = Object.assign({}, oldRow, item || {});\r\n                    // 赋值\r\n                    oldRow.values = values;\r\n                    // for (let key in oldRow) {\r\n                    //     if (isObject(oldRow[key])) {\r\n                    //         oldRow[key] = Object.assign({}, oldRow[key], item[key] || {});\r\n                    //     } else {\r\n                    //         oldRow[key] = item[key];\r\n                    //     }\r\n                    // }\r\n                    let newRow = JSON.parse(JSON.stringify(oldRow));\r\n                    newRows.push(newRow);\r\n                    return newRow;\r\n                });\r\n            } else {\r\n                console.warn(`can't find row data`, rowKey);\r\n            }\r\n        });\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n\r\n        return newRows;\r\n    }\r\n\r\n    /**\r\n     * @description: 移动行\r\n     * @param {type}\r\n     * @return {type}\r\n     */\r\n    moveRow(current, next, shouldForceUpdate = true) {\r\n        let data = this.getStore(\"data\");\r\n\r\n        if (\r\n            isUndefined(current) ||\r\n            isUndefined(next) ||\r\n            current === next ||\r\n            current < 0 ||\r\n            next > data.length\r\n        ) {\r\n            return console.warn(\"invalid index\");\r\n        }\r\n        // 交换数据索引\r\n        let rows = this.getViewData(\"filter\");\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        const start = rows[current];\r\n        const end = rows[next];\r\n\r\n        // 重新计算索引\r\n        data.forEach((row, index) => {\r\n            if (start && start[rowKey] === row[rowKey]) {\r\n                current = index;\r\n            }\r\n            if (end && end[rowKey] === row[rowKey]) {\r\n                next = index;\r\n            }\r\n        });\r\n\r\n        data[next] = start;\r\n        data[current] = end;\r\n\r\n        this.setData({ data, shouldForceUpdate });\r\n    }\r\n\r\n    /**\r\n     * @description: 给行换个索引\r\n     * @param {type}\r\n     * @return {type}\r\n     */\r\n    setRowPosition(indexStart, position, shouldForceUpdate = true) {\r\n        // 交换数据索引\r\n        let rows = this.getViewData(\"filter\");\r\n\r\n        if (\r\n            indexStart < 0 ||\r\n            isUndefined(indexStart) ||\r\n            indexStart > rows.length\r\n        ) {\r\n            return console.warn(\"invalid index\");\r\n        }\r\n\r\n        indexStart = this.getTrueRowIndex({ rowIndex: indexStart }, \"filter\");\r\n\r\n        let data = this.getStore(\"data\");\r\n\r\n        // 更新位置\r\n        if (position === \"up\") {\r\n            let delItem = data.splice(indexStart, 1);\r\n            data.unshift(delItem[0]);\r\n        } else if (position === \"down\") {\r\n            let delItem = data.splice(indexStart, 1);\r\n            data.push(delItem[0]);\r\n        }\r\n\r\n        this.setData({ data, shouldForceUpdate });\r\n    }\r\n\r\n    /**\r\n     * rowKeyValue\r\n     * @description: 是否选中行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    hasSelected(rowKeyValue) {\r\n        // 获取 rowKeyValue\r\n        rowKeyValue = this._getRowKeyValue({ rowKeyValue });\r\n        let selectedIndex = this.getStore([\"selectedIndex\"]);\r\n        return selectedIndex.has(rowKeyValue);\r\n    }\r\n\r\n    /**\r\n     * value 里放的是rowKeyValue\r\n     * @description: 设置选中行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setSelectedIndex(value, pattern = \"add\", shouldForceUpdate = true) {\r\n        let selectedIndex = this.getStore([\"selectedIndex\"]);\r\n        if (pattern === \"clear\") {\r\n            selectedIndex.clear();\r\n            this.setTableProps(\"focusIndex\", -1, false);\r\n        }\r\n\r\n        // 值的转换\r\n        value = isArray(value)\r\n            ? value\r\n            : [isObject(value) ? value : { rowKeyValue: value }];\r\n\r\n        value.forEach(item => {\r\n            let { rowKeyValue, rowIndex, pattern = \"add\" } = item;\r\n\r\n            // 值的转换\r\n            rowKeyValue = this._getRowKeyValue({ rowKeyValue, rowIndex });\r\n\r\n            if (pattern === \"add\") {\r\n                selectedIndex.add(rowKeyValue);\r\n            }\r\n            if (pattern === \"reverse\") {\r\n                selectedIndex.has(rowKeyValue)\r\n                    ? selectedIndex.delete(rowKeyValue)\r\n                    : selectedIndex.add(rowKeyValue);\r\n            }\r\n            if (pattern === \"delete\") {\r\n                selectedIndex.delete(rowKeyValue);\r\n            }\r\n        });\r\n\r\n        this.setStore([\"selectedIndex\"], selectedIndex, shouldForceUpdate);\r\n    }\r\n\r\n    /**\r\n     * rowIndex 是真实的index\r\n     * @description: 删除行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    // @infoLog\r\n    _deleteRow(rowIndex, rowKeyValue, thorough) {\r\n        let data = this.getStore(\"data\"),\r\n            len = data.length;\r\n\r\n        if (rowIndex > len || rowIndex < 0) {\r\n            console.warn(\"rowIndex overflow\");\r\n            return;\r\n        }\r\n\r\n        let delItem = data[rowIndex];\r\n        let status = delItem.status;\r\n\r\n        // status != ROW_STATUS.delete 要剔除 假删除 否则 连续两次假删除 就会真删除\r\n        if (\r\n            thorough ||\r\n            (status != ROW_STATUS.delete &&\r\n                status != ROW_STATUS.origin &&\r\n                status != ROW_STATUS.edit)\r\n        ) {\r\n            // 彻底删除\r\n            delItem = data.splice(rowIndex, 1);\r\n        } else {\r\n            this.setRowProps(\r\n                { rowKeyValue },\r\n                { status: ROW_STATUS.delete },\r\n                false,\r\n            );\r\n        }\r\n\r\n        return delItem;\r\n    }\r\n\r\n    /**\r\n     * rowIndex 可视数据index\r\n     * 增行是否要扩展一个参数 可以插入到某个行之前 ？\r\n     * 可以考虑扩展为 插入行\r\n     * 插入行 没有取到index  不进行插入  增行 没有取到 默认最后\r\n     * @description: 新增行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    // @infoLog\r\n    _insertRow({\r\n        rowValues = {},\r\n        rowIndex,\r\n        shouldForceUpdate = true,\r\n        type = \"insert\",\r\n        isMergeInitValue = true,\r\n        callback,\r\n    }) {\r\n        // 这个方法比较特殊\r\n        !isUndefined(rowIndex) &&\r\n            (rowIndex = this.getTrueRowIndex({ rowIndex }));\r\n\r\n        let data = this.getStore(\"data\"),\r\n            len = data.length,\r\n            initialValue = isMergeInitValue ? this._getColInitialValue() : {};\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        // 合并数据哟  深度合并 一些不规范的值  做下转换\r\n        Object.keys(rowValues).forEach(key => {\r\n            const oldValue = (isObject(rowValues[key]) ? rowValues[key] : {});\r\n            let newValue = {};\r\n            // 清理oldValue里乱七八糟的状态\r\n            !isUndefined(oldValue.display) && (newValue.display = oldValue.display);\r\n            !isUndefined(oldValue.value) && (newValue.value = oldValue.value);\r\n            !isUndefined(oldValue.scale) && (newValue.scale = oldValue.scale);\r\n            !isUndefined(oldValue.isEdit) && (newValue.isEdit = oldValue.isEdit);\r\n            // 清理一下原来行数据里的状态\r\n            initialValue[key] = {\r\n                ...initialValue[key],\r\n                ...newValue,\r\n            };\r\n        });\r\n\r\n        // TODO 对默认值和checkbox_switch勾选框值转化的操作\r\n\r\n        // 插入行 没有取到index  不进行插入  增行 没有取到 默认最后\r\n        if (type === \"insert\" && (isUndefined(rowIndex) || rowIndex == -1)) {\r\n            rowIndex = len;\r\n        }\r\n\r\n        if (type === \"add\" && (isUndefined(rowIndex) || rowIndex == -1)) {\r\n            rowIndex = len;\r\n        }\r\n\r\n        let newRow = {\r\n            [rowKey]: this.generateRowKey(),\r\n            status: ROW_STATUS.add,\r\n            values: initialValue,\r\n        };\r\n\r\n        // 新增行\r\n        data.splice(rowIndex, 0, newRow);\r\n\r\n        shouldForceUpdate && this.forceUpdate(callback);\r\n        return newRow;\r\n    }\r\n\r\n    /**\r\n     * @description: 插入行\r\n     * @param {type}\r\n     * @return {type}\r\n     */\r\n    _insertRows({\r\n        rows = [],\r\n        rowIndex,\r\n        isGenerateRowKey,\r\n        shouldForceUpdate = true,\r\n    }) {\r\n        if (!isArray(rows)) {\r\n            console.warn(\"rows params not array\");\r\n            rows = [rows];\r\n        }\r\n\r\n        // 这个方法比较特殊\r\n        rowIndex && (rowIndex = this.getTrueRowIndex({ rowIndex }));\r\n\r\n        let data = this.getStore(\"data\"),\r\n            len = data.length,\r\n            initialValue = this._getColInitialValue();\r\n\r\n        // 注意插入最后一行index的情况的判断\r\n        // 没有取插到最后\r\n        if (isUndefined(rowIndex) || rowIndex === -1) {\r\n            rowIndex = len;\r\n        }\r\n\r\n        // rowIndex > len ||  // 插入是可以超出界限的\r\n        if (rowIndex > len || rowIndex < 0) {\r\n            console.warn(\"rowIndex overflow\");\r\n            return;\r\n        }\r\n\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        rows = rows.map(row => {\r\n            let rowValues = row.values;\r\n            // 合并数据哟  深度合并 一些不规范的值  做下转换\r\n            Object.keys(rowValues).forEach(key => {\r\n                rowValues[key] = {\r\n                    ...initialValue[key],\r\n                    ...(isObject(rowValues[key]) ? rowValues[key] : {}),\r\n                };\r\n            });\r\n            rowValues = { ...initialValue, ...rowValues }\r\n            // TODO 对默认值和checkbox_switch勾选框值转化的操作\r\n\r\n            // console.log(initialValue);\r\n\r\n            let rowKeyValue = this.generateRowKey();\r\n\r\n            return {\r\n                [rowKey]: isGenerateRowKey\r\n                    ? rowKeyValue\r\n                    : row[rowKey] || rowKeyValue,\r\n                status: ROW_STATUS.add,\r\n                values: JSON.parse(JSON.stringify(rowValues)),\r\n            };\r\n        });\r\n\r\n        // 变换为编辑态\r\n        this.setTableProps(\"status\", \"edit\", false);\r\n\r\n        // 新增行\r\n        data.splice(rowIndex, 0, ...rows);\r\n\r\n        // 设置 旧值\r\n        this.saveRowsOldValue({ rows });\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n\r\n        return rows;\r\n    }\r\n\r\n    /*-------------表格-------------*/\r\n    /**\r\n     * @description: 格式化数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    formatData(data = [], rule) {\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        data = isArray(data) ? data : [data];\r\n        data = data.map(item => {\r\n            item[rowKey] = item[rowKey] || this.generateRowKey();\r\n            item[\"status\"] = item[\"status\"] || ROW_STATUS.origin;\r\n            if (rule === 'clearSelect') {\r\n                delete item[\"selected\"];\r\n            }\r\n            return item;\r\n        });\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * @description: 设置数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setData({ data = [], shouldForceUpdate = true, callback }) {\r\n        let rowKey = this.getTableProps(\"rowKey\"); // rowid\r\n\r\n        let res = isArray(data) ? new TableData(data, rowKey) : this.getData();\r\n        // console.log(res);\r\n        // 格式化data\r\n        this.setStore([\"data\"], res, shouldForceUpdate, callback);\r\n    }\r\n\r\n    /**\r\n     * regexp 可以是方法 也可以是参数\r\n     * @description: 获取数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    // @infoLog\r\n    getData(regexp = []) {\r\n        let data = this.getStore(\"data\");\r\n        // console.log(data);\r\n        // 添加规则什么的  比如删除 比如过滤 TODO 过滤要考虑不能放在status中  这样会影响原来的业务侧的代码\r\n\r\n        data = data.filter(item => {\r\n            if (isFunction(regexp)) {\r\n                return regexp(item, ROW_STATUS);\r\n            }\r\n\r\n            if (regexp.includes(ROW_STATUS.filter)) {\r\n                return !regexp.includes(item.status) && !item.filter;\r\n            }\r\n            return !regexp.includes(item.status);\r\n        });\r\n        return data || [];\r\n    }\r\n\r\n    /**\r\n     * 目前是简单规则 后面可以想个规则解析器\r\n     * @description: 获取当前视图的data\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getViewData(view = \"normal\") {\r\n        let regexp = view;\r\n        if (view === \"normal\") {\r\n            regexp = [ROW_STATUS.filter, ROW_STATUS.delete];\r\n        }\r\n\r\n        if (view === \"filter\") {\r\n            regexp = [ROW_STATUS.delete];\r\n        }\r\n\r\n        if (view === \"all\") {\r\n            regexp = [];\r\n        }\r\n\r\n        if (view == 'invisible') {\r\n            regexp = [ROW_STATUS.filter, ROW_STATUS.origin, ROW_STATUS.edit, ROW_STATUS.add];\r\n        }\r\n\r\n        let data = this.getData(regexp);\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * @description: 获取表格属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getTableProps(key) {\r\n        let props = this.getStore([\"props\", key]);\r\n        // console.log(props);\r\n        return props;\r\n    }\r\n\r\n    /**\r\n     * @description: 设置表格属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setTableProps(key, value, shouldForceUpdate = true, callback) {\r\n        this.setStore([\"props\", key], value, shouldForceUpdate, callback);\r\n    }\r\n\r\n    /*-------------高阶组件-------------*/\r\n\r\n    /**\r\n     * @description: 获取分页信息\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getPageInfo() {\r\n        // console.log(this.getStore(['pageInfo']));\r\n        return this.getStore([\"pageInfo\"]);\r\n    }\r\n\r\n    /**\r\n     * @description: 設置分页信息\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setPageInfo({ shouldForceUpdate = true, pageInfo = {} }) {\r\n        let prevPageInfo = this.getStore([\"pageInfo\"]) || {};\r\n        prevPageInfo = { ...prevPageInfo, ...pageInfo };\r\n        // console.log(prevPageInfo);\r\n        return this.setStore([\"pageInfo\"], prevPageInfo);\r\n    }\r\n\r\n    /**\r\n     * @description: 获取checked信息\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getCheckInfo() {\r\n        let info = this.getStore([\"checkInfo\"]);\r\n        return info || {};\r\n    }\r\n\r\n    /**\r\n     * @description: 设置checked信息\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setCheckInfo({ checkInfo, shouldForceUpdate = true }) {\r\n        this.setStore([\"checkInfo\"], checkInfo, shouldForceUpdate);\r\n    }\r\n\r\n    /**\r\n     * @description: 设置某些行选中状态\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setRowsSelected(\r\n        { rowKeyValues, rowIndexs },\r\n        selected,\r\n        shouldForceUpdate = true,\r\n        { pattern, defaultAll = true, callback } = {},\r\n    ) {\r\n        rowKeyValues = this._getRowKeyValues({\r\n            rowKeyValues,\r\n            rowIndexs,\r\n            defaultAll,\r\n        });\r\n\r\n        let data = this.getViewData(\"filter\");\r\n        // 设置选中行模式\r\n        pattern = pattern || (selected ? \"add\" : \"delete\");\r\n\r\n        let selectedIndex = rowKeyValues.map(rowKeyValue => {\r\n            let row = this.getRows({ rowKeyValues: [rowKeyValue] })[0] || {};\r\n            let values = row.values || row;\r\n            let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n            // 非禁用  模式是新增时  不允许选中  但是允许删除\r\n            let disabled = pattern == \"add\" ? row.disabled : false;\r\n            unSaga && !disabled && this.setRowProps({ rowKeyValue }, { selected }, false);\r\n            return {\r\n                rowKeyValue,\r\n                pattern,\r\n            };\r\n        });\r\n\r\n        let checkInfo = this.getCheckInfo();\r\n        if (data && data.length) {\r\n            checkInfo.indeterminate = data.some(item => {\r\n                let values = item.values || item;\r\n                let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n                // 非禁用  模式是新增时  不允许选中  但是允许删除\r\n                let disabled = pattern == \"add\" ? item.disabled : false;\r\n                return unSaga && !disabled && item.selected;\r\n            });\r\n            checkInfo.checkedAll = data.every(item => {\r\n                let values = item.values || item;\r\n                let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n                // 非禁用  模式是新增时  不允许选中  但是允许删除\r\n                let disabled = pattern == \"add\" ? item.disabled : false;\r\n                return !unSaga || disabled || item.selected;\r\n            });\r\n        } else {\r\n            checkInfo.indeterminate = false;\r\n            checkInfo.checkedAll = false;\r\n        }\r\n        this.setSelectedIndex(selectedIndex || [], \"\", false);\r\n        this.setStore([\"checkInfo\"], checkInfo, shouldForceUpdate, callback);\r\n    }\r\n    /**\r\n     * @description: 选中所有行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setAllRowsSelected(selected, shouldForceUpdate = true, callback) {\r\n        this.setRowsSelected({}, selected, shouldForceUpdate, { defaultAll: true, callback });\r\n    }\r\n    /**\r\n     * @description: 设置某些行选中状态\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setRowsSelectedByIndexs(\r\n        rowIndexs,\r\n        selected,\r\n        shouldForceUpdate = true,\r\n        { pattern, defaultAll = true } = {},\r\n    ) {\r\n        this.setRowsSelected({ rowIndexs }, selected, shouldForceUpdate, {\r\n            pattern,\r\n            defaultAll,\r\n        });\r\n    }\r\n    /**\r\n     * @description: 设置某些行选中状态\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setRowsSelectedByRowKey(\r\n        rowKeyValues,\r\n        selected,\r\n        shouldForceUpdate = true,\r\n        { pattern, defaultAll = true } = {},\r\n    ) {\r\n        this.setRowsSelected({ rowKeyValues }, selected, shouldForceUpdate, {\r\n            pattern,\r\n            defaultAll,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 反选某些行或者所有行\r\n     * @description:\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    reverseRowsSelected(shouldForceUpdate) {\r\n        let data = this.getStore(\"data\");\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        let selectedIndex = [];\r\n        data.forEach(item => {\r\n            let selected = item.selected;\r\n            this.setRowProps(\r\n                { rowKeyValue: item[rowKey] },\r\n                { selected: !selected },\r\n                false,\r\n            );\r\n            !selected &&\r\n                selectedIndex.push({\r\n                    rowKeyValue: item[rowKey],\r\n                    pattern: \"add\",\r\n                });\r\n        });\r\n\r\n        let checkInfo = this.getCheckInfo();\r\n\r\n        checkInfo.indeterminate = data.some(\r\n            item => item.selected && item.status !== ROW_STATUS.delete,\r\n        );\r\n        checkInfo.checkedAll = data.every(item => !!item.selected);\r\n\r\n        this.setSelectedIndex([], \"clear\", false);\r\n        this.setSelectedIndex(selectedIndex || [], \"\", shouldForceUpdate);\r\n    }\r\n\r\n    /*-------------包含业务的方法-------------*/\r\n\r\n    /**\r\n     * @description: 设置行的旧值\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    saveRowOldValue(rowKeyvalue, attrcode, value) {\r\n        this.setCache([\"oldRows\", rowKeyvalue, attrcode], value);\r\n    }\r\n\r\n    /**\r\n     * @description: 获取行的旧值\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getRowOldValue(rowKeyvalue, attrcode) {\r\n        // console.log(this.getCache(['oldRows', rowKeyvalue, attrcode]));\r\n        return this.getCache([\"oldRows\", rowKeyvalue, attrcode]);\r\n    }\r\n\r\n    /**\r\n     * @description: 清楚行的旧值\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    deleteRowOldValue(rowKeyvalue, attrcode) {\r\n        this.setCache([\"oldRows\", rowKeyvalue, attrcode], null);\r\n    }\r\n\r\n    /**\r\n     * @description: 移除没有输入内容，所有的空行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    removeEmptyRows({ data, keys, rule = \"except\", shouldForceUpdate = true }) {\r\n        data = data || this.getStore(\"data\");\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        let newData = [];\r\n\r\n        data.forEach((item, index) => {\r\n            let values = item.values;\r\n            // TODO 这里的一段代码后面可以优化下\r\n            let valueKeys = Object.keys(values).filter(\r\n                item => item != \"numberindex\",\r\n            );\r\n            if (isArray(keys) && (rule == \"except\" || rule == \"include\")) {\r\n                valueKeys = valueKeys.filter(val => {\r\n                    return rule == \"except\"\r\n                        ? keys.every(key => {\r\n                            return val !== key;\r\n                        })\r\n                        : keys.includes(val);\r\n                });\r\n            } else {\r\n                console.warn(\"Invalid params \", rule, keys);\r\n            }\r\n\r\n            let flag = valueKeys.every(one => isWrongFalse(values[one].value));\r\n\r\n            if (flag) {\r\n                // TODO 关闭侧拉\r\n                //  myCardTable.modelIndex === index ? (myCardTable.model = 'close') : '';\r\n\r\n                // TODO 清空\r\n                // delChangedRowsOldValue.call(this, tableId, rows[index].rowid);\r\n\r\n                // 为啥不用index  因为index不一定准确\r\n                let trueIndex = this.getTrueRowIndex({ rowKeyValue: item[rowKey] });\r\n                if (trueIndex === -1) {\r\n                    // 不进行删除\r\n                    newData.push(item);\r\n                    return;\r\n                }\r\n\r\n                // 这个移除会导致索引不正确\r\n                //  this._deleteRow(trueIndex, item[rowKey], true);\r\n            } else {\r\n                newData.push(item);\r\n            }\r\n        });\r\n\r\n        // console.log(newData);\r\n\r\n        // 这种方式 更新了正表\r\n        this.setData({ data: newData, shouldForceUpdate });\r\n    }\r\n\r\n    /**\r\n     * @description: 存旧值方法 为了适配筛选功能将旧值标识, 改成通过rowid, 原来是index\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    saveRowsOldValue({ rows }) {\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        // 过滤假删除数据\r\n        rows.filter(row => row.status != ROW_STATUS.delete).map(item => {\r\n            const { values } = item,\r\n                rowid = item[rowKey];\r\n            for (let keys in values) {\r\n                const OldVal = values[keys] ? values[keys].value : null;\r\n                this.saveRowOldValue(rowid, keys, OldVal);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description: 清理旧值方法 为了适配筛选功能将旧值标识, 改成通过rowid, 原来是index\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    _clearRowsOldValue({ rows }) {\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        // 过滤假删除数据\r\n        rows.map(item => {\r\n            const { values } = item,\r\n                rowid = item[rowKey];\r\n            for (let keys in values) {\r\n                this.saveRowOldValue(rowid, keys, null);\r\n            }\r\n        });\r\n    }\r\n\r\n    // 清空排序\r\n    clearSortStatus({ columns }) {\r\n        columns.forEach(eve => {\r\n            //获取表格列配置\r\n            const { children } = eve;\r\n            if (!isUndefined(children)) {\r\n                //判断和并列的情况\r\n                this.clearSortStatus({ columns: children });\r\n            } else {\r\n                columns.forEach(item => {\r\n                    //保存返回的column状态，没有则终止order状态\r\n                    item.order = 'flatscend';\r\n                    item.orderNum = '';\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description: 设置表格数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setTableData(\r\n        data = {},\r\n        { isCache = true, isTop = false, shouldForceUpdate = true } = {},\r\n    ) {\r\n        if (!data.rows) {\r\n            return console.warn(\"invalid data rows\");\r\n        }\r\n        // 格式化数据\r\n        data.rows = this.formatData(data.rows, 'clearSelect');\r\n\r\n        // 将排序标记清空 \r\n        let columns = this.getArrayMeta();\r\n        if (columns) {\r\n            this.clearSortStatus({ columns: columns });\r\n        }\r\n\r\n        // 改变一下这里的缓存值的位置，这样的话缓存的，只是业务组传给我们的值，而没有我们的其他内部控制字段，这样不会污染我们的数据\r\n        // 每次重新设值内部字段都是取当前表格的，业务组不回给我们传我们内部的控制段，所以这样存储源值更合理\r\n        if (isCache) {\r\n            // 为了让表格可以进行单一的渲染，然后添加了这个判断条件，不进行缓存，只为表格设置数据 zhanghengh\r\n            this.setCache([\"base\"], JSON.parse(JSON.stringify(data)));\r\n            this.setCache([\"all\"], null);\r\n            this.setCache([\"afterDel\"], null);\r\n        }\r\n\r\n        /**\r\n         * 处理筛选状态下的情况\r\n         * 清空的表格筛选标志\r\n         * 清空筛选状态下的表格全数据\r\n         * 退出筛选状态\r\n         */\r\n        // TODO 筛选\r\n        this.setStore('filterReset', true, false, () => {\r\n            this.setStore('filterReset', false, false);\r\n        });\r\n        this.resetFilter(undefined);\r\n        // console.log(this.getStore('filterReset'));\r\n        // 将之前表格上的状态更新到新数据上进行同步\r\n\r\n        // 将多选框的全选恢复成不勾选\r\n        let crossPageSelectIndex = this.getStore([\"checkInfo\", \"crossPageSelectIndex\"]);\r\n        let checkedAllpage = this.getStore([\"checkInfo\", \"checkedAllpage\"]);\r\n        if (crossPageSelectIndex.size === 0) {\r\n            checkedAllpage = false\r\n        }\r\n        let allpks = this.getStore('allpks') || []\r\n        if (data.allpks) {\r\n            allpks = data.allpks;\r\n        } else if (data.rows && data.rows.length == 0) {\r\n            checkedAllpage = false\r\n            crossPageSelectIndex = new Set()\r\n            allpks = []\r\n        }\r\n        this.setStore('allpks', allpks, false);\r\n\r\n        let checkInfo = {\r\n            checkedAll: false, //全选标志\r\n            indeterminate: false, //半选标志\r\n            selectIndex: [], //选中行\r\n            disabledAll: false,\r\n            checkedAllpage,\r\n            crossPageSelectIndex, //跨页选择\r\n        }\r\n        this.setCheckInfo({\r\n            checkInfo,\r\n            shouldForceUpdate: false,\r\n        });\r\n        // 清空之前点击存的数据 TODO\r\n        this.setTableProps(\"currentInfo\", null, false);\r\n        this.setTableProps(\"currentIndex\", -1, false);\r\n        // 将选中行去掉\r\n        // 清理行选中态  删除自动选中到下一个行的逻辑 , 与快捷键的的删除逻辑冲突\r\n        this.setSelectedIndex([], \"clear\", false);\r\n\r\n        // 重新设置数据模版滚动条定位到顶部\r\n        this.setTableProps(\"focusIndex\", isTop ? 0 : -1, false);\r\n\r\n        let oldData = this.getData();\r\n        // 清理旧值\r\n        this._clearRowsOldValue({ rows: oldData });\r\n        // 设置数据\r\n        this.setData({\r\n            data: data.rows,\r\n            shouldForceUpdate,\r\n            callback: () => {\r\n                this.setStore('filterReset', false, false);\r\n                this.setTableProps(\"focusIndex\", -1, false);\r\n            },\r\n        });\r\n        // 设置值之后  存旧值\r\n        let newData = this.getData();\r\n        this.saveRowsOldValue({ rows: newData });\r\n        // 跨页全选\r\n        let config = this.getConfig();\r\n        let { crossPageSelect, pkname } = config;\r\n        if (crossPageSelect && pkname) {\r\n            let { crossPageSelectIndex } = this.getCheckInfo();\r\n            //如果传了pk 并且所传pk和上一次不一样则清空所有跨页全选的数据\r\n            if (data.allpks && data.allpks.length) {\r\n                if (data.allpks.length !== allpks.length || data.allpks[0] !== allpks[0]) {\r\n                    checkedAllpage = false\r\n                    crossPageSelectIndex.clear()\r\n                    checkInfo.checkedAllpage = false\r\n                    checkInfo.crossPageSelectIndex = crossPageSelectIndex\r\n                    this.setCheckInfo({\r\n                        checkInfo,\r\n                        shouldForceUpdate: false,\r\n                    });\r\n                }\r\n            }\r\n            if (checkedAllpage) {\r\n                this._setSelect(undefined, \"allpage\");\r\n            } else {\r\n                let rows = this.getData();\r\n                let rowKey = this.getTableProps(\"rowKey\");\r\n                let rowIdArr = [];\r\n                rows.forEach(row => {\r\n                    if (!row.values[pkname]) {\r\n                        console.error(`行数据中没有pkname为${pkname}的value`);\r\n                        console.log(row);\r\n                        return;\r\n                    }\r\n                    let pk = row.values[pkname].value;\r\n                    if (crossPageSelectIndex.has(pk)) {\r\n                        rowIdArr.push(row[rowKey]);\r\n                    }\r\n                });\r\n                this._setSelect(rowIdArr, \"set\", true);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * @description: 更新表格数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    updateTableData(data, isCache = true, shouldForceUpdate = true) {\r\n        if (!data.rows) {\r\n            return console.warn(\"invalid data rows\");\r\n        }\r\n        // let rowKey = this.getTableProps('rowKey');\r\n        // 格式化数据\r\n        data.rows = this.formatData(data.rows) || [];\r\n        let newRows = this.setRows({ rows: data.rows, shouldForceUpdate: shouldForceUpdate });\r\n\r\n        if (isCache) {\r\n            let allRows = this.getData();\r\n            // 设置缓存\r\n            this.setCache([\"base\"], { rows: JSON.parse(JSON.stringify(allRows)) });\r\n            this.setCache([\"afterDel\"], null);\r\n            this.setCache([\"all\"], null);\r\n        }\r\n\r\n        // 设置旧值\r\n        this.saveRowsOldValue({ rows: newRows });\r\n    }\r\n\r\n    /**\r\n     * 拆分更新方法\r\n     * @param {*} data \r\n     * @param {*} shouldForceUpdate \r\n     * @returns \r\n     */\r\n    updateRows(data, shouldForceUpdate = true) {\r\n        if (!data) {\r\n            return console.warn(\"invalid data params\");\r\n        }\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        if (data.rows) {\r\n            data.rows.map(row => {\r\n                let { values, status } = row;\r\n                let rowKeyValue = row[rowKey];\r\n\r\n                // 格式化数据\r\n                row = (this.formatData([row]) || [row])[0];\r\n\r\n                // 同步 rowKeyValue\r\n                row[rowKey] = rowKeyValue;\r\n\r\n                // 根据 rowKeyValue 来设置\r\n                row.status = isUndefined(status) || status == ROW_STATUS.origin ? ROW_STATUS.edit : status;\r\n\r\n                this.setRows({ rows: [row], shouldForceUpdate: false });\r\n            });\r\n        }\r\n\r\n        if (isArray(data)) {\r\n            data.map(item => {\r\n                let { index, data: row } = item;\r\n                let rowKeyValue = this._getRowKeyValue({ rowIndex: index });\r\n                // 格式化数据\r\n                row = (this.formatData([row]) || [row])[0];\r\n\r\n                // 根据 rowKeyValue 来设置\r\n                row.status = isUndefined(row.status) || row.status == ROW_STATUS.origin ? ROW_STATUS.edit : row.status;\r\n\r\n                // 同步 rowKeyValue\r\n                row[rowKey] = rowKeyValue;\r\n                // 根据 rowKeyValue 来设置\r\n\r\n                this.setRows({ rows: [row], shouldForceUpdate: false });\r\n            });\r\n        }\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * 更新行属性\r\n     * @param {*} data \r\n     * @param {*} shouldForceUpdate \r\n     */\r\n    updateRowsProps(data, props = {}, shouldForceUpdate = true) {\r\n        if (!data) {\r\n            return console.warn(\"invalid data params\");\r\n        }\r\n\r\n        if (data.rows) {\r\n            data.rows.map(row => {\r\n                row = { ...row, ...props };\r\n                this.setRows({ rows: [row], shouldForceUpdate: false });\r\n            });\r\n        }\r\n\r\n        if (isArray(data)) {\r\n            data.map(item => {\r\n                let { data: row } = item;\r\n                row = { ...row, ...props };\r\n                this.setRows({ rows: [row], shouldForceUpdate: false });\r\n            });\r\n        }\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * 更新表格缓存\r\n     * @param {*} data \r\n     * @param {*} shouldForceUpdate \r\n     */\r\n    resetTableCaches(shouldForceUpdate = true) {\r\n        let rows = this.getData();\r\n        this.setCache([\"base\"], { rows: JSON.parse(JSON.stringify(rows)) });\r\n        this.setCache([\"afterDel\"], null);\r\n        this.setCache([\"all\"], null);\r\n        // 设置旧值\r\n        this.saveRowsOldValue({ rows });\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * @description: 根据index 更新表格数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    updateTableDataByIndexs(data, flag, shouldForceUpdate = true) {\r\n        if (!isArray(data)) {\r\n            return console.warn(\"invalid data params\");\r\n        }\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        let rows = this.getData();\r\n\r\n        data.map(item => {\r\n            let { index, data: row } = item;\r\n            let rowKeyValue = this._getRowKeyValue({ rowIndex: index });\r\n            // 格式化数据\r\n            row = (this.formatData([row]) || [row])[0];\r\n\r\n            // 根据 rowKeyValue 来设置\r\n            row.status = isUndefined(row.status) || row.status == ROW_STATUS.origin ? ROW_STATUS.edit : row.status;\r\n\r\n            // 同步 rowKeyValue\r\n            row[rowKey] = rowKeyValue;\r\n            // 根据 rowKeyValue 来设置\r\n\r\n            this.setRows({ rows: [row], shouldForceUpdate: false });\r\n        });\r\n\r\n        // TODO\r\n        // changeCheckboxSwitch\r\n\r\n        // 设置缓存\r\n        if (flag) {\r\n            this.setCache([\"base\"], { rows: JSON.parse(JSON.stringify(rows)) });\r\n            this.setCache([\"afterDel\"], null);\r\n            this.setCache([\"all\"], null);\r\n        }\r\n\r\n        // 设置旧值\r\n        this.saveRowsOldValue({ rows });\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * @description: 根据rowId 更新表格数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    updateTableDataByRowId(data, isCache, shouldForceUpdate = true, isDel = false) {\r\n        if (!data || !isArray(data.rows)) {\r\n            return console.warn(\"invalid data params\");\r\n        }\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        data.rows.map(row => {\r\n            let { values, status } = row;\r\n            let rowKeyValue = row[rowKey];\r\n\r\n            // 格式化数据\r\n            row = (this.formatData([row]) || [row])[0];\r\n\r\n            // 同步 rowKeyValue\r\n            row[rowKey] = rowKeyValue;\r\n\r\n            // 根据 rowKeyValue 来设置\r\n            row.status = isUndefined(status) || status == ROW_STATUS.origin ? ROW_STATUS.edit : status;\r\n\r\n            this.setRows({ rows: [row], shouldForceUpdate: false });\r\n        });\r\n\r\n        // TODO\r\n        // changeCheckboxSwitch\r\n\r\n        let rows = this.getData(isDel ? [ROW_STATUS.delete] : []);\r\n        // 设置缓存\r\n        if (isCache) {\r\n            this.setCache([\"base\"], { rows: JSON.parse(JSON.stringify(rows)) });\r\n            this.setCache([\"afterDel\"], null);\r\n            this.setCache([\"all\"], null);\r\n        }\r\n\r\n        // 设置旧值\r\n        this.saveRowsOldValue({ rows });\r\n        // 设置数据\r\n        this.setData({ data: rows, shouldForceUpdate });\r\n    }\r\n\r\n    /**\r\n     * @description: 设置表格状态\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setTableStatus(status, { shouldForceUpdate = true } = {}) {\r\n        if (![\"edit\", \"browse\"].includes(status)) {\r\n            return console.warn(\r\n                `unknown status: ${status}, status should be 'edit' or 'browse'`,\r\n            );\r\n        }\r\n\r\n        // 切换成浏览态的时候把所有的toast清掉\r\n        if (this.getTableProps(\"status\") !== \"browse\" && status == \"browse\") {\r\n            // clearOneTypeToast('danger'); // TODO\r\n        }\r\n\r\n        //变为浏览台将批改数据清空\r\n        if (status === \"browse\") {\r\n            this.setCache(\"oldBatchData\", null);\r\n        }\r\n\r\n        this.setTableProps(\"status\", status, shouldForceUpdate);\r\n    }\r\n\r\n    /**\r\n     * @description: 获取所有的行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getAllRows(isDeepCopy = true) {\r\n        // 好像不需要 取缓存了\r\n        // let cacheAllData = this.getCache(['all']);\r\n        let rows = this.getData() || [];\r\n        let res = isDeepCopy ? JSON.parse(JSON.stringify(rows)) : rows;\r\n        let noDeleteData = [];\r\n        let deleteData = [];\r\n        res.forEach(row => {\r\n            if (row.status === ROW_STATUS.delete) {\r\n                deleteData.push(row);\r\n            } else {\r\n                noDeleteData.push(row);\r\n            }\r\n        });\r\n        res = noDeleteData.concat(deleteData);\r\n        // rows = (cacheAllData ? cacheAllData.rows : rows) || [];\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * @description: 获取可见的行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getVisibleRows(isDeepCopy = true, isFilter = false) {\r\n        let rows = this.getData(\r\n            isFilter\r\n                ? [ROW_STATUS.delete, ROW_STATUS.filter]\r\n                : [ROW_STATUS.delete],\r\n        ); // 不带过滤的数据\r\n        return isDeepCopy ? JSON.parse(JSON.stringify(rows)) : rows;\r\n    }\r\n\r\n    /**\r\n     * @description: 获取已经变化的数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getChangedRows() {\r\n        let rows = this.getData([ROW_STATUS.origin]);\r\n        return JSON.parse(JSON.stringify(rows));\r\n    }\r\n\r\n    focusItem(rowKeyValue, shouldForceUpdate) {\r\n        let metaItems = this.getArrayMeta();\r\n        for (let i = 0; i < metaItems.length; i++) {\r\n            if (\r\n                !metaItems[i].children && metaItems[i].attrcode != 'numberindex' &&\r\n                (typeof metaItems[i].disabled == 'undefined' || metaItems[i].disabled == false) &&\r\n                (typeof metaItems[i].visible != 'undefined' && metaItems[i].visible == true)\r\n            ) {\r\n                let attrcode = metaItems[i].attrcode;\r\n                // console.log(rowKeyValue, attrcode);\r\n                this.setCellProps(rowKeyValue, attrcode, { isEdit: true, autoFocus: true }, shouldForceUpdate);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: 添加一行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    addTableRow(\r\n        index,\r\n        defaultValue = {},\r\n        shouldForceUpdate = true,\r\n        { autoFocus = false, isAutoAddRow, callback } = {},\r\n    ) {\r\n        // 方法锁  解决点击自动增行 点击增行导致  增两行问题\r\n        if (this.__addRowLock && !isAutoAddRow) {\r\n            return;\r\n        }\r\n        this.__addRowLock = true;\r\n        // setTimeout(() => { this.__addRowLock = false; });\r\n\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        // 控制增行后的行定位\r\n        let unFilterData = this.getViewData(),\r\n            last = unFilterData.length;\r\n        let trueIndex = !isUndefined(index) ? this.getTrueRowIndex({ rowIndex: index }) : last;\r\n        let focusIndex = trueIndex === -1 ? last : trueIndex;\r\n        this.setTableProps(\"focusIndex\", focusIndex === 0 ? focusIndex : focusIndex + 1, false);\r\n\r\n        // 变换为编辑态\r\n        this.setTableProps(\"status\", \"edit\", false);\r\n\r\n        /**\r\n         * 延迟增行执行，解决表格出现纵向滚动条时，在最后一行，录入数据\r\n         * 在点击最后一行其他单元格，进行自动增行后，被点击的单元格没有切换到可编辑状态\r\n         * 导致这个问题的原因是，当初出现纵向滚动条后，设置myCardTable.focusIndex之后，更新表格\r\n         * 导致我们无法点上，我们所点的div，导致对应的onclick事件没有执行\r\n         */\r\n        //  setTimeout(() => {\r\n        if (isPromise(defaultValue) === \"Promise\") {\r\n            defaultValue.then(result => {\r\n                let newRow = this._insertRow({\r\n                    rowValues: result,\r\n                    rowIndex: index,\r\n                    shouldForceUpdate: false,\r\n                    type: \"add\",\r\n                    callback: null,\r\n                });\r\n                // 存旧值\r\n                this.saveRowsOldValue({ rows: [newRow] });\r\n                // 自动聚焦\r\n                autoFocus && this.focusItem(newRow[rowKey], false);\r\n\r\n                shouldForceUpdate && this.forceUpdate(() => {\r\n                    // 控制增行后的行定位\r\n                    this.setTableProps(\"focusIndex\", -1, false);\r\n                    callback && callback(newRow);\r\n                });\r\n\r\n                this.__addRowLock = false;\r\n                return newRow;\r\n            });\r\n        } else {\r\n            // 执行一下方法\r\n            if (isFunction(defaultValue)) {\r\n                defaultValue = defaultValue() || {};\r\n            }\r\n            let newRow = this._insertRow({\r\n                rowValues: defaultValue,\r\n                rowIndex: index,\r\n                shouldForceUpdate: false,\r\n                type: \"add\",\r\n                callback: null,\r\n            });\r\n\r\n            // 存旧值\r\n            this.saveRowsOldValue({ rows: [newRow] });\r\n\r\n            // 自动聚焦\r\n            autoFocus && this.focusItem(newRow[rowKey], false);\r\n\r\n            // 控制表格单元格的渲染顺序 避免不能执行cell里的聚焦操作\r\n            shouldForceUpdate && this.forceUpdate(() => {\r\n                // 控制增行后的行定位\r\n                this.setTableProps(\"focusIndex\", -1, false);\r\n                callback && callback(newRow);\r\n            });\r\n\r\n            this.__addRowLock = false;\r\n            return newRow;\r\n        }\r\n        // }, 27);\r\n    }\r\n\r\n    /**\r\n     * rowKeyValues 即可以是rowids 也可以是rowIndexs\r\n     * @description: 删除表格行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    deleteTableRows(\r\n        { rowKeyValues, rowIndexs },\r\n        thorough,\r\n        shouldForceUpdate = true,\r\n        callback,\r\n    ) {\r\n        // 获取rowKeyValues\r\n        rowKeyValues = this._getRowKeyValues({ rowKeyValues, rowIndexs });\r\n\r\n        let delItems = [];\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        let data = this.getData();\r\n        let currentInfo = this.getTableProps(\"currentInfo\") || {};\r\n        let currentIndex = this.getTableProps(\"currentIndex\");\r\n        let currentRowKeyValue = this.getViewData('filter')[currentIndex];\r\n        let includeCurrentRow = false;\r\n\r\n        rowKeyValues.forEach(item => {\r\n            let trueIndex = this.getTrueRowIndex({ rowKeyValue: item });\r\n\r\n            if (trueIndex === -1) {\r\n                return;\r\n            }\r\n\r\n            // includeCurrentRow\r\n            if (!includeCurrentRow) {\r\n                includeCurrentRow =\r\n                    data[trueIndex][rowKey] === currentInfo[rowKey] || data[trueIndex][rowKey] === currentRowKeyValue;\r\n            }\r\n\r\n            // 新加删除旧值\r\n            this.deleteRowOldValue(data[trueIndex][rowKey], {});\r\n\r\n            //若被删除行已选中,则重置复选框状态\r\n            this.setRowsSelected(\r\n                { rowKeyValues: [item], rowIndexs },\r\n                false,\r\n                false,\r\n            );\r\n\r\n            let delItem = this._deleteRow(trueIndex, item, thorough);\r\n            delItems.push(delItem);\r\n        });\r\n\r\n        // 判断是否彻底删除，不缓存在前端\r\n        thorough &&\r\n            this.setCache([\"afterDel\"], { ...(this.getStore([]) || {}), data });\r\n\r\n        // 清理行选中态  删除自动选中到下一个行的逻辑 , 与快捷键的的删除逻辑冲突\r\n        if (includeCurrentRow) {\r\n            this.setTableProps(\"currentInfo\", null, false);\r\n            this.setTableProps(\"focusIndex\", -1, false);\r\n            this.setTableProps(\"currentIndex\", -1, false);\r\n        }\r\n\r\n        shouldForceUpdate && this.forceUpdate(callback);\r\n        return delItems;\r\n    }\r\n\r\n    /**\r\n     * @description: 设置某一行的值\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setValByKeyAndIndex(\r\n        rowIndex,\r\n        key,\r\n        cellValue = {},\r\n        {\r\n            isSetEdit = true,\r\n            isUpdateBatch = false,\r\n            shouldForceUpdate = true,\r\n        } = {},\r\n    ) {\r\n        let { value, display } = cellValue;\r\n        // let rowIndex = this.getTrueRowIndex({ rowIndex: index });\r\n        let row = this.getRows({ rowIndexs: [rowIndex] })[0];\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        if (!row) {\r\n            return console.warn(\"unknown row data\");\r\n        }\r\n\r\n        row.status == ROW_STATUS.origin &&\r\n            isSetEdit &&\r\n            this.setRowProps({ rowIndex }, { status: ROW_STATUS.edit }, false); //新加了存旧值\r\n\r\n        if (!isUndefined(value)) {\r\n            //将批改数据重新缓存\r\n            this.saveRowOldValue(row[rowKey], key, value);\r\n        }\r\n\r\n        if (isUpdateBatch && (!isUndefined(value) || !isUndefined(display))) {\r\n            this.setCache(\"oldBatchData\", {\r\n                batchChangeIndex: Number(rowIndex),\r\n                batchChangeKey: key,\r\n                batchChangeValue: !isUndefined(value) ? value : null,\r\n                batchChangeDisplay: !isUndefined(display) ? display : null,\r\n            });\r\n        }\r\n\r\n        this.setCellValue({\r\n            rowIndex,\r\n            attrcode: key,\r\n            value: cellValue,\r\n            shouldForceUpdate,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description: 设置某一行的值\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setValByKeyAndRowId(\r\n        rowKeyValue,\r\n        key,\r\n        cellValue = {},\r\n        {\r\n            isSetEdit = true,\r\n            isUpdateBatch = false,\r\n            shouldForceUpdate = true,\r\n        } = {},\r\n    ) {\r\n        let { value, display } = cellValue;\r\n        let row = this.getRows({ rowKeyValues: [rowKeyValue] })[0];\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        isSetEdit && row.status == ROW_STATUS.origin &&\r\n            this.setRowProps(\r\n                { rowKeyValue: rowKeyValue },\r\n                { status: ROW_STATUS.edit },\r\n                false,\r\n            );\r\n\r\n        //新加了存旧值\r\n        if (!isUndefined(value)) {\r\n            this.saveRowOldValue(row[rowKey], key, value);\r\n        }\r\n\r\n        // 将批改数据重新缓存\r\n        if (isUpdateBatch && (!isUndefined(value) || !isUndefined(display))) {\r\n            let viewData = this.getViewData(\"filter\");\r\n            let rowIndex = -1;\r\n            viewData.forEach((row, index) => {\r\n                if (row[rowKey] == rowKeyValue) {\r\n                    rowIndex = index;\r\n                }\r\n            });\r\n\r\n            if (rowIndex !== -1) {\r\n                // 可以考虑放到 cache中\r\n                this.setCache(\"oldBatchData\", {\r\n                    batchChangeIndex: Number(rowIndex),\r\n                    batchChangeKey: key,\r\n                    batchChangeValue: !isUndefined(value) ? value : null,\r\n                    batchChangeDisplay: !isUndefined(display) ? display : null,\r\n                });\r\n            }\r\n        }\r\n\r\n        this.setCellValue({\r\n            rowKeyValue: rowKeyValue,\r\n            attrcode: key,\r\n            value: cellValue,\r\n            shouldForceUpdate,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description: 获取某一行的值\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getValByKeyAndIndex(index, attrcode) {\r\n        // 获取真实的 index\r\n        // let rowIndex = this.getTrueRowIndex({ rowIndex: index });\r\n        let value = this.getCellValue({ rowIndex: index, attrcode });\r\n        (!value || isUndefined(value.value)) &&\r\n            console.warn(\"empty cell value \");\r\n        return JSON.parse(JSON.stringify(value || {}));\r\n    }\r\n\r\n    /**\r\n     * @description: 获取某一行的值\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getValByKeyAndRowKey(rowKeyValue, attrcode) {\r\n        // 获取真实的 index\r\n        let value = this.getCellValue({ rowKeyValue, attrcode });\r\n        (!value || isUndefined(value.value)) &&\r\n            console.warn(\"empty cell value \");\r\n        return JSON.parse(JSON.stringify(value || {}));\r\n    }\r\n\r\n    /**\r\n     * @description: 根据KEYS批量设置行属性\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setCellsProps({\r\n        rowIndexs,\r\n        rowKeyValues,\r\n        attrcodes,\r\n        value = {},\r\n        shouldForceUpdate = true,\r\n    } = {}) {\r\n        // 转换为rowKeyValues\r\n        !rowKeyValues &&\r\n            (rowKeyValues = this._getRowKeyValues({ rowKeyValues, rowIndexs }));\r\n\r\n        rowKeyValues = isArray(rowKeyValues) ? rowKeyValues : [rowKeyValues];\r\n        // 为啥要做转换呢！！！\r\n        value.disabled = isBoolean(value.disabled)\r\n            ? value.disabled\r\n            : value.disabled === \"on\";\r\n\r\n        // 如果没有传入codes 设置整行 TODO ?\r\n        if (!attrcodes) {\r\n            // return this.setRowsProps({\r\n            //     rowIndexs,\r\n            //     rowKeyValues,\r\n            //     attrcodes,\r\n            //     value,\r\n            //     shouldForceUpdate,\r\n            // });\r\n            let data = this.getStore(\"data\");\r\n            rowKeyValues.forEach(rowKeyValue => {\r\n                let row = data.query(rowKeyValue);\r\n                if (isObject(row)) {\r\n                    // Update\r\n                    for (let attrcode in row.values) {\r\n                        this.setCellProps(rowKeyValue, attrcode, value, false);\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            attrcodes = isArray(attrcodes) ? attrcodes : [attrcodes];\r\n            rowKeyValues.forEach(rowKeyValue => {\r\n                attrcodes.forEach(attrcode => {\r\n                    this.setCellProps(rowKeyValue, attrcode, value, false);\r\n                });\r\n            });\r\n        }\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * CardTable 与 EditTable 不太一样\r\n     * 粘贴行 相当于增行\r\n     * @description: pasteRow\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    pasteRow({\r\n        copyRow = {},\r\n        index,\r\n        excludeKeys,\r\n        shouldForceUpdate = true,\r\n    } = {}) {\r\n        let newRow = JSON.parse(JSON.stringify(copyRow));\r\n        let values = newRow.values || {};\r\n\r\n        if (isArray(excludeKeys)) {\r\n            excludeKeys.map(key => {\r\n                values[key] && delete values[key];\r\n            });\r\n        }\r\n\r\n        // 复制拷贝的值\r\n        newRow.values = values;\r\n\r\n        return this._insertRows({\r\n            rows: [newRow],\r\n            rowIndex: index,\r\n            isGenerateRowKey: true,\r\n            shouldForceUpdate,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 返回的数据格式比较特殊\r\n     * @description: 获取选中的行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getSelectedRows(isDeepCopy) {\r\n        let data = this.getStore(\"data\");\r\n        let checkRows = [];\r\n        const config = this.getConfig();\r\n        const { crossPageSelect, pkname } = config;\r\n        //跨页选择\r\n        if (crossPageSelect && pkname) {\r\n            let { crossPageSelectIndex } = this.getStore([\"checkInfo\"]);\r\n            let allpks = this.getStore([\"allpks\"]);\r\n            let alltss = this.getStore([\"alltss\"]);\r\n\r\n            let pageInfo = this.getPageInfo();\r\n            let { pageSize } = pageInfo;\r\n            pageSize = Number(pageSize);\r\n            // pageIndex = Number(pageIndex);\r\n            // let currentPageStartIndex = pageSize * pageIndex - pageSize;\r\n            // let currentPageEndIndex = pageSize * pageIndex - 1;\r\n\r\n            // allpks.forEach((pk, index) => {\r\n            //     let row;\r\n            //     let currentIndex = index - (pageIndex - 1) * pageSize;\r\n            //     if (crossPageSelectIndex.has(pk)) {\r\n            //         if (\r\n            //             index >= currentPageStartIndex &&\r\n            //             index <= currentPageEndIndex\r\n            //         ) {\r\n            //             row = {\r\n            //                 data: data[currentIndex],\r\n            //                 index: currentIndex,\r\n            //                 pageIndex: Math.floor(index / pageSize),\r\n            //             };\r\n            //         } else {\r\n            //             row = {\r\n            //                 data: { pk: allpks[index], ts: alltss[index] },\r\n            //                 index: index % pageSize,\r\n            //                 pageIndex: Math.floor(index / pageSize),\r\n            //             };\r\n            //         }\r\n            //         checkRows.push(row);\r\n            //     }\r\n            // });\r\n\r\n            let currentPagePkArr = []\r\n\r\n            data.forEach(row => {\r\n                let pk = row.values[pkname].value\r\n                currentPagePkArr.push(pk)\r\n            })\r\n\r\n            crossPageSelectIndex.forEach(item => {\r\n                let row\r\n                let rowIndex = currentPagePkArr.indexOf(item)\r\n                if (rowIndex !== -1) {\r\n                    let pkIndex = allpks.indexOf(item)\r\n                    row = {\r\n                        data: data[rowIndex],\r\n                        index: pkIndex % pageSize,\r\n                        pageIndex: Math.floor(pkIndex / pageSize),\r\n                    }\r\n                } else {\r\n                    let pkIndex = allpks.indexOf(item)\r\n                    if (pkIndex !== -1) {\r\n                        row = {\r\n                            data: { pk: allpks[pkIndex], ts: alltss[pkIndex] },\r\n                            index: pkIndex % pageSize,\r\n                            pageIndex: Math.floor(pkIndex / pageSize),\r\n                        }\r\n                    }\r\n                }\r\n                if (row) { checkRows.push(row) }\r\n            });\r\n\r\n            return isDeepCopy\r\n                ? JSON.parse(JSON.stringify(checkRows))\r\n                : checkRows;\r\n        } else {\r\n            // 取当前视图的数据来进行删除 \r\n            let viewData = this.getViewData('normal');\r\n            viewData.map((item, index) => {\r\n                if (item.selected) {\r\n                    checkRows.push({\r\n                        data: item,\r\n                        index,\r\n                    });\r\n                }\r\n            });\r\n\r\n            return isDeepCopy\r\n                ? JSON.parse(JSON.stringify(checkRows))\r\n                : checkRows;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: 获取所有删除了的项\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getAllRowsRemoveKeys(keys) {\r\n        let data = this.getStore(\"data\");\r\n        let [isStr, isArr] = [typeof keys === \"string\", Array.isArray(keys)];\r\n\r\n        if (keys == undefined || isStr || isArr) {\r\n            // 是字符串或者是数组 或者是undefined\r\n            data.map(elem => {\r\n                let values = elem.values;\r\n                for (let key in values) {\r\n                    if (\r\n                        (isStr && key === keys) ||\r\n                        (isArr && keys.includes(key))\r\n                    ) {\r\n                        delete values[key];\r\n                    }\r\n                }\r\n            });\r\n            return data.filter(e => e.status != ROW_STATUS.delete);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * TODO 有些奇怪 共用一套数据 不应该再有模板区分\r\n     * @description: 获取混合了所有页签的 表行的值\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getMixinMetaOfData() {\r\n        let _initValues = this._getColInitialValue();\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        // console.log(_initValues);\r\n\r\n        let data = this.getStore(\"data\");\r\n        let res = data.map(item => {\r\n            item.values = { ...item.values, ..._initValues[item[rowKey]] };\r\n            return item;\r\n        });\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * @description: 获取过滤的行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    _getFilterRows(key, value, langCode) {\r\n        // 不修改原始数据\r\n        let data = JSON.parse(JSON.stringify(this.getStore(\"data\") || []));\r\n        let rows = [];\r\n        if (isString(key)) {\r\n            key = [key];\r\n        }\r\n\r\n        let filterData = this.getViewData(\"filter\");\r\n\r\n        // 先清理 后匹配\r\n        data = data.map(row => {\r\n            if (row.filter) {\r\n                delete row.filter;\r\n                delete row.filterIndex;\r\n            }\r\n            return row;\r\n        });\r\n\r\n        // 没有value\r\n        if (isUndefined(value) || value === \"\") {\r\n            data = data.map((row, index) => {\r\n                row.filter = false;\r\n                row.filterIndex = index;\r\n                return row;\r\n            });\r\n            return {\r\n                // 筛选后数据\r\n                filterRows: data,\r\n                // 更改状态的数据\r\n                allRows: data,\r\n            };\r\n        }\r\n\r\n        //多语适配start\r\n        let metaItems = this.getArrayMeta();\r\n        if (metaItems) {\r\n            metaItems.forEach(item => {\r\n                if (item.itemtype === \"residtxt\") {\r\n                    key = key.map(k => {\r\n                        if (k == item.attrcode) {\r\n                            item.languageMeta.forEach(i => {\r\n                                if (i.languageCode == langCode) {\r\n                                    k = k + i.index;\r\n                                }\r\n                            });\r\n                        }\r\n                        return k;\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        data.filter((row, index) => {\r\n            const { values, status } = row;\r\n            if (status != ROW_STATUS.delete) {\r\n                if (key.length) {\r\n                    row.filter = true;\r\n                    delete row.filterIndex;\r\n                }\r\n                //当key时数组时\r\n                key.forEach(keyItem => {\r\n                    if (values[keyItem]) {\r\n                        if (\r\n                            (values[keyItem].display &&\r\n                                values[keyItem].display.includes(value)) ||\r\n                            (values[keyItem].value &&\r\n                                values[keyItem].value.includes(value))\r\n                        ) {\r\n                            row.filter = false;\r\n                            row.filterIndex = index;\r\n                        }\r\n                    }\r\n                    // 像是处理多语言的代码\r\n                    let newKeyItem = keyItem.slice(0, keyItem.length - 1);\r\n                    if (values[newKeyItem]) {\r\n                        if (\r\n                            (values[newKeyItem].display &&\r\n                                values[newKeyItem].display.includes(value)) ||\r\n                            (values[newKeyItem].value &&\r\n                                values[newKeyItem].value.includes(value))\r\n                        ) {\r\n                            row.filter = false;\r\n                            row.filterIndex = index;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return {\r\n            // 筛选后数据\r\n            filterRows: rows,\r\n            // 更改状态的数据\r\n            allRows: data,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @description: 获取过滤的行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getFilterRows(key, value, langCode) {\r\n        let { filterRows, allRows } = this._getFilterRows(key, value, langCode);\r\n\r\n        return {\r\n            //筛选后数据\r\n            areaType: \"table\",\r\n            rows: filterRows,\r\n            areacode: null,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 重置过滤器\r\n     */\r\n    resetFilter(tableId) {\r\n        tableId = tableId || this.getStore(\"name\");\r\n        if (!tableId) {\r\n            return console.warn('invalid resetFilter tableId note find');\r\n        }\r\n        let arrColumns = this.getArrayMeta(tableId, true);\r\n\r\n        let columnStatus = {};\r\n        // 设置表格筛选图标, 重置时将筛选图标全部清空\r\n        arrColumns.forEach(column => {\r\n            columnStatus[column.attrcode] = { filterStatus: '' };\r\n        });\r\n\r\n        // 设置行状态\r\n        let data = this.getData() || [];\r\n        data.forEach(row => {\r\n            row.filter = false;\r\n            delete row.filterIndex;\r\n        });\r\n\r\n        // 处理已选等逻辑\r\n        let checkInfo = this.getCheckInfo();\r\n        let viewData = this.getViewData();\r\n        if (viewData && viewData.length) {\r\n            checkInfo.indeterminate = viewData.some(item => {\r\n                let values = item.values || item;\r\n                let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n                return unSaga && item.selected;\r\n            });\r\n            checkInfo.checkedAll = viewData.every(item => {\r\n                let values = item.values || item;\r\n                let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n                return !unSaga || item.selected;\r\n            });\r\n        }\r\n        this.setStore([\"checkInfo\"], checkInfo, false);\r\n\r\n        // 更新 所有的更新放到弹窗关闭(onHide)时\r\n        this.setData({ data, shouldForceUpdate: false });\r\n\r\n        // 列状态\r\n        this.setColumn(tableId, columnStatus, false);\r\n    }\r\n\r\n    /**\r\n     * @description: 设置搜索后表格数据的方法\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setFiltrateTableData(key, value, isShowAll, langCode, tableId) {\r\n        // 清空筛选标识, 清空filterAllData\r\n        this.setStore('filterReset', true, false);\r\n        this.resetFilter(tableId);\r\n        let { filterRows, allRows } = this._getFilterRows(key, value, langCode);\r\n        // TODO\r\n        if (isShowAll && filterRows.rows.length === 0) {\r\n            allRows = allRows.map(row => {\r\n                if (row.filter) {\r\n                    delete row.filter;\r\n                    delete row.filterIndex;\r\n                }\r\n                return row;\r\n            });\r\n            // 处理已选等逻辑\r\n            let checkInfo = this.getCheckInfo();\r\n            let viewData = this.getViewData();\r\n            if (viewData && viewData.length) {\r\n                checkInfo.indeterminate = viewData.some(item => {\r\n                    let values = item.values || item;\r\n                    let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n                    let disabled = item.disabled;\r\n                    return unSaga && !disabled && item.selected;\r\n                });\r\n                checkInfo.checkedAll = viewData.every(item => {\r\n                    let values = item.values || item;\r\n                    let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n                    let disabled = item.disabled;\r\n                    return !unSaga || disabled || item.selected;\r\n                });\r\n            }\r\n            this.setStore([\"checkInfo\"], checkInfo, false);\r\n        }\r\n        // 更新表格数据\r\n        this.setData({\r\n            data: allRows,\r\n            callback: () => {\r\n                this.setStore('filterReset', false, false);\r\n            },\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @description: 批改\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    batchChangeTableData() {\r\n        let batchData = this.getCache(\"oldBatchData\");\r\n        let data = this.getData();\r\n        if (\r\n            !isArray(data) ||\r\n            data.length <= 0 ||\r\n            !batchData ||\r\n            !batchData.batchChangeKey\r\n        ) {\r\n            return null;\r\n        }\r\n        //将之前缓存的表格列的key，批量修改成，之前onBulr的那个输入框了的值\r\n        data.forEach(row => {\r\n            const { values, status } = row;\r\n            if (status != ROW_STATUS.delete) {\r\n                row.status == ROW_STATUS.origin &&\r\n                    (row.status = ROW_STATUS.edit);\r\n                //删除的数据不改变\r\n                if (isObject(batchData.batchChangeValue)) {\r\n                    // 对多语文本进进行特殊处理\r\n                    let value = batchData.batchChangeValue;\r\n                    Object.keys(value).forEach(key => {\r\n                        if (values[key]) {\r\n                            values[key] = { ...values[key], ...value[key] };\r\n                        } else {\r\n                            values[key] = value[key];\r\n                        }\r\n                    });\r\n                } else {\r\n                    // Object.keys(values).forEach(item => {\r\n                    //     if (item === batchData.batchChangeKey) {\r\n                    //         values[item].value = batchData.batchChangeValue;\r\n                    //         values[item].display = batchData.batchChangeDisplay;\r\n                    //     }\r\n                    // });\r\n                    // 部分列初始值是空的  没有对应的单元格数据\r\n                    values[batchData.batchChangeKey] =\r\n                        values[batchData.batchChangeKey] || {};\r\n                    values[batchData.batchChangeKey].value =\r\n                        batchData.batchChangeValue;\r\n                    values[batchData.batchChangeKey].display =\r\n                        batchData.batchChangeDisplay;\r\n                }\r\n            }\r\n        });\r\n        this.saveRowsOldValue({ rows: data });\r\n        // this.refresh();\r\n        this.setData({ data });\r\n        return {\r\n            code: batchData.batchChangeKey,\r\n            value: batchData.batchChangeValue,\r\n            display: batchData.batchChangeDisplay,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @description: 插入行\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    insertDataByIndexs(data, flag = true, shouldForceUpdate = true) {\r\n        if (!isArray(data)) {\r\n            return console.warn(\"invalid data params\");\r\n        }\r\n\r\n        // 变换为编辑态\r\n        this.setTableProps(\"status\", \"edit\", false);\r\n\r\n        data.map(item => {\r\n            let { index, data: row } = item;\r\n            this._insertRow({\r\n                rowValues: row.values,\r\n                rowIndex: index,\r\n                type: \"add\",\r\n                shouldForceUpdate: false,\r\n                isMergeInitValue: flag,\r\n            });\r\n        });\r\n\r\n        // TODO\r\n        // changeCheckboxSwitch\r\n\r\n        let rows = this.getData();\r\n\r\n        // 设置旧值\r\n        this.saveRowsOldValue({ rows });\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    /**\r\n     * @description: 更新行的状态\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setRowStatusByIndexs(data, shouldForceUpdate = true) {\r\n        let rows = this.getData();\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n\r\n        data.map(item => {\r\n            let { index, status } = item;\r\n            let trueIndex = this.getTrueRowIndex({ rowIndex: index });\r\n\r\n            const STATUS = Object.values(ROW_STATUS);\r\n            if (!STATUS.includes(String(status))) {\r\n                return console.warn(\"status必须是0到3的数字或者字符串\");\r\n            }\r\n            this.setRowProps({ rowIndex: index }, { status }, false);\r\n            // 要先 处理状态  在重新设置id  目前不支持更新id\r\n            rows[trueIndex][rowKey] = this.generateRowKey();\r\n        });\r\n\r\n        this.setData({ data: rows, shouldForceUpdate });\r\n    }\r\n\r\n    /**\r\n     * @description: 行数据插入到index行后\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    insertRowsAfterIndex(data, index, shouldForceUpdate = true) {\r\n        index = isUndefined(index) ? 0 : ++index;\r\n        this._insertRows({ rows: data, rowIndex: index, isGenerateRowKey: true, shouldForceUpdate });\r\n    }\r\n\r\n    /**\r\n     * rowIndex 可视数据index\r\n     * @description: 设置单元格数据\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    setRowsCellValue({\r\n        rows,\r\n        pattern = \"replace\",\r\n        shouldForceUpdate = true,\r\n    } = {}) {\r\n        if (!rows) {\r\n            return;\r\n        }\r\n\r\n        rows = isArray(rows) ? rows : [rows];\r\n\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        let data = this.getStore(\"data\");\r\n\r\n        rows.forEach(item => {\r\n            let rowKeyValue = item[rowKey],\r\n                row = data.query(rowKeyValue);\r\n\r\n            if (isObject(row)) {\r\n                // TODO Update\r\n                for (let attrcode in item.values) {\r\n                    this.setCellValue({\r\n                        rowKeyValue,\r\n                        attrcode,\r\n                        value: item.values[attrcode],\r\n                        shouldForceUpdate: false,\r\n                    });\r\n                }\r\n                row.status == ROW_STATUS.origin &&\r\n                    (row.status = ROW_STATUS.edit);\r\n            } else {\r\n                console.warn(`can't find row data`, rowKey);\r\n            }\r\n        });\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n\r\n        return rows;\r\n    }\r\n\r\n    // 生成rowid\r\n    generateRowKey = () => {\r\n        return (\r\n            String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12)\r\n        );\r\n    };\r\n\r\n    // 刷新整个绑定对象\r\n    refresh() {\r\n        this.forceUpdate && this.forceUpdate();\r\n    }\r\n\r\n    //liuming 跨页全选的crossPage\r\n    setCrossPage = (rows, pkname, isSelect) => {\r\n        let { crossPageSelectIndex } = this.getCheckInfo();\r\n        let allpks = this.getStore([\"allpks\"]) || []\r\n        let rowsArr = isArray(rows) ? rows : [rows];\r\n        rowsArr.forEach(row => {\r\n            let pk = row.values[pkname].value;\r\n            let values = row.values || row;\r\n            let unSaga = !values['saga_status'] || values['saga_status'].value !== '1';\r\n            let disabled = row.disabled;\r\n            if (isSelect && unSaga && !disabled) {\r\n                crossPageSelectIndex.add(pk);\r\n            } else {\r\n                crossPageSelectIndex.delete(pk);\r\n            }\r\n        });\r\n        let checkedAllpage = allpks.length === crossPageSelectIndex.size\r\n        this.setStore([\"checkInfo\", \"checkedAllpage\"], checkedAllpage, false);\r\n\r\n    };\r\n    //liuming 的勾选逻辑\r\n    _setSelect = (rowIdArr, pattern = \"set\", shouldForceUpdate) => {\r\n        let selectIndex = this.getStore([\"selectedIndex\"]);\r\n        let indeterminate = false,\r\n            checkedAll = false;\r\n        if (pattern === \"set\") {\r\n            selectIndex.clear();\r\n            rowIdArr.forEach(rowId => {\r\n                selectIndex.add(rowId);\r\n            });\r\n        }\r\n        if (pattern === \"clear\") {\r\n            selectIndex.clear();\r\n        }\r\n\r\n        if (pattern === \"all\" || pattern === \"allpage\") {\r\n            this.setRowsSelected({}, true, false);\r\n        } else if (pattern === \"reverse\") {\r\n            this.reverseRowsSelected(false);\r\n        } else if (pattern === \"clear\") {\r\n            this.setRowsSelected({}, false, false);\r\n        } else {\r\n            this.setRowsSelected(\r\n                { rowKeyValues: [...selectIndex] },\r\n                true,\r\n                false,\r\n            );\r\n        }\r\n\r\n        let rows = this.getData();\r\n        let rowsLength = rows.length;\r\n\r\n        let selectSize = selectIndex.size;\r\n        if (selectSize === 0) {\r\n            indeterminate = false;\r\n            checkedAll = false;\r\n        } else if (selectSize > 0 && selectSize < rowsLength) {\r\n            indeterminate = true;\r\n            checkedAll = false;\r\n        } else if (selectSize === rowsLength) {\r\n            indeterminate = false;\r\n            checkedAll = true;\r\n        }\r\n        let checkInfo = this.getStore(\"checkInfo\");\r\n        checkInfo.indeterminate = indeterminate;\r\n        checkInfo.checkedAll = checkedAll;\r\n        checkInfo.selectIndex = selectIndex;\r\n        if (pattern === \"allpage\") {\r\n            checkInfo.checkedAllpage = true;\r\n        } else {\r\n            checkInfo.checkedAllpage = false;\r\n        }\r\n\r\n        this.setStore([\"checkInfo\"], checkInfo, shouldForceUpdate);\r\n    };\r\n\r\n    getConfig = () => {\r\n        return this.getStore([\"config\"]);\r\n    };\r\n    setConfig = config => {\r\n        this.setStore([\"config\"], config, false);\r\n    };\r\n    //更新已有行,并且新增行\r\n    _updateAndAddRows = ({ rows = [], shouldForceUpdate = true }) => {\r\n        console.log('_updateAndAddRows', rows)\r\n        let rowKey = this.getTableProps(\"rowKey\");\r\n        let data = this.getStore(\"data\");\r\n        let lastRowIndex = data.length\r\n        let newRows = [];\r\n        let insertRows = []\r\n        rows.forEach(item => {\r\n            let rowKeyValue = item[rowKey],\r\n                row = data.query(item[rowKey]);\r\n\r\n            if (isObject(row)) {\r\n                data.update(rowKeyValue, oldRow => {\r\n                    //  Update values status ==\r\n                    const values = Object.assign(\r\n                        {},\r\n                        oldRow[\"values\"],\r\n                        item[\"values\"] || {},\r\n                    );\r\n                    // 合并状态等其他属性\r\n                    oldRow = Object.assign({}, oldRow, item || {});\r\n                    // 赋值\r\n                    oldRow.values = values;\r\n                    let newRow = JSON.parse(JSON.stringify(oldRow));\r\n                    newRows.push(newRow);\r\n                    return newRow;\r\n                });\r\n            } else {\r\n                insertRows.push(item)\r\n            }\r\n        });\r\n        this._insertRows({ rows: insertRows, rowIndex: lastRowIndex, isGenerateRowKey: false, shouldForceUpdate: false });\r\n\r\n        shouldForceUpdate && this.forceUpdate();\r\n\r\n        return newRows;\r\n    }\r\n\r\n    getExcelReferAjaxData = (ajaxData, refer, con, queryCondition, TreeRefActionExt, GridRefActionExt, extraCondition, extraAjaxParam) => {\r\n        let query = {};\r\n        if (isFunction(queryCondition)) {\r\n            query = Object.assign(\r\n                {},\r\n                queryCondition(refer.props),\r\n                con,\r\n            ); //先是组件的模板上的condition，被业务组注册进来的condition覆盖\r\n        } else if (isObject(queryCondition)) {\r\n            query = Object.assign({}, queryCondition, con);\r\n        } else if (isUndefined(queryCondition)) {\r\n            query = Object.assign({}, con);\r\n        }\r\n        if (isString(query.TreeRefActionExt)) {\r\n            if (query.TreeRefActionExt) {\r\n                TreeRefActionExt = query.TreeRefActionExt + \",\" + TreeRefActionExt;\r\n            }\r\n        }\r\n        if (isString(query.GridRefActionExt)) {\r\n            if (query.GridRefActionExt) {\r\n                GridRefActionExt = query.GridRefActionExt + \",\" + GridRefActionExt;\r\n            }\r\n        }\r\n        delete query.TreeRefActionExt;\r\n        delete query.GridRefActionExt;\r\n        return {\r\n            pageInfo: {\r\n                pageSize: 50,\r\n                pageIndex: -1,\r\n            },\r\n            keyword: \"\",\r\n            pid: \"\",\r\n            defineItems: [],\r\n            queryCondition: {\r\n                batchQueryByName: JSON.stringify({ names: ajaxData }),\r\n                TreeRefActionExt,\r\n                GridRefActionExt,\r\n                ...extraCondition,\r\n                ...query,\r\n            },\r\n            ...extraAjaxParam,\r\n        }\r\n    }\r\n    //多个querycondition的参照过滤\r\n    sendExcelReferMergeAjax = (reqData, otherParams) => {\r\n        return new Promise((resolve, reject) => {\r\n            ajax({\r\n                url: '/nccloud/platform/pub/mergerequest.do',\r\n                data: reqData,\r\n                success: res => {\r\n                    let param = { res, ...otherParams }\r\n                    let data = this.excelReferMergeAjaxSuccess(param)\r\n                    resolve(data)\r\n                },\r\n                error: error => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                },\r\n            })\r\n        })\r\n    }\r\n    //一个querycondition的参照过滤\r\n    sendExcelReferNomalAjax = (ajaxdata, url, otherParams) => {\r\n        return new Promise((resolve, reject) => {\r\n            ajax({\r\n                url,\r\n                async: false,\r\n                data: { ...ajaxdata },\r\n                success: res => {\r\n                    let param = { res, ...otherParams }\r\n                    let data = this.excelReferNomalAjaxSuccess(param)\r\n                    resolve(data)\r\n                },\r\n                error: error => {\r\n                    console.error(error);\r\n                    reject(error);\r\n                },\r\n            });\r\n        });\r\n    }\r\n\r\n    excelReferMergeAjaxSuccess = param => {\r\n        let { res, queryValue, attrcode, fieldValued, fieldDisplayed, indexs } = param\r\n        if (res.data) {\r\n            let newChangedRows = [];\r\n            let ajaxValues = [];\r\n            Object.keys(res.data).forEach(index => {\r\n                let resValue = res.data[index]\r\n                let row = queryValue[index]\r\n                if (resValue.rows.length) {\r\n                    let cell = row.values[attrcode].value;\r\n                    let finalVal = \"\";\r\n                    let finalDis = \"\";\r\n                    let flag = false;\r\n                    for (let i = 0; i < resValue.rows.length; i++) {\r\n                        let item = resValue.rows[i]\r\n                        //助记码\r\n                        let rememberCode = item.values && item.values.materialmnecode && item.values.materialmnecode.value;\r\n                        if (cell == item['refcode'] || cell == item['refname'] || cell == rememberCode) {\r\n                            finalVal += item[fieldValued];\r\n                            finalDis += item[fieldDisplayed];\r\n                            flag = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    let initVal = this.getRowOldValue(\r\n                        row.rowid,\r\n                        attrcode,\r\n                    );\r\n                    let _getValue = function (init) {\r\n                        return isObject(init)\r\n                            ? init.refpk\r\n                            : init;\r\n                    };\r\n                    let isRefpk = _getValue(initVal);\r\n                    if (flag) {\r\n                        let theValue = {\r\n                            display: finalDis,\r\n                            value: finalVal,\r\n                        };\r\n                        newChangedRows.push({\r\n                            rowid: row.rowid,\r\n                            newvalue: { value: theValue.value || \"\" },\r\n                            oldvalue: { value: isRefpk || \"\" },\r\n                        });\r\n                        //把最终值赋给queryvalue\r\n                        row.values[attrcode].value = finalVal;\r\n                        row.values[attrcode].display = finalDis;\r\n                        ajaxValues.push(row);\r\n                    } else {\r\n                        let initVal = this.getRowOldValue(\r\n                            row.rowid,\r\n                            attrcode,\r\n                        );\r\n                        let _getValue = function (init) {\r\n                            return isObject(init)\r\n                                ? init.refpk\r\n                                : init;\r\n                        };\r\n                        let isRefpk = _getValue(initVal);\r\n                        newChangedRows.push({\r\n                            rowid: row.rowid,\r\n                            newvalue: { value: \"\" },\r\n                            oldvalue: { value: isRefpk || \"\" },\r\n                        });\r\n                        row.values[attrcode].value = \"\";\r\n                        row.values[attrcode].display = \"\";\r\n                        ajaxValues.push(row);\r\n                    }\r\n                } else {\r\n                    let initVal = this.getRowOldValue(\r\n                        row.rowid,\r\n                        attrcode,\r\n                    );\r\n                    let _getValue = function (init) {\r\n                        return isObject(init)\r\n                            ? init.refpk\r\n                            : init;\r\n                    };\r\n                    let isRefpk = _getValue(initVal);\r\n                    newChangedRows.push({\r\n                        rowid: row.rowid,\r\n                        newvalue: { value: \"\" },\r\n                        oldvalue: { value: isRefpk || \"\" },\r\n                    });\r\n                    row.values[attrcode].value = \"\";\r\n                    row.values[attrcode].display = \"\";\r\n                    ajaxValues.push(row);\r\n                }\r\n            })\r\n            console.log(123, 'excelReferMergeAjaxSuccess', res, ajaxValues)\r\n            return {\r\n                indexs: indexs,\r\n                finalValues: ajaxValues,\r\n                changedrows: newChangedRows,\r\n            };\r\n        }\r\n    }\r\n\r\n    excelReferNomalAjaxSuccess = param => {\r\n        let { res, queryValue, attrcode, fieldValued, fieldDisplayed, indexs } = param\r\n        if (res.data.rows.length) {\r\n\r\n            let newChangedRows = [];\r\n            let ajaxValues = [];\r\n\r\n            queryValue.map(row => {\r\n                let cell = row.values[attrcode].value;\r\n                let finalVal = \"\";\r\n                let finalDis = \"\";\r\n                let flag = false;\r\n                for (let i = 0; i < res.data.rows.length; i++) {\r\n                    let item = res.data.rows[i]\r\n                    //助记码\r\n                    let rememberCode = item.values && item.values.materialmnecode && item.values.materialmnecode.value;\r\n                    if (cell == item['refcode'] || cell == item['refname'] || cell == rememberCode) {\r\n                        finalVal += item[fieldValued];\r\n                        finalDis += item[fieldDisplayed];\r\n                        flag = true;\r\n                        break;\r\n                    }\r\n                }\r\n                let initVal = this.getRowOldValue(\r\n                    row.rowid,\r\n                    attrcode,\r\n                );\r\n                let _getValue = function (init) {\r\n                    return isObject(init)\r\n                        ? init.refpk\r\n                        : init;\r\n                };\r\n                let isRefpk = _getValue(initVal);\r\n                if (flag) {\r\n                    let theValue = {\r\n                        display: finalDis,\r\n                        value: finalVal,\r\n                    };\r\n                    newChangedRows.push({\r\n                        rowid: row.rowid,\r\n                        newvalue: { value: theValue.value || \"\" },\r\n                        oldvalue: { value: isRefpk || \"\" },\r\n                    });\r\n                    //把最终值赋给queryvalue\r\n                    row.values[attrcode].value = finalVal;\r\n                    row.values[attrcode].display = finalDis;\r\n                    ajaxValues.push(row);\r\n                } else {\r\n                    newChangedRows.push({\r\n                        rowid: row.rowid,\r\n                        newvalue: { value: \"\" },\r\n                        oldvalue: { value: isRefpk || \"\" },\r\n                    });\r\n                    row.values[attrcode].value = \"\";\r\n                    row.values[attrcode].display = \"\";\r\n                    ajaxValues.push(row);\r\n                    console.error(\r\n                        cell,\r\n                        \"参照过滤没有匹配数据\",\r\n                    );\r\n                }\r\n            });\r\n            console.log(4561, 'excelReferNomalAjaxSuccess', res, ajaxValues, newChangedRows)\r\n            return {\r\n                indexs,\r\n                finalValues: ajaxValues,\r\n                changedrows: newChangedRows,\r\n            };\r\n        } else {\r\n            let newChangedRows = [];\r\n            let ajaxValues = [];\r\n\r\n            queryValue.map(row => {\r\n                let initVal = this.getRowOldValue(\r\n                    row.rowid,\r\n                    attrcode,\r\n                );\r\n                let _getValue = function (init) {\r\n                    return isObject(init)\r\n                        ? init.refpk\r\n                        : init;\r\n                };\r\n                let isRefpk = _getValue(initVal);\r\n                newChangedRows.push({\r\n                    rowid: row.rowid,\r\n                    newvalue: { value: \"\" },\r\n                    oldvalue: { value: isRefpk || \"\" },\r\n                });\r\n                row.values[attrcode].value = \"\";\r\n                row.values[attrcode].display = \"\";\r\n                ajaxValues.push(row);\r\n            });\r\n            console.error(\r\n                \"参照过滤后返回的数组是空数组，没有查询到\",\r\n            );\r\n            console.log(4562, 'excelReferNomalAjaxSuccess', res, ajaxValues, newChangedRows)\r\n            return {\r\n                indexs,\r\n                finalValues: ajaxValues,\r\n                changedrows: newChangedRows,\r\n            };\r\n        }\r\n    }\r\n\r\n    // excel\r\n    updateAfterBatchChange = (pageScope, param) => {\r\n        let {\r\n            areaCode,\r\n            column,\r\n            indexs,\r\n            queryValue,\r\n            changedrows,\r\n            pasteData,\r\n            queryCondition: customQueryCondition,\r\n            isManyCondition,\r\n            extraAjaxParam = {},\r\n        } = param;\r\n        // console.log('updateafterbatchchange param', param)\r\n        let {\r\n            attrcode,\r\n            itemtype,\r\n            editAfterFlag,\r\n            refcode,\r\n            fieldDisplayed = \"refname\",\r\n            fieldValued = \"refpk\",\r\n            queryCondition,\r\n            pk_defdoclist, dataPowerOperationCode, isDataPowerEnable,\r\n            loadSelectedData, //参照需要的属性\r\n        } = column;\r\n\r\n        if (itemtype === \"refer\") {\r\n            if (/.js/.test(refcode)) {\r\n                refcode = refcode.replace(\".js\", \"\");\r\n            }\r\n            if (!refcode || !window[refcode]) {\r\n                console.error(`window中没有refcode:${refcode}`);\r\n            }\r\n\r\n            let refer = window[refcode].default();\r\n            let url = refer.props.queryGridUrl || refer.props.queryTreeUrl;\r\n            let referProps = refer.props\r\n            let { checkStrictly } = referProps\r\n            if (checkStrictly === false) {\r\n                //摘要走这里\r\n                return new Promise(resolve => {\r\n                    console.error('非严格参照，比如摘要')\r\n                    let newChangedRows = [];\r\n                    queryValue.forEach(row => {\r\n                        let initVal = this.getRowOldValue(\r\n                            row.rowid,\r\n                            attrcode,\r\n                        );\r\n                        let _getValue = function (init) {\r\n                            return isObject(init)\r\n                                ? init.refpk\r\n                                : init;\r\n                        };\r\n                        //摘要这样的参照 value和display都一样\r\n                        let isRefpk = _getValue(initVal);\r\n                        let theValue = {\r\n                            display: row.values[attrcode].value,\r\n                            value: row.values[attrcode].value,\r\n                        };\r\n                        row.values[attrcode].display = row.values[attrcode].value\r\n                        newChangedRows.push({\r\n                            rowid: row.rowid,\r\n                            newvalue: { value: theValue.value || \"\" },\r\n                            oldvalue: { value: isRefpk || \"\" },\r\n                        });\r\n                    })\r\n                    this._updateAndAddRows({ rows: queryValue }); //给表格赋值\r\n                    resolve({\r\n                        props: pageScope,\r\n                        indexs,\r\n                        key: attrcode,\r\n                        changedrows: newChangedRows,\r\n                    });\r\n                })\r\n            }\r\n            let TreeRefActionExt =\r\n                \"nccloud.web.uap.refer.BatchQueryByNameSqlBuilder\";\r\n            let GridRefActionExt =\r\n                \"nccloud.web.uap.refer.BatchQueryByNameSqlBuilder\";\r\n\r\n            // 模板上会返回下面几个属性\r\n            let extraCondition = {}\r\n            pk_defdoclist !== undefined && (extraCondition.pk_defdoclist = pk_defdoclist);\r\n            dataPowerOperationCode !== undefined && (extraCondition.DataPowerOperationCode = dataPowerOperationCode);\r\n            isDataPowerEnable !== undefined && (extraCondition.isDataPowerEnable = isDataPowerEnable);\r\n            loadSelectedData && (extraCondition.loadSelectedData = true);\r\n\r\n            let referFilter\r\n            let otherParams = { queryValue, attrcode, fieldValued, fieldDisplayed, indexs }\r\n            if (isManyCondition) {\r\n                console.warn('manycondition')\r\n                let mergeAjaxData = []\r\n                queryValue.forEach((row, index) => {\r\n                    let ajaxData = [row.values[attrcode].value]\r\n                    let con = row.queryCondition\r\n                    let datajson = this.getExcelReferAjaxData(ajaxData, refer, con, queryCondition, TreeRefActionExt, GridRefActionExt, extraCondition, extraAjaxParam)\r\n                    let data = {\r\n                        rqUrl: url,\r\n                        rqJson: JSON.stringify(datajson),\r\n                        rqCode: String(index),\r\n                    }\r\n                    mergeAjaxData.push(data)\r\n                })\r\n                referFilter = this.sendExcelReferMergeAjax(mergeAjaxData, otherParams)\r\n            } else {\r\n                let ajaxData = pasteData\r\n                let con = customQueryCondition\r\n                let data = this.getExcelReferAjaxData(ajaxData, refer, con, queryCondition, TreeRefActionExt, GridRefActionExt, extraCondition, extraAjaxParam)\r\n                referFilter = this.sendExcelReferNomalAjax(data, url, otherParams)\r\n            }\r\n\r\n            return referFilter.then(res => {\r\n                let changedrows = res.changedrows\r\n                let finalValues = res.finalValues\r\n                let indexs = res.indexs\r\n                if (editAfterFlag) {\r\n                    console.log('参照关联项')\r\n                    pageScope.handleRelationItems({\r\n                        type: \"table\",\r\n                        areaCode: areaCode,\r\n                        key: attrcode,\r\n                        changedrows,\r\n                        rows: finalValues,\r\n                    })\r\n                } else {\r\n                    console.log('无关联项')\r\n                    this._updateAndAddRows({ rows: finalValues }); //给表格赋值\r\n                }\r\n                return {\r\n                    props: pageScope,\r\n                    key: attrcode,\r\n                    changedrows,\r\n                    indexs,\r\n                };\r\n            });\r\n        } else {\r\n            //除了參照以外类型的编辑关联项的处理\r\n            if (editAfterFlag) {\r\n                return new Promise(resolve => {\r\n                    pageScope.handleRelationItems({\r\n                        type: \"table\",\r\n                        areaCode: areaCode,\r\n                        key: attrcode,\r\n                        changedrows,\r\n                        isMul: true,\r\n                        rows: queryValue,\r\n                    });\r\n                    resolve({\r\n                        props: pageScope,\r\n                        changedrows,\r\n                        key: attrcode,\r\n                        indexs,\r\n                    });\r\n                });\r\n            } else {\r\n                return new Promise(resolve => {\r\n                    console.log(123);\r\n                    console.log(queryValue);\r\n                    this._updateAndAddRows({ rows: queryValue }); //给表格赋值\r\n                    resolve({\r\n                        props: pageScope,\r\n                        changedrows,\r\n                        key: attrcode,\r\n                        indexs,\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    anoterTable = () => {\r\n        let key = this.getStore([\"key\"]);\r\n        this.setStore('key', key + 1)\r\n    }\r\n    /**\r\n     * 加上bind的意思是可以独立调用\r\n     * @description: 钩子\r\n     * @param {type}\r\n     * @return:\r\n     */\r\n    getTableHooks = () => {\r\n        // console.log('当前的对象', this);\r\n\r\n        // 这样处理的一下 才能报错  方法内部的this 永远指向 实例  否则会指向下面的 {} 对象\r\n        this.getMeta = this.getMeta.bind(this);\r\n        this.setMeta = this.setMeta.bind(this);\r\n\r\n        // return this;\r\n        return {\r\n            // 这个是给公共层提供 组件在使用baseComponent 是可以正常运行\r\n            setRef: this.setRef,\r\n            getRef: this.getRef,\r\n            removeRef: this.removeRef,\r\n\r\n            // 刷新 更新\r\n            refresh: this.refresh,\r\n            //更新table的key（给业务组刷新table使用）\r\n            anoterTable: this.anoterTable,\r\n            // 按路径索引 给内部使用\r\n            getStore: this.getStore.bind(this),\r\n            setStore: this.setStore.bind(this),\r\n\r\n            /*-------------------上面的部分------------------*/\r\n\r\n            //模板\r\n            getMeta: this.getMeta.bind(this),\r\n            setMeta: this.setMeta.bind(this),\r\n            getViewMeta: this.getViewMeta.bind(this),\r\n            getArrayMeta: this.getArrayMeta.bind(this),\r\n            getColumn: this.getColumn.bind(this),\r\n            setColumn: this.setColumn.bind(this),\r\n            // 也可以考虑加两个批操作\r\n\r\n            // 缓存\r\n            getCache: this.getCache.bind(this),\r\n            setCache: this.setCache.bind(this),\r\n\r\n            // 行\r\n            getTrueRowIndex: this.getTrueRowIndex.bind(this),\r\n            getRows: this.getRows.bind(this),\r\n            setRows: this.setRows.bind(this),\r\n            setRowProps: this.setRowProps.bind(this),\r\n            getRowProps: this.getRowProps.bind(this),\r\n            setRowsProps: this.setRowsProps.bind(this),\r\n            setRowsCellPropsByKey: this.setRowsCellPropsByKey.bind(this),\r\n            setRowsCellPropsByIndex: this.setRowsCellPropsByIndex.bind(this),\r\n            insertRowsAfterIndex: this.insertRowsAfterIndex.bind(this),\r\n            moveRow: this.moveRow.bind(this),\r\n\r\n            // 这些方法  可以考虑去除了 用getRows + filter 或者 getViewData + filter 实现\r\n\r\n            removeEmptyRows: this.removeEmptyRows.bind(this),\r\n            hasSelected: this.hasSelected.bind(this),\r\n            setSelectedIndex: this.setSelectedIndex.bind(this),\r\n\r\n            // 单元格\r\n            getCellProps: this.getCellProps.bind(this),\r\n            setCellProps: this.setCellProps.bind(this),\r\n            setCellValue: this.setCellValue.bind(this),\r\n            getCellValue: this.getCellValue.bind(this),\r\n            setCellsProps: this.setCellsProps.bind(this),\r\n\r\n            // 不可取两个批操作 getCells  setCells  参数为二维数组\r\n\r\n            // 表格\r\n            formatData: this.formatData.bind(this),\r\n            getTableProps: this.getTableProps.bind(this),\r\n            setTableProps: this.setTableProps.bind(this),\r\n            setData: this.setData.bind(this),\r\n            getData: this.getData.bind(this),\r\n            getViewData: this.getViewData.bind(this),\r\n\r\n            // 业务\r\n            setRowPosition: this.setRowPosition.bind(this),\r\n            saveRowOldValue: this.saveRowOldValue.bind(this),\r\n            getRowOldValue: this.getRowOldValue.bind(this),\r\n            deleteRowOldValue: this.deleteRowOldValue.bind(this),\r\n            saveRowsOldValue: this.saveRowsOldValue.bind(this),\r\n            clearRowsOldValue: this._clearRowsOldValue.bind(this),\r\n            getAllRows: this.getAllRows.bind(this),\r\n            getVisibleRows: this.getVisibleRows.bind(this),\r\n            getChangedRows: this.getChangedRows.bind(this),\r\n            addTableRow: this.addTableRow.bind(this),\r\n            deleteTableRows: this.deleteTableRows.bind(this),\r\n            setValByKeyAndIndex: this.setValByKeyAndIndex.bind(this),\r\n            setValByKeyAndRowId: this.setValByKeyAndRowId.bind(this),\r\n            updateTableData: this.updateTableData.bind(this),\r\n            updateTableDataByIndexs: this.updateTableDataByIndexs.bind(this),\r\n            updateTableDataByRowId: this.updateTableDataByRowId.bind(this),\r\n            setTableData: this.setTableData.bind(this),\r\n            setTableStatus: this.setTableStatus.bind(this),\r\n            getValByKeyAndIndex: this.getValByKeyAndIndex.bind(this),\r\n            getValByKeyAndRowKey: this.getValByKeyAndRowKey.bind(this),\r\n            pasteRow: this.pasteRow.bind(this),\r\n\r\n            getSelectedRows: this.getSelectedRows.bind(this),\r\n            setRowsSelected: this.setRowsSelected.bind(this),\r\n            setRowsSelectedByIndexs: this.setRowsSelectedByIndexs.bind(this),\r\n            setRowsSelectedByRowKey: this.setRowsSelectedByRowKey.bind(this),\r\n            setAllRowsSelected: this.setAllRowsSelected.bind(this),\r\n            reverseRowsSelected: this.reverseRowsSelected.bind(this),\r\n\r\n            getAllRowsRemoveKeys: this.getAllRowsRemoveKeys.bind(this),\r\n            getFilterRows: this.getFilterRows.bind(this),\r\n            setFiltrateTableData: this.setFiltrateTableData.bind(this),\r\n            batchChangeTableData: this.batchChangeTableData.bind(this),\r\n            insertDataByIndexs: this.insertDataByIndexs.bind(this),\r\n            setRowStatusByIndexs: this.setRowStatusByIndexs.bind(this),\r\n            setRowsCellValue: this.setRowsCellValue.bind(this),\r\n            updateRows: this.updateRows.bind(this),\r\n            updateRowsProps: this.updateRowsProps.bind(this),\r\n            resetTableCaches: this.resetTableCaches.bind(this),\r\n\r\n            // 高阶组件\r\n            getCheckInfo: this.getCheckInfo.bind(this),\r\n            setCheckInfo: this.setCheckInfo.bind(this),\r\n            // 聚焦\r\n            focusItem: this.focusItem.bind(this),\r\n\r\n            // 工具\r\n            generateRowKey: this.generateRowKey,\r\n            //liuming 跨页选择\r\n            setCrossPage: this.setCrossPage,\r\n            getConfig: this.getConfig,\r\n            setConfig: this.setConfig,\r\n            _setSelect: this._setSelect,\r\n            _updateAndAddRows: this._updateAndAddRows,\r\n            //liuming excel\r\n            updateAfterBatchChange: this.updateAfterBatchChange,\r\n        };\r\n    };\r\n}\r\n","import { PubSub } from '@platform/api';\r\nimport ReactDOM from 'react-dom';\r\nimport { keyByModuleId } from '../WithKeyboardChange/createKeyMap';\r\n\r\n/**\r\n * @desc 根据不同的formItem类型获取可聚焦的input元素\r\n * @types {\r\n *     1: refer,\r\n *     2: input, select, timepicker, dateTimePicker, datePicker, number,\r\n *     3: textarea\r\n * }\r\n * @matchItemFocus{\r\n *     refer: func\r\n * }\r\n */\r\nlet matchItemFocus = {\r\n    refer: setReferItemFocus,\r\n    input: setNormalItemFocus,\r\n    textarea: setTextAreaFocus,\r\n    select: setSelectItemFocus,\r\n    switch: setSwitchItemFocus,\r\n    switch_browse: setSwitchItemFocus,\r\n    normal: setNormalItemFocus,\r\n};\r\nfunction setReferItemFocus(selector) {\r\n    // let dom = ReactDOM.findDOMNode(component);\r\n    let dom = selector && document.querySelector(selector);\r\n    let inputEl = dom && dom.querySelector(\"input[tabindex='0']\");\r\n    let spanEl = dom && dom.querySelector(\"span[tabindex='0']\");\r\n\r\n    if (inputEl) {\r\n        //元素存在就让它聚焦\r\n        inputEl.focus();\r\n        dom = null;\r\n    } else if (spanEl) {\r\n        spanEl.focus();\r\n        dom = null;\r\n    } else {\r\n        dom && dom.addEventListener(\r\n            'DOMSubtreeModified',\r\n            //autoFocusInTricky.bind(null, dom)\r\n            function wrap(e) {\r\n                autoFocusInTricky(dom, wrap, e);\r\n            },\r\n        );\r\n    }\r\n    // dom = null;\r\n    inputEl = null;\r\n    spanEl = null\r\n}\r\n\r\n/**\r\n * todo: 由于refer组件是异步加载，input获取焦点时无法得到dom元素，因此在这儿监听dom更改事件, 希望在refer内部触发一个告诉外部，组件一渲染完成\r\n */\r\n\r\nfunction autoFocusInTricky(dom, fn, e) {\r\n    let inputEl = e.target.querySelector(\"input[tabindex='0']\");\r\n    // inputEl = null\r\n    if (inputEl) {\r\n        setTimeout(() => {\r\n            inputEl.focus();\r\n            dom && dom.removeEventListener('DOMSubtreeModified', fn);\r\n            inputEl = null;\r\n            dom = null;\r\n        });\r\n    }\r\n}\r\n\r\nfunction setNormalItemFocus(selector) {\r\n    // let dom = ReactDOM.findDOMNode(component);\r\n    let dom = selector && document.querySelector(selector);\r\n    let inputEl = dom && dom.querySelector('input');\r\n\r\n    inputEl && inputEl.focus();\r\n    dom = null;\r\n    inputEl = null;\r\n}\r\n\r\nfunction setTextAreaFocus(selector) {\r\n    // let dom = ReactDOM.findDOMNode(component);\r\n    let dom = selector && document.querySelector(selector);\r\n    let textEl = dom && dom.querySelector('textarea');\r\n\r\n    textEl && textEl.focus();\r\n    dom = null;\r\n    textEl = null;\r\n}\r\n\r\nfunction setSelectItemFocus(selector) {\r\n    // let dom = ReactDOM.findDOMNode(component);\r\n    let dom = selector && document.querySelector(selector);\r\n    let focusDom = dom && dom.querySelector('.u-select-selection[tabindex]') || dom.querySelector('input');\r\n\r\n    focusDom && focusDom.focus();\r\n    dom = null;\r\n    focusDom = null;\r\n}\r\n\r\nfunction setSwitchItemFocus(selector) {\r\n    // let dom = ReactDOM.findDOMNode(component);\r\n    let dom = selector && document.querySelector(selector);\r\n    let switchEl = dom && dom.querySelector('span[tabindex]');\r\n\r\n    switchEl && switchEl.focus();\r\n    dom = null;\r\n    switchEl = null;\r\n}\r\n\r\n//标签切换时首个自动聚焦\r\nfunction cellFocusAfterTabChange(item) {\r\n    if (keyByModuleId[item]) {\r\n        let focusItem = keyByModuleId[item].firstItem;\r\n\r\n        let moduleId = keyByModuleId[item] && keyByModuleId[item]['parent']\r\n            ? keyByModuleId[item]['parent']\r\n            : item;\r\n        focusItem && PubSub.publish('autoFocus', {\r\n            data: focusItem,\r\n            force: true,\r\n            moduleId,\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    matchItemFocus,\r\n    cellFocusAfterTabChange,\r\n};\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./es/react-hotkeys.production.min.js');\n} else {\n  module.exports = require('./es/index.js');\n}\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * @desc 表格可编辑的状态下checkbox类型的单元格没有浏览态与编辑态之分, 因此需要在checkbox的属性上去判断此单元格是否可编辑\r\n */\r\nexport function checkboxInTable(dom) {\r\n\tif (dom.tagName !== 'INPUT') return false;\r\n\r\n\t//如果是不可编辑的checkbox就继续查找下一个可聚焦元素\r\n\tif (dom && dom.disabled === true) {\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n","import getCellIdentity from './getCellIdentity';\r\nimport { checkboxInTable } from './handleSpecialCase';\r\nimport { keyByModuleId } from '../createKeyMap';\r\nimport { MODULE_TYPE } from '../config/moduleType';\r\nimport { config as CONFIG } from '@platform/api'\r\nimport { findParentTd } from '@platform/api';\r\nimport { executeAutoFocus } from './findNextFocusItemInTable';\r\nimport { findLastFocusItemInForm } from './findNextFocusItemInForm';\r\n\r\n\r\n/**\r\n * @desc 查找下一个可聚焦元素\r\n * @param target {dom} 事件源\r\n * @param ViewModel {object} 全局变量\r\n * @param moduleId {string} 当前区域Id\r\n * @param orderOfHotKey {array} 区域显示顺序配置\r\n */\r\nfunction findPrevFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey }) {\r\n    var parentTd = eventTarget.tagName === 'TD' ? eventTarget : findParentTd(eventTarget);\r\n    if (!parentTd) {\r\n        // 这里报错的原因是因为某些事件（下拉的keydown）执行了两次\r\n        console.warn('not find parentTd, prev hotkey invalid');\r\n        return;\r\n    }\r\n    var prevTd = parentTd.previousElementSibling;\r\n    var currentTr = parentTd.parentElement;\r\n    var firstTd = findFirstTdInRow(currentTr);\r\n    var div = prevTd && prevTd.querySelector('[tabindex=\"0\"]');\r\n\r\n    //如果是第一一个元素就需要判断跳到上一行还是跳到上一个区域\r\n    if (firstTd === parentTd) {\r\n        var lastTr = currentTr.parentElement.lastElementChild;\r\n\r\n        currentTr === lastTr\r\n            ? perceptionHotKeyConfig({ currentModuleId: moduleId, ViewModel, orderOfHotKey })\r\n            : findPrevRowTd({ tr: currentTr, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    // 如果下一个元素没有找到就继续查找\r\n    if (div === null || checkboxInTable(div)) {\r\n        findPrevSiblings({ td: prevTd, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    // 解决table 设值后重新渲染导致焦点缺失的问题,在这里保留一下id\r\n    let cellIdentity = getCellIdentity(prevTd);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n    executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\n/**\r\n * @desc 查找当前行里的第一个td，需要排除操作列\r\n * @param tr {dom}\r\n * @return td {dom}\r\n */\r\nfunction findFirstTdInRow(tr) {\r\n    let tds = tr.querySelectorAll('td');\r\n\r\n    let td = Array.prototype.find.call(tds, function (td) {\r\n        return !td.className.includes('fixed');\r\n    });\r\n\r\n    return td;\r\n}\r\n\r\n/**\r\n * @desc 判断业务组是否配置快捷键，如果没有就在本区域内循环 反之根据orderOfHotKey跳转上个区域\r\n * @param currentModuleId {string} 当前的区域ID\r\n * @param ViewModel 全局变量\r\n * @param orderOfHotKey {array} 区域展示顺序\r\n */\r\nfunction perceptionHotKeyConfig({ currentModuleId, ViewModel, orderOfHotKey }) {\r\n    if (orderOfHotKey && orderOfHotKey.length === 0) {\r\n        findLastFocusItemInCurrentModule({ currentModuleId, ViewModel });\r\n    } else {\r\n        orderOfHotKey &&\r\n            jumpToPrevModuleFocusItem({ currentModuleId, ViewModel, orderOfHotKey });\r\n    }\r\n}\r\n\r\nfunction findLastFocusItemInCurrentModule({ currentModuleId, ViewModel }) {\r\n    let id = `${CONFIG.hotKeyModuleIdPrefix}-${currentModuleId}`;\r\n    let tableTr = document.querySelectorAll(`#${id} table tbody tr.u-table-row`);\r\n    let lastOneIndex = tableTr[tableTr.length - 1];\r\n    let tds = tableTr[lastOneIndex].querySelectorAll('td');\r\n\r\n    let lastFocusItem = findLastChild(tds);\r\n\r\n    let cellIdentity = getCellIdentity(lastFocusItem);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n\r\n    var div = lastFocusItem.querySelector('[tabindex=\"0\"]');\r\n    div && executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\n/**\r\n * @desc 寻找最后一个可编辑啊元素\r\n * @param tds {nodeList}\r\n */\r\nfunction findLastChild(tds) {\r\n    // eslint-disable-next-line no-empty\r\n    for (var i = tds.length; i > -1; i--) {\r\n        if (tds[i].querySelector('[tabindex=\"0\"]') !== null) {\r\n            return tds[i];\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction jumpToPrevModuleFocusItem({ currentModuleId, ViewModel, orderOfHotKey }) {\r\n    let prevModuleId = calculatePrevModuleId(currentModuleId, orderOfHotKey);\r\n\r\n    let prevModuleKeyMap = keyByModuleId[prevModuleId];\r\n\r\n    if (prevModuleKeyMap === undefined) return;\r\n\r\n    let type = prevModuleKeyMap.type;\r\n    if (type === MODULE_TYPE.cardTable || type === MODULE_TYPE.editTable) {\r\n        //如果是table类型就获取当前table显示的页签\r\n        let activeTableKeyMap = keyByModuleId[prevModuleKeyMap.activeTable];\r\n        let lastItemDom = document.querySelector(`div[${activeTableKeyMap.lastItem}]`);\r\n        let div = lastItemDom.querySelector('[tabindex=\"0\"]');\r\n\r\n        if (div === null) {\r\n            let td = lastItemDom.parentElement;\r\n            findPrevSiblings({ td, ViewModel, moduleId: activeTableKeyMap.moduleId, orderOfHotKey });\r\n        } else {\r\n            let td = findParentTd(div);\r\n\r\n            /**\r\n             * @desc 表格编辑后会导致页面重新渲染导致聚焦状态丢失，因此enter键跳转的需要在全局记录一下，为操作的连续性渲染完成后重新聚焦做标识\r\n             * @type {string}\r\n             */\r\n            let cellIdentity = getCellIdentity(td);\r\n            cellIdentity\r\n                ? ViewModel.enterTriggerCellId = cellIdentity\r\n                : '';\r\n            executeAutoFocus({ div, ViewModel });\r\n        }\r\n\r\n    } else {\r\n        findLastFocusItemInForm(prevModuleKeyMap, prevModuleId);\r\n    }\r\n}\r\n\r\n/**\r\n * @desc 递归查找上一个可聚焦元素\r\n * @param td {dom} 前一个td\r\n * @param ViewModel {object} 全局变量\r\n * @param moduleId {string} 当前区域的Id\r\n * @param orderOfHotKey\r\n */\r\nfunction findPrevSiblings({ td, ViewModel, moduleId, orderOfHotKey }) {\r\n    var prevTd = td.previousElementSibling;\r\n    var currentTr = prevTd && prevTd.parentElement;\r\n    var firstTd = currentTr && findFirstTdInRow(currentTr);\r\n    var currentDiv = td.querySelector('[tabindex=\"0\"]');\r\n    var div = prevTd && prevTd.querySelector('[tabindex=\"0\"]');\r\n\r\n    //如果下个需要聚焦的单元格与最后一个单元相同并且没有可聚焦元素就在下一行查找\r\n    if ((firstTd === prevTd && div === null) || (firstTd === td && currentDiv === null)) {\r\n        findPrevRowTd({ tr: currentTr, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    if (div === null || checkboxInTable(div)) {\r\n        findPrevSiblings({ td: prevTd, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    let cellIdentity = getCellIdentity(prevTd);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n    executeAutoFocus({ div, ViewModel });\r\n}\r\n\r\nfunction calculatePrevModuleId(currentModuleId, orderOfHotKey) {\r\n    let orderOfHotKeyLen = orderOfHotKey.length;\r\n    let currentModuleIndex = orderOfHotKey.indexOf(currentModuleId);\r\n\r\n    let prevModuleIndex = currentModuleIndex - 1 < -1\r\n        ? orderOfHotKey[orderOfHotKeyLen - 1]\r\n        : currentModuleIndex - 1;\r\n    return orderOfHotKey[prevModuleIndex];\r\n}\r\n\r\n//查找上一行可聚焦元素\r\nfunction findPrevRowTd({ tr, ViewModel, moduleId, orderOfHotKey }) {\r\n    var prevTr = tr && tr.previousElementSibling;\r\n\r\n    //如果是最后一行就查找下个区域的第一个可聚焦元素\r\n    if (prevTr === null) {\r\n        orderOfHotKey &&\r\n            jumpToPrevModuleFocusItem({ currentModuleId: moduleId, ViewModel, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    if (prevTr.getAttribute('tabindex') === '-1') {\r\n        findPrevRowTd({ tr: prevTr, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    var divs = prevTr.querySelectorAll('td [tabindex=\"0\"]');\r\n    var lastDiv = divs[divs.length - 1];\r\n    var td = findParentTd(lastDiv);\r\n\r\n    let cellIdentity = getCellIdentity(td);\r\n    cellIdentity\r\n        ? ViewModel.enterTriggerCellId = cellIdentity\r\n        : '';\r\n    executeAutoFocus({ div: lastDiv, ViewModel });\r\n}\r\n\r\n\r\nexport {\r\n    findPrevFocusItemInTable,\r\n};\r\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-08-17 09:56:43\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-02-20 09:37:22\r\n */\r\nimport getCellIdentity from './getCellIdentity';\r\nimport { findParentTd } from '@platform/api';\r\nimport { executeAutoFocus } from './findNextFocusItemInTable';\r\nimport calculateNeedJumpTimes from './calculateNeedJumpTimes';\r\n\r\n/**\r\n * @desc 查找上一行元素\r\n * @param target {dom} 事件源\r\n * @param ViewModel {object} 全局变量\r\n * @param moduleId {string} 当前区域Id\r\n * @param orderOfHotKey {array} 区域显示顺序配置\r\n */\r\nfunction findUpStairsFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey }) {\r\n    let parentTd = eventTarget.tagName === 'TD' ? eventTarget : findParentTd(eventTarget);\r\n    let upStairTr = parentTd.parentElement.previousElementSibling;\r\n    let jumpedLines = 1; //向上跳跃的行数\r\n    if (upStairTr === null) return;\r\n\r\n    if (upStairTr.getAttribute('tabindex') === '-1') {\r\n        jumpedLines = calculateNeedJumpTimes(upStairTr, jumpedLines, 'up');\r\n    }\r\n\r\n    let cellIdentity = getCellIdentity(parentTd);\r\n\r\n    if (!cellIdentity) {\r\n        return console.warn('not find cell identity!');\r\n    }\r\n\r\n    let cellIdentityArray = cellIdentity && cellIdentity.split('-');\r\n    let upStairsLine = Number(cellIdentityArray.pop()) - jumpedLines;\r\n\r\n    if (upStairsLine > -1) {\r\n        cellIdentityArray.push(upStairsLine);\r\n        let upStairsCellIdentity = cellIdentityArray.join('-');\r\n        ViewModel.upStairsCellIdentity = cellIdentityArray;\r\n\r\n        let div = document.querySelector(`div[${upStairsCellIdentity}=\"${upStairsCellIdentity}\"] [tabindex=\"0\"], div[${upStairsCellIdentity}=\"${upStairsCellIdentity}\"][tabindex=\"0\"]`);\r\n\r\n        executeAutoFocus({ div, ViewModel });\r\n    }\r\n}\r\nexport {\r\n    findUpStairsFocusItemInTable,\r\n};\r\n","/*\r\n * @Author: liyxt\r\n * @Date: 2020-05-19 15:47:39\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-02-20 09:37:12\r\n * @Description: file content\r\n */\r\nimport getCellIdentity from './getCellIdentity';\r\nimport { config as CONFIG } from '@platform/api'\r\nimport { findParentTd } from '@platform/api';\r\nimport { executeAutoFocus } from './findNextFocusItemInTable';\r\nimport calculateNeedJumpTimes from './calculateNeedJumpTimes';\r\n\r\n/**\r\n * @desc 查找上一行元素\r\n * @param target {dom} 事件源\r\n * @param ViewModel {object} 全局变量\r\n * @param moduleId {string} 当前区域Id\r\n * @param orderOfHotKey {array} 区域显示顺序配置\r\n */\r\nfunction findDownStairsFocusItemInTable({ eventTarget, ViewModel, moduleId }) {\r\n    // debugger;\r\n    let parentTd = eventTarget.tagName === 'TD' ? eventTarget : findParentTd(eventTarget);\r\n    let downStairTr = parentTd.parentElement.nextElementSibling;\r\n    let jumpedLines = 1; //向下跳跃的行数\r\n\r\n    if (downStairTr === null) return;\r\n\r\n    if (downStairTr.getAttribute('tabindex') === '-1') {\r\n        jumpedLines = calculateNeedJumpTimes(downStairTr, jumpedLines, 'down');\r\n\r\n    }\r\n\r\n    let cellIdentity = getCellIdentity(parentTd);\r\n\r\n    if (!cellIdentity) {\r\n        return console.warn('not find cell identity!');\r\n    }\r\n\r\n    let cellIdentityArray = cellIdentity && cellIdentity.split('-');\r\n    let downStairsLine = Number(cellIdentityArray.pop()) + jumpedLines;\r\n\r\n    let id = `${CONFIG.hotKeyModuleIdPrefix}-${moduleId}`;\r\n    // let tableTr = document.querySelectorAll(`#${id} table tbody tr.u-table-row`);\r\n\r\n    // if (downStairsLine < tableTr.length) {\r\n    cellIdentityArray.push(downStairsLine);\r\n    let upStairsCellIdentity = cellIdentityArray.join('-');\r\n    ViewModel.upStairsCellIdentity = upStairsCellIdentity;\r\n\r\n    let div = document.querySelector(`div[${upStairsCellIdentity}=\"${upStairsCellIdentity}\"] [tabindex=\"0\"], div[${upStairsCellIdentity}=\"${upStairsCellIdentity}\"][tabindex=\"0\"]`);\r\n\r\n    executeAutoFocus({ div, ViewModel });\r\n    // }\r\n}\r\n\r\nexport { findDownStairsFocusItemInTable };\r\n","import { keyByModuleId, orderOfHotKey } from './createKeyMap';\r\nimport { MODULE_TYPE } from './config/moduleType';\r\nimport { ViewModel, config, PubSub } from '@platform/api'\r\nimport { findNextFocusItemInTable } from './util/findNextFocusItemInTable';\r\nimport { findPrevFocusItemInTable } from './util/findPrevFoucsItemInTable';\r\nimport { findUpStairsFocusItemInTable } from './util/findUpStairsFocusItemInTable';\r\nimport { findDownStairsFocusItemInTable } from './util/findDownStairsFocusItemInTable';\r\n\r\nconst ARROW_KEY = {\r\n    37: handleLeftArrow,\r\n    38: handleUpArrow,\r\n    39: handleRightArrow,\r\n    40: handleDownArrow,\r\n};\r\n\r\n/**\r\n *\r\n * @param moduleId { String } 事件触发时得到的当前moduleId\r\n * @param e { Object } 事件源\r\n * @param key  { String } 触发的按钮\r\n */\r\n\r\nfunction keyDownOfShiftUp(moduleId, e, key) {\r\n    let nextFocus = key === 'shift+down' ? +1 : -1;\r\n\r\n    let nextFocusModuleIdIndex = orderOfHotKey.indexOf(moduleId) + nextFocus;\r\n    let nextFocusModuleId = orderOfHotKey[nextFocusModuleIdIndex];\r\n\r\n    if (e.target) { // 逻辑修正\r\n        let code = null;\r\n        // item 根本没有item\r\n        // if (keyByModuleId[moduleId][item]) {\r\n        //     code = keyByModuleId[moduleId][item];\r\n        // }\r\n\r\n        if (!isLastModule(nextFocusModuleId) && keyByModuleId[nextFocusModuleId].firstItem) {\r\n            code = keyByModuleId[nextFocusModuleId].firstItem;\r\n        }\r\n        let wrapperDom = document.querySelector(`div[field=${code}]`);\r\n        if (!wrapperDom || !(wrapperDom && wrapperDom.contains(e.target))) {\r\n            e.target.blur();\r\n        }\r\n    }\r\n\r\n    if (isLastModule(nextFocusModuleId)) {\r\n        focusInSelfModule({ key, moduleId });\r\n        return;\r\n    }\r\n\r\n    //如果下一个聚焦区域没有数据就跳过\r\n    if (nextItemNotHaveData(this.props, moduleId, nextFocusModuleId)) {\r\n        keyDownOfShiftUp.call(this, nextFocusModuleId, e, key);\r\n        return;\r\n    }\r\n\r\n    PubSub.publish('autoFocus', {\r\n        data: keyByModuleId[nextFocusModuleId].firstItem,\r\n        moduleId,\r\n    });\r\n}\r\n\r\n/**\r\n * @desc 如果在keyByModuleId中没有找到 nextFocusModuleId 就在当前moduleId中来回跳，从第一个可聚焦点跳到最后一个可聚焦点\r\n * @param nextFocusModuleId {string}\r\n * @return {boolean}\r\n */\r\nfunction isLastModule(nextFocusModuleId) {\r\n    return keyByModuleId[nextFocusModuleId] === undefined;\r\n}\r\n\r\nfunction focusInSelfModule({ key, moduleId }) {\r\n    let item = key === 'shift+down' ? 'lastItem' : 'firstItem';\r\n\r\n    //判断是否有关联tab标签\r\n    if (hasTabRelation(moduleId)) {\r\n        activeItemFocus(moduleId, item);\r\n        return;\r\n    }\r\n\r\n    PubSub.publish('autoFocus', {\r\n        data: keyByModuleId[moduleId][item],\r\n        moduleId,\r\n    });\r\n}\r\n\r\n// 判断是否有关联表\r\nfunction hasTabRelation(moduleId) {\r\n    let moduleInfo = keyByModuleId[moduleId];\r\n    return moduleInfo && (moduleInfo.parent || moduleInfo.children);\r\n}\r\n\r\n/**\r\n * @desc: 当前活跃的标签获取焦点\r\n * @param: moduleId {string} 当前区域Id\r\n * @param: item {string} 表格里的聚焦项\r\n */\r\nfunction activeItemFocus(moduleId, item) {\r\n    //如果当前活跃的标签是undefined 就用区域ID\r\n    let activeKey = ViewModel.tableActiveKey || moduleId;\r\n\r\n    PubSub.publish('autoFocus', {\r\n        data: keyByModuleId[activeKey][item],\r\n        moduleId,\r\n    });\r\n}\r\n\r\n/**\r\n * @desc 判断下一个需要聚焦的moduleId是否有数据,如果没有就再次keyDownOfShiftUp,\r\n * @param props {object}\r\n * @param currentModuleId {string} 当前聚焦的区域ID\r\n * @param nextModuleId {string} 下个聚焦的区域ID\r\n */\r\nfunction nextItemNotHaveData(props, currentModuleId, nextModuleId) {\r\n    const currentModuleType = keyByModuleId[currentModuleId].type;\r\n    const nextModuleType = keyByModuleId[nextModuleId].type;\r\n    let data = [];\r\n\r\n    //type: {form, cardTable, editTable}\r\n    if (currentModuleType === MODULE_TYPE.form) {\r\n        data = getDataByFormDataStructure(props, nextModuleType, nextModuleId);\r\n    } else if (currentModuleType === MODULE_TYPE.cardTable) {\r\n        data = getDataByCardTableDataStructure(props, nextModuleType, nextModuleId);\r\n    } else if (currentModuleType === MODULE_TYPE.editTable) {\r\n        data = getDataByCardTableDataStructure(props, nextModuleType, nextModuleId);\r\n    }\r\n\r\n    return data.length === 0;\r\n}\r\n/**\r\n * \r\n * TODO\r\n * @desc 由于form, table 类型的数据存放于不同的地方\r\n * @param props\r\n * @param nextModuleType\r\n * @param nextModuleId\r\n */\r\nfunction getDataByFormDataStructure(props, nextModuleType, nextModuleId) {\r\n    let data;\r\n    let myTable = props._this.myTable;\r\n    if (nextModuleType === MODULE_TYPE.cardTable) {\r\n        data = myTable[nextModuleId].state.table.rows;\r\n    } else if (nextModuleType === MODULE_TYPE.editTable) {\r\n        data = myTable.myEditTable[nextModuleId].state.table.rows;\r\n    } else {\r\n        data = props._this.state.meta[nextModuleId].items;\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\n// TODO\r\nfunction getDataByCardTableDataStructure(props, nextModuleType, nextModuleId) {\r\n    let data;\r\n    let myTable = props.pageScope.myTable;\r\n    if (nextModuleType === MODULE_TYPE.cardTable) {\r\n        data = myTable[nextModuleId].state.table.rows;\r\n    } else if (nextModuleType === MODULE_TYPE.editTable) {\r\n        data = myTable.myEditTable[nextModuleId].state.table.rows;\r\n    } else {\r\n        data = props.pageScope.state.meta[nextModuleId].items;\r\n    }\r\n\r\n    return data;\r\n}\r\n\r\n/**\r\n * @desc: 处理上下左右键\r\n * @param eventTarget {dom} 事件源\r\n * @param ViewModel {object} 全局变量\r\n * @param moduleId {string} 区域ID\r\n * @param orderOfHotKey {array} 区域显示顺序\r\n * @param itemType {string} 基础组件类型 input/datePicker\r\n * @param keyCode {number} 按键号\r\n */\r\nfunction handleArrowKeyDown({ eventTarget, ViewModel, moduleId, orderOfHotKey, itemType, keyCode }) {\r\n    ARROW_KEY[keyCode]({ eventTarget, ViewModel, moduleId, orderOfHotKey, itemType });\r\n}\r\n\r\n/**\r\n * @desc 处理按左方向键\r\n * @param eventTarget\r\n * @param ViewModel\r\n * @param moduleId\r\n * @param orderOfHotKey\r\n * @param itemType\r\n */\r\nfunction handleLeftArrow({ eventTarget, ViewModel, moduleId, orderOfHotKey, itemType }) {\r\n    //日期类型延迟执行时eventTarget已被移出document导致寻找不到父元素td,所以日期类型立即执行\r\n    if (itemType === config.hotKeyDatePicker) {\r\n        findPrevFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    //CLOUD-147579 中文输入法下会带进冒号空格等符号，原因是因为输入法的enter比我们的enter后执行导致\r\n    let timer = setTimeout(() => {\r\n        findPrevFocusItemInTable({ eventTarget, ViewModel, moduleId });\r\n        clearTimeout(timer);\r\n    });\r\n}\r\n\r\nfunction handleUpArrow({ eventTarget, ViewModel, moduleId, orderOfHotKey, itemType }) {\r\n    //日期类型延迟执行时eventTarget已被移出document导致寻找不到父元素td,所以日期类型立即执行\r\n    if (itemType === config.hotKeyDatePicker) {\r\n        findUpStairsFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    //CLOUD-147579 中文输入法下会带进冒号空格等符号，原因是因为输入法的enter比我们的enter后执行导致\r\n    let timer = setTimeout(() => {\r\n        findUpStairsFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey });\r\n        clearTimeout(timer);\r\n    });\r\n}\r\n\r\nfunction handleRightArrow({ eventTarget, ViewModel, moduleId, orderOfHotKey, itemType }) {\r\n    //日期类型延迟执行时eventTarget已被移出document导致寻找不到父元素td,所以日期类型立即执行\r\n    if (itemType === config.hotKeyDatePicker) {\r\n        findNextFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    //CLOUD-147579 中文输入法下会带进冒号空格等符号，原因是因为输入法的enter比我们的enter后执行导致\r\n    let timer = setTimeout(() => {\r\n        findNextFocusItemInTable({ eventTarget, ViewModel, moduleId });\r\n        clearTimeout(timer);\r\n    });\r\n}\r\n\r\nfunction handleDownArrow({ eventTarget, ViewModel, moduleId, orderOfHotKey, itemType }) {\r\n    //日期类型延迟执行时eventTarget已被移出document导致寻找不到父元素td,所以日期类型立即执行\r\n    if (itemType === config.hotKeyDatePicker) {\r\n        findDownStairsFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey });\r\n        return;\r\n    }\r\n\r\n    //CLOUD-147579 中文输入法下会带进冒号空格等符号，原因是因为输入法的enter比我们的enter后执行导致\r\n    let timer = setTimeout(() => {\r\n        findDownStairsFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey });\r\n        clearTimeout(timer);\r\n    });\r\n}\r\n\r\nexport { keyDownOfShiftUp, handleArrowKeyDown };\r\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-08-17 09:56:42\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2020-09-22 10:47:22\r\n */\r\n// 总配置项\r\nexport default {\r\n    allTypes: ['input', 'number', 'textarea', 'datepicker', 'rangepicker', 'switch', 'select', 'checkbox', 'radio', 'refer', 'customer', 'label', 'NCTZDatePickerStart', 'NCTZDatePickerEnd', 'checkbox_switch', 'switch_browse'],\r\n    displayTypes: ['select', 'radio', 'checkbox', 'refer'],\r\n    string: ['input', 'textarea', 'datepicker', 'select', 'checkbox', 'radio', 'refer', 'label'],\r\n    boolean: ['switch', 'checkbox_switch', 'switch_browse'],\r\n    number: ['number'],\r\n    valueTypesExceptNumber: ['input', 'textarea'],\r\n    changeTypes: ['datepicker', 'rangepicker', 'switch', 'select', 'checkbox', 'radio', 'refer', 'NCTZDatePickerStart', 'NCTZDatePickerEnd', 'checkbox_switch', 'switch_browse', 'datePickerNoTimeZone'],\r\n    blurTypes: ['input', 'number', 'textarea'],\r\n    // 编辑后在onblur中的类型\r\n    afterBlurTypes: ['input', 'number', 'textarea', 'residtxt', 'datetimepicker', 'timepicker'],\r\n    valueTypes: ['input', 'number', 'textarea'],\r\n    noEditType: ['label', 'customer'],\r\n    getDisplay: ['select', 'radio', 'checkbox'],\r\n    ROW_STATUS: {\r\n        origin: '0',\r\n        edit: '1',\r\n        add: '2',\r\n        delete: '3',\r\n        // 新增状态  不表现在status这个后台数据中  只为做判断\r\n        filter: \"9\",\r\n    },\r\n    timeTypes: ['datepicker', 'NCTZDatePickerStart', 'NCTZDatePickerEnd', 'timepicker', 'datetimepicker', 'rangepicker', 'datePickerNoTimeZone'],\r\n    beforeFocusTypes: ['residtxt', 'input', 'select', 'number', 'textarea', 'password', 'switch_browse', 'refer'],\r\n    beforeChangeTypes: ['radio'],\r\n    beforeClickTypes: ['datepicker', 'timepicker', 'datetimepicker', 'NCTZDatePickerStart', 'NCTZDatePickerEnd', 'rangepicker', 'datePickerNoTimeZone', 'checkbox_switch', 'checkbox'],\r\n    hotKeyModuleIdPrefix: 'hot-key',\r\n    defaultColor: ['#111111', '#555555', '#111', '#555'],\r\n    complete: 'areaChangeComplete',\r\n    //isPageModal: true,  // 为true,top的url放在sessionstorage;否则url不变; 默认值是true\r\n    //isRemoveWorkbench: false, // 为true时,去掉工作桌面打开节点;默认值是false\r\n    hotKeyDatePicker: 'datePicker',\r\n    //由于enter键与业务组部分enter键搜索逻辑冲突因此添加标识，如果元素有此样式就不执行平台enter键逻辑\r\n    stopEnterHotKey: 'stopEnterHotKey',\r\n};","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: jinfjk\r\n * @Date: 2020-08-17 09:56:43\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2020-09-28 15:34:56\r\n */\r\nconst FORM_BROWSE = 'browse';\r\n/**\r\n * @desc 如果以下条件只要有一个不满足就停止执行下面的代码\r\n * @param props {object}\r\n * @param autoFocusDeferred {boolean} true -> 不执行， false -> 执行\r\n * @param status {string} 此状态是form内部的状态，如果此状态不为空优先读取此状态\r\n * @returns {boolean}\r\n */\r\nfunction stopFormHotKeyChange({ props, autoFocusDeferred, status }) {\r\n    let { name } = props;\r\n    let { withHotKeyChange, meta } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n\r\n    if (!props.getHotKeyConfig) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n\r\n    let moduleType = meta[name] &&\r\n        meta[name]['moduletype'];\r\n\r\n    let formStatus;\r\n    if (status) {\r\n        formStatus = status;\r\n    } else {\r\n        //首先判断meta中是否存在name ？ (如果有就去取meta里的值，如果meta里没有设置status默认设值浏览态) ：（meta中不存在name默认设值浏览态）\r\n        formStatus = meta[name] ? meta[name].status || FORM_BROWSE : FORM_BROWSE;\r\n    }\r\n\r\n    if (name === undefined || withHotKeyChange === false || moduleType === undefined || autoFocusDeferred || formStatus === FORM_BROWSE) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction stopCardTableHotKeyChange(props) {\r\n    let { name, high_hotkey, getHotKeyConfig } = props;\r\n    // console.log(high_hotkey, getHotKeyConfig)\r\n    let { withHotKeyChange, meta } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n    if (!props.getHotKeyConfig) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n    let { store, tableId } = high_hotkey;\r\n    if (!store) return true;\r\n\r\n    let notEditStatus = store.getTableProps('status') !== 'edit';\r\n    let rows = store.getData();\r\n    let columns = meta[name] && meta[name].items;\r\n\r\n    rows = rows === undefined ? [] : rows;\r\n\r\n    //状态不是编辑状态，无rows数据, 业务组设置withHotKeyChange->false时停止生成keyMap\r\n    return (notEditStatus || rows.length === 0 || !withHotKeyChange || columns === undefined);\r\n}\r\n\r\nfunction stopEditTableHotKeyChange(props, autoFocusDeferred) {\r\n    let { name, high_hotkey, getHotKeyConfig } = props;\r\n    // console.log(high_hotkey, getHotKeyConfig)\r\n    let { withHotKeyChange, meta } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n    if (!props.getHotKeyConfig) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n    let { store, tableId } = high_hotkey;\r\n    if (!store) return true;\r\n\r\n    let notEditStatus = store.getTableProps('status') !== 'edit';\r\n    let rows = store.getData();\r\n    let columns = meta[name] && meta[name].items;\r\n\r\n    rows = rows === undefined ? [] : rows;\r\n\r\n    //autoFocusDeferred == true || 状态不是编辑状态，rows无数据 并且业务组设置withHotKeyChange->false时才停止生成keyMap\r\n    return (autoFocusDeferred || notEditStatus || rows.length === 0 || !withHotKeyChange || columns === undefined);\r\n\r\n}\r\n\r\nexport {\r\n    stopFormHotKeyChange,\r\n    stopCardTableHotKeyChange,\r\n    stopEditTableHotKeyChange,\r\n};\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { config as CONFIG } from '@platform/api'\r\nimport { matchItemFocus } from '../../WithAutoFocus/executeAutoFocus';\r\n\r\nfunction findNextFocusItemInForm(nextModuleKeyMap, nextModuleId) {\r\n  let wrapper = document.querySelector(`#${CONFIG.hotKeyModuleIdPrefix}-${nextModuleId}`);\r\n  let formItem = wrapper.querySelector(`.${nextModuleKeyMap.firstItem}`);\r\n  let type = getFormType(formItem);\r\n  matchItemFocus[type] === undefined\r\n    ? matchItemFocus['normal'](wrapper)\r\n    : matchItemFocus[type](wrapper);\r\n}\r\n\r\nfunction findLastFocusItemInForm(nextModuleKeyMap, nextModuleId) {\r\n\r\n}\r\n\r\nfunction getFormType(formItem) {\r\n  return Array.prototype.find.call(formItem.classList, function (item) {\r\n    return item.startsWith('js-type');\r\n  }).split('-')\r\n    .pop();\r\n}\r\n\r\nexport {\r\n  findNextFocusItemInForm,\r\n  findLastFocusItemInForm\r\n};\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\r\n * @desc：有些行整行不可编辑，添加了标示tabindex = -1,一直循环找到可编辑的行数\r\n * @param tr {node} 当前行不可编辑的行\r\n * @param needJumpTimes {number} 向上/下查找的行数\r\n * @param direction {string}  'down'/ 'up' 向上或向下查找\r\n * @return 返回需要向上/下查找的行数\r\n */\r\nexport default function calculateNeedJumpTimes(tr, needJumpTimes, direction) {\r\n    let tempTr = tr;\r\n    let tempNeedJumpTimes = needJumpTimes;\r\n    while (tempTr !== null && tempTr.getAttribute('tabindex') === '-1') {\r\n        tempNeedJumpTimes += 1;\r\n        tempTr = direction === 'up' ? tempTr.previousElementSibling : tempTr.nextElementSibling;\r\n    }\r\n    return tempNeedJumpTimes;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && objectToString.call(value) == boolTag);\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isBoolean;\n","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\r\n *\r\n * \r\n *  shiftUp: {sequence: string, action: string}, 让下一个Table的第一个元素聚焦\r\n *  shiftDown: {sequence: string, action: string} 让上一个Table的第一个元素聚焦\r\n *\r\n * \r\n */\r\n\r\nconst keyMap = {\r\n    shiftUp: {\r\n        sequence: 'shift+up',\r\n        action: 'keydown',\r\n    },\r\n    shiftDown: {\r\n        sequence: 'shift+down',\r\n        action: 'keydown',\r\n    },\r\n    tab: {\r\n        sequence: 'tab',\r\n        action: 'keydown',\r\n    },\r\n};\r\n\r\nexport { keyMap };","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: pub\r\n * @Date: 2020-06-22 09:46:52\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-01-27 14:46:28\r\n */\r\nimport warning from 'warning';\r\nimport { moment, getSafeRandom } from '@platform/api';\r\n//import {DongbaToLocalTime} from './timer.js';\r\nimport { formatNumber, formatDatetime, DongbaToLocalTime, isDongba, LocalToDongbaTime, getLangCode, toast, setGlobalStorage, getGlobalStorage, pageTo } from '@platform/api';\r\nimport CONFIG from '../config'\r\n\r\nconst warned = {};\r\n\r\n/**\r\n * 错误警告，只警告一次\r\n * @param {*} condition \r\n * @param {*} format \r\n * @param {*} arg \r\n */\r\nexport function warningOnce(condition, format, arg) {\r\n    if (!warned[format]) {\r\n        warning(condition, format, arg);\r\n        warned[format] = true;\r\n    }\r\n}\r\n\r\nconst getVarType = function (v) {\r\n    return Object.prototype.toString.call(v).slice(8, -1);\r\n};\r\n\r\n/**\r\n * 判断是否为对象\r\n * @param {*object} obj \r\n */\r\nexport function isObject(obj) {\r\n    return getVarType(obj) === 'Object';\r\n}\r\n\r\n/* 检测类型是否为数组 */\r\nexport function isArray(param) {\r\n    return getVarType(param) === 'Array' || Array.isArray(param);\r\n}\r\n\r\n/* 检测类型是否为字符串 */\r\nexport function isString(param) {\r\n    return getVarType(param) === 'String';\r\n}\r\n\r\n/* 检测类型是否为方法 */\r\nexport function isFunction(param) {\r\n    return getVarType(param) === 'Function';\r\n}\r\n\r\n/* 检测类型是否为Promise对象 */\r\nexport function isPromise(param) {\r\n    return getVarType(param) === 'Promise';\r\n}\r\n\r\n/* 检测类型是否为数字 */\r\nexport function isNumber(param) {\r\n    return getVarType(param) === 'Number' && !Number.isNaN(param);\r\n}\r\n\r\n/*\r\n * @method   检测是否是需要是boolean类型\r\n */\r\nexport function isBoolean(param) {\r\n    return getVarType(param) === 'Boolean';\r\n}\r\n\r\n/*\r\n * @method   是否是undefined\r\n */\r\nexport function isUndefined(origin) {\r\n    return typeof origin === 'undefined' || origin === void 0;\r\n}\r\n\r\n/*\r\n * @method   if条件下为false   除去NaN、0、-0、false   剩余undefined、null、\"\"\r\n */\r\nexport function isWrong(param) {\r\n    return typeof param === 'undefined' || param === null || param === '';\r\n}\r\n\r\nexport function isNullOrVoid(param) {\r\n    return typeof param === 'undefined' || param === null;\r\n}\r\n\r\n/*\r\n * @method   if条件下为false   除去NaN、0、-0、false   剩余undefined、null、\"\"\r\n */\r\nexport function isWrongFalse(param) {\r\n    return typeof param === 'undefined' || param === null || param === '' || param === false;\r\n}\r\n\r\n// 判断各类型blur的时候value是否是空值\r\nexport function isEmptyValue(value, itemtype) {\r\n    if (itemtype === 'residtxt') {\r\n        return !Object.keys(value).some(attr => {\r\n            return !isWrong(value[attr].value);\r\n        });\r\n    } else if (itemtype === 'refer') {\r\n        if (Array.isArray(value)) {\r\n            if (value.length > 1) {\r\n                return false;\r\n            } else if (value.length === 0) {\r\n                return true;\r\n            } else {\r\n                return isWrong(value[0].refpk);\r\n            }\r\n        } else {\r\n            return isWrong(value.refpk);\r\n        }\r\n    } else {\r\n        return isWrong(value);\r\n    }\r\n}\r\n\r\n/*\r\n * @method   防抖方法\r\n * @author   add by xuyangt @19/03/08\r\n * @params\r\n *     callback     {fun}      回调函数\r\n *     interval     {number}   触发间隔时间\r\n * @return   {fun}\r\n * @demo\r\n */\r\n\r\nexport function debounds(callback, delay = 0) {\r\n    let timeout = null;\r\n    return function () {\r\n        let that = this;\r\n        let param = arguments;\r\n        if (timeout) {\r\n            clearTimeout(timeout);\r\n        }\r\n        timeout = setTimeout(function () {\r\n            typeof callback === 'function' && callback.apply(that, param);\r\n        }, delay);\r\n    }\r\n}\r\n/*\r\n * @method   节流方法\r\n * @author   add by xuyangt @19/03/08\r\n * @params\r\n *     callback     {fun}      回调函数\r\n *     delay     {number}   延时执行时间\r\n * @return   {fun}\r\n * @demo\r\n */\r\nexport function throttle(callback, interval = 0) {\r\n    let last = 0;\r\n    return function () {\r\n        let param = arguments;\r\n        let that = this;\r\n        let now = +new Date();\r\n        if (now - last >= interval) {\r\n            last = now;\r\n            typeof callback === 'function' && callback.apply(that, param);\r\n        }\r\n    }\r\n}\r\n\r\n/*==============================快捷键相关===============================*/\r\n/**\r\n * issue: https://stackoverflow.com/questions/2600186/focus-doesnt-work-in-ie, For IE you need to use a setTimeout function due to it being lazy\r\n */\r\nexport function setElementFocusInIE(dom) {\r\n    let timer = setTimeout(() => {\r\n        dom && dom.focus();\r\n        clearTimeout(timer);\r\n    }, 100);\r\n}\r\n\r\n/**\r\n * @desc 判断是否按下了方向键\r\n * @param e {obj} 事件源\r\n * @param wantedKeys {array} 想要监听的按钮\r\n */\r\nexport function isArrowKeyDown(e, wantedKeys) {\r\n    if (e.ctrlKey || e.shiftKey || e.altKey || e.metaKey) return false;\r\n    let keys = wantedKeys || [37, 38, 39, 40];\r\n    return keys.includes(e.keyCode);\r\n}\r\n\r\n/**\r\n * @desc 判断 control + 上下 方向键\r\n * @param e {object}\r\n */\r\nexport function ctrlKeyWithUpDown(e) {\r\n    return (e.ctrlKey || e.metaKey) && [38, 40].includes(e.keyCode);\r\n}\r\n\r\n/**\r\n * @desc 判断 enter 事件\r\n * @param e {object} 事件源\r\n * @return {BooleanConstructor}\r\n */\r\nexport function isEnterKeyDown(e) {\r\n    //中文输入法下按的enter keyCode 都返回 229\r\n    return e.key === 'Enter' && e.keyCode !== 229 && e.ctrlKey === false && e.altKey === false && e.metaKey === false;\r\n}\r\n\r\n/**\r\n * 生成唯一标识\r\n */\r\nexport function uuidv4() {\r\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (getSafeRandom() * 16) | 0,\r\n            v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\n\r\n/**\r\n * @description: 高阶组件的聚合，可在本方法里判断组件是否存在\r\n * @param {type} \r\n * @return: \r\n */\r\nexport function polymerizeComponents(base, components = [], params) {\r\n    let component = base;\r\n    components.forEach(item => { component = item(component, params) });\r\n    return component;\r\n}\r\n\r\n// 产生随机key值\r\nexport function getRandom() {\r\n    return String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12);\r\n}\r\n\r\n// 转换东八区为当地时间\r\n/**\r\n * \r\n * @param {*string} time \r\n * @param {*string} format \r\n */\r\nexport function changeTime(time, format = 'YYYY-MM-DD') {\r\n    if (time) {\r\n        let newTime = DongbaToLocalTime(moment(time));\r\n        return newTime.format(format);\r\n    }\r\n}\r\n\r\nexport function getRandomPassword() {\r\n    let min = 6;\r\n    let max = 12;\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    let a = Math.floor(getSafeRandom() * (max - min + 1)) + min;\r\n    return Array(a).fill('*').join('');\r\n}\r\n\r\n//精度 + 补0 + 千分位综合处理\r\nexport function formatAcuracy(value, len = 0) {\r\n    if (value === null || value === undefined || String(value).endsWith('必输项')) {\r\n        return value;\r\n    }\r\n    // 将科学计数法转成数字字符串\r\n    value = convertNum(value);\r\n    return commafy(addZero(formatDot(value, len), len));\r\n}\r\n\r\n// 四舍五入 by wangyang\r\nexport function ncRounding(value, scale) {\r\n    // 如果没有精度，不需要处理四舍五入\r\n    if (!scale) return value;\r\n\r\n    let [_value, _scale] = [value, scale];\r\n\r\n    if (\r\n        !Object.prototype.toString.call(scale) !== \"[object Number]\" &&\r\n        !isNaN(Number(scale))\r\n    )\r\n        _scale = Number(scale);\r\n\r\n    // 校验参数\r\n    if (Object.prototype.toString.call(value) !== \"[object String]\")\r\n        _value = String(value);\r\n\r\n    const re = /^(\\-|\\+)?(\\d+)?\\.?(\\d+)?$/;\r\n\r\n    if (_value.length < 500 && !re.test(_value)) {\r\n        //console.warn(\"处理参数异常\");\r\n        return value;\r\n    }\r\n\r\n    // 分割value\r\n    let [, afterPoint] = _value.split(\".\");\r\n\r\n    // 有小数位数\r\n    if (afterPoint && afterPoint !== \"\") {\r\n        // 判断小数位数与精度的关系\r\n        if (afterPoint.length > _scale) {\r\n            _value = Number(_value);\r\n            // 进行四舍五入操作\r\n            _value = Number(_value.toFixed(_scale + 1));\r\n\r\n            _value = _value * Math.pow(10, _scale);\r\n\r\n            _value = Math.round(_value);\r\n\r\n            _value = _value / Math.pow(10, _scale);\r\n        }\r\n    }\r\n\r\n    return _value;\r\n}\r\n\r\nfunction convertNum(num_str) {\r\n    //参数必须为 字符串\r\n    //科学计数法字符 转换 为数字字符， 突破正数21位和负数7位的Number自动转换\r\n    // 兼容 小数点左边有多位数的情况，即 a×10^b（aEb），a非标准范围（1≤|a|<10）下的情况。如 3453.54E-6 or 3453.54E6\r\n    let resValue = '',\r\n        power = '',\r\n        result = null,\r\n        dotIndex = 0,\r\n        resArr = [],\r\n        sym = '';\r\n    let numStr = String(num_str);\r\n    if (!/e/i.test(numStr)) {\r\n        return numStr;\r\n    }\r\n    if (numStr[0] == '-') {\r\n        // 如果为负数，转成正数处理，先去掉‘-’号，并保存‘-’.\r\n        numStr = numStr.substr(1);\r\n        sym = '-';\r\n    }\r\n    let regExp = new RegExp('^(((\\\\d+.?\\\\d+)|(\\\\d+))[Ee]{1}((-(\\\\d+))|(\\\\d+)))$', 'ig');\r\n    if (numStr.length < 500) {\r\n        result = regExp.exec(numStr);\r\n    }\r\n    if (result != null) {\r\n        resValue = result[2];\r\n        power = result[5];\r\n        result = null;\r\n    }\r\n    if (!resValue && !power) {\r\n        return false;\r\n    }\r\n    dotIndex = resValue.indexOf('.');\r\n    resValue = resValue.replace('.', '');\r\n    resArr = resValue.split('');\r\n    if (Number(power) >= 0) {\r\n        let subres = resValue.substr(dotIndex);\r\n        power = Number(power);\r\n        //幂数大于小数点后面的数字位数时，后面加0\r\n        for (let i = 0; i < power - subres.length; i++) {\r\n            resArr.push('0');\r\n        }\r\n        if (power - subres.length < 0) {\r\n            resArr.splice(dotIndex + power, 0, '.');\r\n        }\r\n    } else {\r\n        power = power.replace('-', '');\r\n        power = Number(power);\r\n        //幂数大于等于 小数点的index位置, 前面加0\r\n        for (let i = 0; i <= power - 1; i++) {\r\n            resArr.unshift('0');\r\n        }\r\n        let n = power - dotIndex >= 0 ? 1 : -(power - dotIndex);\r\n        resArr.splice(n, 0, '.');\r\n    }\r\n    resValue = resArr.join('');\r\n    return sym + resValue;\r\n}\r\n\r\n//数字转换成千分位 格式\r\nfunction commafy(num) {\r\n    let pointIndex, intPart, pointPart;\r\n    if (num === '-') {\r\n        return '-';\r\n    }\r\n\r\n    if (Number.isNaN(+(num + '').split(',').join(''))) {\r\n        //这里暂时就处理一下千分位的逗号\r\n        return '';\r\n    }\r\n\r\n    num = num + '';\r\n    if (num.length < 500 && /^.*\\..*$/.test(num)) {\r\n        pointIndex = num.lastIndexOf('.');\r\n        intPart = num.substring(0, pointIndex);\r\n        pointPart = num.substring(pointIndex + 1, num.length);\r\n        intPart = intPart + '';\r\n        let re = /(-?\\d+)(\\d{3})/;\r\n        while (intPart.length < 500 && re.test(intPart)) {\r\n            intPart = intPart.replace(re, '$1,$2');\r\n        }\r\n        num = intPart + '.' + pointPart;\r\n    } else {\r\n        num = num + '';\r\n        let re = /(-?\\d+)(\\d{3})/;\r\n        while (num.length < 500 && re.test(num)) {\r\n            num = num.replace(re, '$1,$2');\r\n        }\r\n    }\r\n    return num;\r\n}\r\n\r\n// 精度处理\r\nfunction formatDot(value, len = 8) {\r\n    let formatVal, dotSplit, val;\r\n\r\n    val = (value || 0).toString();\r\n\r\n    dotSplit = val.split('.');\r\n\r\n    if (dotSplit.length > 2 || !value) {\r\n        return value;\r\n    }\r\n\r\n    if (val.indexOf('.') > -1) {\r\n        if (len == 0) {\r\n            formatVal = dotSplit[0];\r\n        } else {\r\n            formatVal = val.substring(0, val.indexOf('.') + len + 1);\r\n        }\r\n    } else {\r\n        formatVal = val;\r\n    }\r\n\r\n    return formatVal;\r\n}\r\n\r\nfunction addZero(num, scale) {\r\n    if (num === '' || num === undefined || num === null) {\r\n        return '';\r\n    }\r\n\r\n    if (scale > 0) {\r\n        let start = String(num).split('.')[0];\r\n        let end = String(num).split('.')[1];\r\n        if (!end) {\r\n            end = '';\r\n        }\r\n        let len = end.length;\r\n        if (len < scale) {\r\n            end = end.padEnd(scale, '0');\r\n        }\r\n        return start + '.' + end;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 过滤掉符合某个属性值的数据\r\n * @param {type} \r\n * @return: \r\n */\r\nexport function filterColumns(columns = [], filterCondition) {\r\n    if (!filterCondition) {\r\n        return columns;\r\n    }\r\n    return columns.filter(item => {\r\n        let result = filterCondition(item);\r\n        if (item.children && result) {\r\n            item.children = filterColumns(item.children, filterCondition);\r\n            return item.children.length;\r\n        }\r\n        return result;\r\n    });\r\n}\r\n\r\n//判断模板是否显示合计行\r\nexport function getMetaIsTotal(columns = []) {\r\n    let isTotal = false; //模版是否配置可合计列\r\n    Array.isArray(columns) && columns.forEach(item => {\r\n        //便利判断模版中是否设置可合计列\r\n        if (item.istotal) {\r\n            isTotal = true;\r\n        }\r\n    });\r\n    return isTotal;\r\n}\r\n\r\n//用于excel 粘贴，批改整理数据\r\nexport const excelPackageData = param => {\r\n    let { pasteContent, activeCell, langJson, rows, getRowOldValue, tableId } = param\r\n    let { rowIndex, attrcode, column, direction = 'down' } = activeCell\r\n    let { itemtype, options, languageMeta, maxlength, scale } = column\r\n\r\n    let changedrows = []\r\n    let newValue = []\r\n    let pasteData = []\r\n    let pasteLength = pasteContent.length\r\n    for (let cellIndex = 0; cellIndex < pasteLength; cellIndex++) {\r\n        let cell = pasteContent[cellIndex]\r\n\r\n        if (isString(cell)) {\r\n            cell = cell.trim();\r\n        }\r\n\r\n        if (isUndefined(cell)) {\r\n            cell = '';\r\n        }\r\n\r\n        if (maxlength && cell.length > maxlength) {\r\n            toast({ color: 'danger', title: langJson['table_tips'], content: `${langJson['table_tips_content']}${maxlength}` });\r\n            return\r\n        }\r\n\r\n        let currentRow = rows[direction === 'up' ? (rowIndex - cellIndex) : (rowIndex + cellIndex)]\r\n        if (!currentRow) {\r\n            currentRow = {\r\n                rowid: String(new Date().getTime()).slice(-5) + getSafeRandom().toString(12),\r\n                status: 2,\r\n                values: {},\r\n            }\r\n        }\r\n        let row = JSON.parse(JSON.stringify(currentRow))\r\n\r\n        let val = cell;\r\n        if (!row.values[attrcode]) {\r\n            row.values[attrcode] = {};\r\n        }\r\n        //当前单元格各项属性 value display...\r\n        let cellprops = row.values[attrcode];\r\n        const checkTimeTypes = [\r\n            'datepicker',\r\n            'NCTZDatePickerStart',\r\n            'NCTZDatePickerEnd',\r\n        ];\r\n\r\n        switch (true) {\r\n            //switch switch_browser checkbox_switch\r\n            case (CONFIG.boolean.includes(itemtype)):\r\n                if (cell === 'Y' || cell === true) {\r\n                    val = true;\r\n                    cellprops.value = true;\r\n                } else {\r\n                    val = false;\r\n                    cellprops.value = false;\r\n                }\r\n                break\r\n            case (itemtype === 'timepicker'):\r\n                if (val && val.format) {\r\n                    val = val.format('hh:mm:ss');\r\n                    cellprops.value = val\r\n                }\r\n                break\r\n            case (itemtype === 'number'):\r\n                //todo校验字符串\r\n                if (isString(cell)) {\r\n                    cell = cell.replace(/,/g, '');\r\n                }\r\n                // 当数值类型只输入一个'-'的时候就将它赋值成0\r\n                if (cell === '-') {\r\n                    val = 0;\r\n                    cell = 0;\r\n                }\r\n                cellprops.value = cell\r\n                let reg = /^(-?\\d+)(\\.\\d+)?$/ //数字，正数，负数，0，小数\r\n                if (isString(cell) && isString(cell).length < 500 && !reg.test(cell)) {\r\n                    toast({ color: 'danger', title: langJson['table_tips'], content: `格式错误，请输入正确数字` });\r\n                    return\r\n                }\r\n                break\r\n            case (checkTimeTypes.includes(itemtype)):\r\n                // ctrl value  合法性校验\r\n                if (moment(val, 'YYYY-MM-DD').isValid() || moment(val, 'YYYY-MM-DD HH:mm:ss').isValid()) {\r\n                    let temp = null;\r\n                    switch (itemtype) {\r\n                        case 'datepicker':\r\n                            // 普通日期 添加 当前时分秒\r\n                            temp = moment(val, 'YYYY-MM-DD HH:mm:ss', true).isValid() ? val : `${val} ${moment().format('HH:mm:ss')}`;\r\n                            break;\r\n                        case 'NCTZDatePickerStart':\r\n                            // start add 00:00:00\r\n                            temp = moment(val, 'YYYY-MM-DD HH:mm:ss', true).isValid() ? val : `${val} 00:00:00`;\r\n                            break;\r\n                        case 'NCTZDatePickerEnd':\r\n                            // end add 23:59:59\r\n                            temp = moment(val, 'YYYY-MM-DD HH:mm:ss', true).isValid() ? val : `${val} 23:59:59`;\r\n                            break;\r\n                    }\r\n                    if (isDongba()) {\r\n                        cell = val = temp;\r\n\r\n                    } else {\r\n                        cell = val = LocalToDongbaTime(temp);\r\n                    }\r\n                    cellprops.value = cell\r\n                } else {\r\n                    // ctrl  日期不合法 \r\n                    toast({ color: 'danger', title: langJson['table_tips'], content: ` 粘贴值 ${val} 日期格式不合法` });\r\n                    return\r\n                }\r\n                break\r\n            case (itemtype === 'select'):\r\n                options.map(option => {\r\n                    if (option.display == cell) {\r\n                        cellprops.value = option.value;\r\n                        cellprops.display = cell;\r\n                        val = option.value;\r\n                    }\r\n                });\r\n                break\r\n            case (itemtype === 'residtxt'):\r\n\r\n                const LangCode = getLangCode();\r\n                const loginLang = languageMeta.filter(i => i.languageCode == LangCode);\r\n                let mul = loginLang[0].index === '1' ? '' : loginLang[0].index;\r\n                if (!row.values[attrcode + mul]) {\r\n                    row.values[attrcode + mul] = {};\r\n                }\r\n                row.values[attrcode + mul].value = cell;\r\n                row.values[attrcode + mul].index = mul;\r\n                break\r\n            case (itemtype === 'refer'):\r\n\r\n                cellprops.value = val;\r\n                cellprops.display = '';\r\n                break\r\n            default:\r\n                cellprops.value = cell\r\n\r\n        }\r\n        //把行状态改为修改\r\n        if (row.status == '0') {\r\n            row.status = '1';\r\n        }\r\n        pasteData.push(val)\r\n        const oldValue = getRowOldValue ? getRowOldValue(row.rowid, attrcode) : null;\r\n        let scaleData = cellprops.scale || scale || -1;\r\n        changedrows.push({\r\n            rowid: row.rowid,\r\n            newvalue: { value: val },\r\n            oldvalue: { value: oldValue ? (itemtype === 'number' ? formatAcuracy(oldValue, scaleData) : oldValue) : '' },\r\n        });\r\n        newValue.push(row)\r\n    }\r\n    return {\r\n        areaCode: tableId,\r\n        column,\r\n        changedrows,\r\n        newValue,\r\n        pasteData,\r\n        currentIndex: rowIndex,\r\n        allData: rows,\r\n    }\r\n}\r\n\r\n//用于缓存分页数据\r\nexport function setPageSizeStorage(meta, moduleId, num) {\r\n    let pageSizeStore = getGlobalStorage('localStorage', '_ncc_pagesize_store');\r\n    if (pageSizeStore) {\r\n        pageSizeStore = JSON.parse(pageSizeStore);\r\n    } else {\r\n        pageSizeStore = {};\r\n    }\r\n    let currentKey = getPageSizeStoreKey(meta, moduleId);\r\n    if (currentKey) {\r\n        pageSizeStore[currentKey] = num;\r\n        setGlobalStorage('localStorage', '_ncc_pagesize_store', JSON.stringify(pageSizeStore));\r\n\r\n    }\r\n}\r\n\r\nexport function getPageSizeStorage(meta, moduleId) {\r\n    let currentKey = getPageSizeStoreKey(meta, moduleId);\r\n    if (currentKey) {\r\n        let pageSizeStore = getGlobalStorage('localStorage', '_ncc_pagesize_store');\r\n        if (pageSizeStore) {\r\n            pageSizeStore = JSON.parse(pageSizeStore);\r\n            return pageSizeStore[currentKey] || '100';\r\n        }\r\n    }\r\n    return '100';\r\n}\r\n\r\nfunction getPageSizeStoreKey(meta, moduleId) {\r\n    let key = '';\r\n    if (meta && meta[moduleId]) {\r\n        let appcode = meta[moduleId].appcode || pageTo.getAppCode();\r\n        let pagecode = meta[moduleId].pagecode || pageTo.getPageCode();\r\n        let pageid = meta[moduleId].pageid || meta.pageid;\r\n        let userDataJSON = getGlobalStorage('localStorage', \"STOREFORINFODATA\");\r\n        let userData = userDataJSON && JSON.parse(userDataJSON);\r\n        let userid = userData && userData.userId;\r\n\r\n        if (appcode && pagecode && pageid && userid) {\r\n            key = appcode + '-' + pagecode + '-' + pageid + '-' + userid;\r\n        }\r\n    }\r\n\r\n    return key;\r\n\r\n}\r\n\r\n/**\r\n * 数据处理\r\n * @param {*} IType \r\n * @param {*} display \r\n * @param {*} value \r\n * @param {*} scale \r\n * @param {*} attrcode \r\n * @param {*} languageMeta \r\n * @param {*} values \r\n * @param {*} datatype \r\n * @param {*} options \r\n * @param {*} multiple \r\n * @param {*} langJson \r\n */\r\nexport function handleBrowseData(IType, display, value, scale, attrcode, languageMeta, values, datatype, options, multiple, langJson) {\r\n    // TODO 数据格式的转换\r\n    // 特殊处理下逻辑型  枚举类型\r\n    if (\r\n        datatype === \"32\" &&\r\n        [\"select\", \"checkbox\", \"radio\"].includes(IType) &&\r\n        isArray(options) &&\r\n        !display &&\r\n        value !== null &&\r\n        value !== undefined\r\n    ) {\r\n        if (IType === \"checkbox\" || multiple) {\r\n            let displayList = options\r\n                .filter(item => value.includes(item.value))\r\n                .map(option => {\r\n                    return option.display;\r\n                });\r\n            return displayList.join(\",\");\r\n        } else {\r\n            let { display } =\r\n                options.filter(item => item.value == value)[0] || {};\r\n            return display;\r\n        }\r\n    }\r\n\r\n    switch (true) {\r\n        case CONFIG.displayTypes.includes(IType):\r\n            return display || value;\r\n        case CONFIG.boolean.includes(IType):\r\n            return value == \"Y\" || value == true\r\n                ? langJson[\"table_yes\"]\r\n                : langJson[\"table_no\"];\r\n        case CONFIG.timeTypes.includes(IType):\r\n            if (IType === \"datetimepicker\") {\r\n                return formatDatetime(changeTime(value, \"YYYY-MM-DD HH:mm:ss\"), 'datetime');\r\n            } else if (IType === \"timepicker\") {\r\n                return formatDatetime(value, 'time');\r\n            } else if (IType === \"datePickerNoTimeZone\") {\r\n                return formatDatetime(value, 'date');\r\n            }\r\n            return formatDatetime(changeTime(value), 'date');\r\n        case IType === \"label\":\r\n            return isNullOrVoid(display) ? value : display || value;\r\n        case IType === \"number\":\r\n            // 表格浏览态加了四舍五入\r\n            return formatNumber(formatAcuracy(value, scale), true);\r\n        case IType === \"password\":\r\n            // 密码框浏览态显示***\r\n            return value && getRandomPassword();\r\n        case IType === \"residtxt\": // 对多语的处理\r\n            let LangCode = getLangCode();\r\n            let loginLang = languageMeta.filter(i => i.languageCode == LangCode);\r\n            if (loginLang.length > 0) {\r\n                loginLang[0].index === \"1\" ? (loginLang[0].index = \"\") : \"\";\r\n                if (\r\n                    values[attrcode + loginLang[0].index] &&\r\n                    values[attrcode + loginLang[0].index].value\r\n                ) {\r\n                    value = values[attrcode + loginLang[0].index].value;\r\n                    return value;\r\n                }\r\n                return value;\r\n            }\r\n            return value;\r\n        default:\r\n            return isNullOrVoid(display) ? value : display || value;\r\n    }\r\n}\r\n\r\n/*\r\n * @method   检测浏览器是否是IE浏览器\r\n */\r\nexport function isIE() {\r\n    if (!!window.ActiveXObject || \"ActiveXObject\" in window)\r\n        return true;\r\n    else\r\n        return false;\r\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-08-17 09:56:43\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-01-13 13:40:50\r\n */\r\nimport React, { Component } from 'react';\r\nimport { ViewModel, config as CONFIG, PubSub } from '@platform/api'\r\n\r\nfunction TableWithAutoFocus(WrappedComponent) {\r\n    return class WithAutoFocus extends Component {\r\n        componentDidMount() {\r\n            let { store } = this.props;\r\n            this.autoFocusToken = PubSub.subscribe('autoFocus', (msg, { data, moduleId, force }) => {\r\n                let el = document.querySelector(`div[${data}=\"${data}\"] [tabindex=\"0\"]`);\r\n                let activeEl = document.activeElement;\r\n                let tableId = `${CONFIG.hotKeyModuleIdPrefix}-${moduleId}`;\r\n                console.log(tableId, activeEl, store);\r\n                if (WithAutoFocus.judgeFocus(el, activeEl, tableId, force)) {\r\n                    ViewModel.shouldAutoFocus = true;\r\n                    el.ncExecuteFocus = true;\r\n\r\n                    // 设置一个属性\r\n                    let cellselectorkey = el.getAttribute('cellselectorkey') || '';\r\n                    cellselectorkey = cellselectorkey.split('@') || [];\r\n                    store && cellselectorkey[0] && cellselectorkey[1] && store.setCellProps(cellselectorkey[0], cellselectorkey[1], { autoFocus: true }, false);\r\n\r\n                    //如果当点聚焦元素与需要聚焦的元素相同就不执行；\r\n                    !el.contains(activeEl) && el.focus();\r\n                    delete el.ncExecuteFocus;\r\n                    // 直接执行  ie下会有顺序问题\r\n                    setTimeout(() => {\r\n                        ViewModel.shouldAutoFocus = false;\r\n                    }, 100);\r\n                }\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.autoFocusToken && PubSub.subscribe(this.autoFocusToken);\r\n        }\r\n\r\n        /**\r\n         * @desc: 业务中存在新增行时先调用addRow后调用setStatus的方法导致焦点在table的第一个可编辑字段，\r\n         *        而不在新增行的第一个可编辑字段上。\r\n         * @resolve: 聚集时判断table是否包含当前活跃元素且活跃元素的tabIndex不等于-1，如果包含就不去执行autoFocus\r\n         *           当前活跃元素可能是table里的操作列，全选功能里的input元素，如果是这些元素就依旧执行focus方法\r\n         * @param el 需要聚焦的元素\r\n         * @param activeEl 当前活跃的元素\r\n         * @param tableId 区域Id\r\n         * @param force true -> 强制执行\r\n         * @return {boolean}\r\n         */\r\n        static judgeFocus(el, activeEl, tableId, force) {\r\n            let tableEL = document.getElementById(tableId);\r\n            if (el) {\r\n                return activeEl.tabIndex !== -1 && tableEL && !tableEL.contains(activeEl) || force;\r\n            }\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <div\r\n                    id={`${CONFIG.hotKeyModuleIdPrefix}-${this.props.tableId || this.props.name}`}\r\n                >\r\n                    <WrappedComponent\r\n                        {...this.props}\r\n                    />\r\n                </div>\r\n\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default TableWithAutoFocus;\r\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-08-17 09:56:43\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-01-27 09:49:43\r\n */\r\nimport React, { Component } from 'react';\r\nimport { PubSub } from '@platform/api';\r\nimport { HotKeys } from 'react-hotkeys';\r\nimport { keyMap } from './config/tableKeyboardMap';\r\nimport { createByModuleType } from './createKeyMap';\r\nimport { handleArrowKeyDown, keyDownOfShiftUp } from './handleKeyDown';\r\nimport { stopEditTableHotKeyChange } from './config/stopHotKeyChange';\r\nimport { findNextFocusItemInTable } from './util/findNextFocusItemInTable';\r\n\r\nfunction EditTableWithKeyboardChange(WrappedComponent) {\r\n    return class WithKeyboardChange extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.hotKeyWithEnter = this.hotKeyWithEnter.bind(this);\r\n        }\r\n\r\n        componentDidUpdate() {\r\n            let { autoFocusDeferred } = this.props.getHotKeyConfig ? this.props.getHotKeyConfig() : {};\r\n            if (stopEditTableHotKeyChange(this.props, autoFocusDeferred)) { return; }\r\n\r\n            createByModuleType['editTable'](this.props);\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.autoFocusToken = PubSub.subscribe('autoFocus-IoC', () => {\r\n                if (stopEditTableHotKeyChange(this.props, false)) { return; }\r\n                createByModuleType['editTable'](this.props, true);\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.autoFocusToken && PubSub.subscribe(this.autoFocusToken);\r\n        }\r\n\r\n        hotKeyWithEnter({ e, ViewModel, moduleId, target }) {\r\n            //阻止冒泡会影响Page/index 下的keydown 事件\r\n            //e.stopPropagation();\r\n            let eventTarget = target || e.target;\r\n            let { orderOfHotKey } = this.props.getHotKeyConfig ? this.props.getHotKeyConfig() : {};\r\n            if (!orderOfHotKey) {\r\n                console.warn('not find orderOfHotKey in getHotKeyConfig')\r\n                return;\r\n            }\r\n\r\n            let timer = setTimeout(() => {\r\n                findNextFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey });\r\n                clearTimeout(timer);\r\n            });\r\n        }\r\n\r\n        hotKeyWithArrow = ({ e, ViewModel, moduleId, itemType, target }) => {\r\n            let eventTarget = target || e.target;\r\n            let { orderOfHotKey } = this.props.getHotKeyConfig ? this.props.getHotKeyConfig() : {};\r\n            if (!orderOfHotKey) {\r\n                console.warn('not find orderOfHotKey in getHotKeyConfig')\r\n                return;\r\n            }\r\n\r\n            handleArrowKeyDown({\r\n                eventTarget,\r\n                ViewModel,\r\n                moduleId,\r\n                orderOfHotKey,\r\n                itemType,\r\n                keyCode: e.keyCode,\r\n            });\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <HotKeys\r\n                    keyMap={keyMap}\r\n                    handlers={{\r\n                        shiftUp: keyDownOfShiftUp.bind(this, this.props.moduleId),\r\n                        shiftDown: keyDownOfShiftUp.bind(this, this.props.moduleId),\r\n                    }}\r\n                >\r\n                    <WrappedComponent\r\n                        tableStatusChanged={WithKeyboardChange.tableStatusChanged}\r\n                        hotKeyWithEnter={this.hotKeyWithEnter}\r\n                        hotKeyWithArrow={this.hotKeyWithArrow}\r\n                        {...this.props}\r\n                    />\r\n                </HotKeys>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default EditTableWithKeyboardChange;\r\n","/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: bbq\r\n * @Date: 2020-08-17 09:56:43\r\n * @LastEditors: bbq\r\n * @LastEditTime: 2021-02-01 14:05:45\r\n */\r\nimport React, { Component } from 'react';\r\nimport { HotKeys } from 'react-hotkeys';\r\nimport { keyMap } from './config/tableKeyboardMap';\r\nimport { createByModuleType, deleteKeyByModuleId } from './createKeyMap';\r\nimport { keyDownOfShiftUp, handleArrowKeyDown } from './handleKeyDown';\r\nimport { stopCardTableHotKeyChange } from './config/stopHotKeyChange';\r\nimport { findNextFocusItemInTable } from './util/findNextFocusItemInTable';\r\n\r\nfunction TableWithKeyboardChange(WrappedComponent) {\r\n    return class WithKeyboardChange extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n        }\r\n\r\n        componentDidUpdate() {\r\n            if (stopCardTableHotKeyChange(this.props)) { return; }\r\n\r\n            createByModuleType['table'](this.props);\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            // 部分情况下KeyByModuleId 没有清除  导致创建不能直接聚焦\r\n            deleteKeyByModuleId(this.props.moduleId || this.props.name);\r\n        }\r\n\r\n        static tableStatusChanged({ props, status }) {\r\n            if (status === 'edit' && !stopCardTableHotKeyChange(props)) {\r\n                createByModuleType['table'](props);\r\n            } else {\r\n                deleteKeyByModuleId(props.moduleId);\r\n            }\r\n\r\n        }\r\n\r\n        hotKeyWithEnter = ({ e, ViewModel, moduleId, target, itemType }) => {\r\n            let eventTarget = target || e.target;\r\n            let { orderOfHotKey } = this.props.getHotKeyConfig ? this.props.getHotKeyConfig() : {};\r\n            if (!orderOfHotKey) {\r\n                console.warn('not find orderOfHotKey in getHotKeyConfig')\r\n                return;\r\n            }\r\n\r\n            //日期类型延迟执行时eventTarget已被移出document导致寻找不到父元素td,所以日期类型立即执行\r\n            if (itemType === 'datePicker') {\r\n                findNextFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey });\r\n                return;\r\n            }\r\n\r\n            //CLOUD-147579 中文输入法下会带进冒号空格等符号，原因是因为输入法的enter比我们的enter后执行导致\r\n            let timer = setTimeout(() => {\r\n                findNextFocusItemInTable({ eventTarget, ViewModel, moduleId, orderOfHotKey });\r\n                clearTimeout(timer);\r\n            });\r\n        };\r\n\r\n        hotKeyWithArrow = ({ e, ViewModel, moduleId, itemType, target }) => {\r\n            let eventTarget = target || e.target;\r\n            let { orderOfHotKey } = this.props.getHotKeyConfig ? this.props.getHotKeyConfig() : {};\r\n            if (!orderOfHotKey) {\r\n                console.warn('not find orderOfHotKey in getHotKeyConfig')\r\n                return;\r\n            }\r\n\r\n            handleArrowKeyDown({\r\n                eventTarget,\r\n                ViewModel,\r\n                moduleId,\r\n                orderOfHotKey,\r\n                itemType,\r\n                keyCode: e.keyCode,\r\n            });\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <HotKeys\r\n                    keyMap={keyMap}\r\n                    handlers={{\r\n                        shiftUp: keyDownOfShiftUp.bind(this, this.props.moduleId),\r\n                        shiftDown: keyDownOfShiftUp.bind(this, this.props.moduleId),\r\n                    }}\r\n                >\r\n                    <WrappedComponent\r\n                        {...this.props}\r\n                        tableStatusChanged={WithKeyboardChange.tableStatusChanged}\r\n                        hotKeyWithEnter={this.hotKeyWithEnter}\r\n                        hotKeyWithArrow={this.hotKeyWithArrow}\r\n                    />\r\n                </HotKeys>\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default TableWithKeyboardChange;\r\n","const availableFormItems = ['input', 'textarea', 'number', 'refer', 'datepicker', 'datetimepicker', 'timepicker', 'select', 'switch', 'residtxt', 'checkbox_switch'];\r\nconst availableTableItems = ['refer', 'datepicker', 'input', 'datetimepicker', 'timepicker', 'select', 'number', 'residtxt', 'checkbox_switch', 'rangepicker', 'datePickerNoTimeZone', 'TZDatePickerStart', 'TZDatePickerStart', 'switch'];\r\n\r\nexport {\r\n    availableFormItems,\r\n    availableTableItems,\r\n};\r\n","\r\nimport { availableFormItems, availableTableItems } from './config/availableItems';\r\nimport { MODULE_TYPE } from './config/moduleType';\r\nimport { config as CONFIG, PubSub } from '@platform/api';\r\n\r\n/**\r\n * 我们要生成的数据格式\r\n *\r\n * @keyByModuleId = {\r\n *     moduleId1: {\r\n *         firstItem: 'attrCode1',\r\n *         lastItem: 'attrCode2',\r\n *         type: 'form'\r\n *     },\r\n *     moduleId2: {\r\n *         firstItem: 'attrCode3',\r\n *         lastItem: 'attrCode4',\r\n *         type: 'table',\r\n *         children: ['moduleId3', 'moduleId4'] // 表示此表格的关联表有哪些\r\n *     },\r\n *     moduleId3: {\r\n *         firstItem: 'attrCode3',\r\n *         lastItem: 'attrCode4',\r\n *         type: 'table',\r\n *         parent: 'moduleId3', // 表示此表格的主表是哪个，\r\n *         activeTable: 'moduleId3' //对于多页签的表格添加此字段表示当显示的是哪个页签，第一次渲染默认展示主\r\n *                                    表\r\n *     }\r\n * }\r\n *\r\n * @formDisableAttrCode = {\r\n *     moduleId: {\r\n *         attrCode1: true,\r\n *         attrCode2: false\r\n *     }\r\n * }\r\n */\r\nlet keyByModuleId = {};\r\nlet formDisableAttrCode = {};\r\nlet tableDisabledAttrCode = {};\r\nlet orderOfHotKey = [];\r\nconst hotKeyPrefix = CONFIG.hotKeyModuleIdPrefix;\r\n\r\n/**\r\n * @desc 实现上面所描述的数据格式\r\n * @param props\r\n * @param force 是否强制执行，如果是通过业务组调用executeAutoFocus方法执行，就强制执行聚焦方法， 默认false\r\n */\r\nfunction keyMapOfForm(props, force = false) {\r\n    let { name } = props;\r\n    let { meta, orderOfHotKey: newOrderOfHotKey } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n\r\n    // 可以考虑加个参数控制整个快捷键  TOOD\r\n    if (!props.getHotKeyConfig) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n\r\n    let formItems = meta[name]['items'];\r\n    orderOfHotKey = newOrderOfHotKey;\r\n\r\n    let itemsAttrCode = formItems.filter(item => {\r\n        return isAvailableFormItem(item, name);\r\n    }).map(item => {\r\n        return item.attrcode;\r\n    });\r\n\r\n    if (formAutoFocusJudgement(name, force)) {\r\n        keyByModuleId[name] = {\r\n            firstItem: itemsAttrCode[0],\r\n            type: MODULE_TYPE.form,\r\n        };\r\n        let firstItemKey = itemsAttrCode[0];\r\n        PubSub.publish('autoFocus', { data: firstItemKey });\r\n    }\r\n}\r\n\r\n/**\r\n * @desc：keyMapOfForm方法会根据form的状态执行多次。\r\n * 现象：只要meta里面的数据一更改就会重新聚焦到第一个可编辑元素上。\r\n * 解决：keyByModuleId里是否存在此moduleId作为标示，\r\n */\r\nfunction formAutoFocusJudgement(name, force) {\r\n    return (keyByModuleId[name] === undefined && orderOfHotKey[0] === name) || force;\r\n}\r\n\r\n/**\r\n * @desc 判断此item是否需要在按tab键获得焦点\r\n * @param item\r\n * @param name\r\n * @returns {boolean}\r\n */\r\nfunction isAvailableFormItem(item, name) {\r\n    let metaRes = availableFormItems.includes(item.itemtype) &&\r\n        item.disabled !== true &&\r\n        item.visible !== false;\r\n\r\n    let itemDisabled = !!(formDisableAttrCode[name] &&\r\n        formDisableAttrCode[name][item.attrcode] === true);\r\n    return metaRes && !itemDisabled;\r\n}\r\n\r\n/**\r\n *\r\n * @param props\r\n * @param force {Boolean} 是否强制执行\r\n */\r\nfunction keyMapOfTable(props, force = false) {\r\n    let { name, high_hotkey, getHotKeyConfig } = props;\r\n\r\n    // console.log(high_hotkey, getHotKeyConfig)\r\n    let { withHotKeyChange, meta, orderOfHotKey: newOrderOfHotKey } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n    if (!props.getHotKeyConfig || !newOrderOfHotKey) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n    orderOfHotKey = newOrderOfHotKey;\r\n    let { store, tableId } = high_hotkey;\r\n\r\n    let columns = meta[tableId] && meta[tableId].items;\r\n    let rows = store.getData();\r\n    let lastRowIndex = rows.length - 1;\r\n    let availableItems = columns && iteratorTableColumns(tableId, columns, []);\r\n\r\n    if (rows && rows.length === 0) return;\r\n    processKeyMapOfTable({ tableId, availableItems, lastRowIndex, moduleType: MODULE_TYPE.cardTable, force });\r\n    if (hasTabRelation(props, tableId) && keyByModuleId[tableId]) {\r\n        createTabRelationKeyMap(props, tableId, lastRowIndex);\r\n        //设置关联表\r\n        keyByModuleId[tableId].children = meta.gridrelation[tableId].tabRelation;\r\n    }\r\n}\r\n\r\nfunction keyMapOfEditTable(props, force = false) {\r\n    let { name, high_hotkey, getHotKeyConfig } = props;\r\n    // console.log(high_hotkey, getHotKeyConfig)\r\n    let { withHotKeyChange, meta, orderOfHotKey: newOrderOfHotKey } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n    if (!props.getHotKeyConfig || !newOrderOfHotKey) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n    orderOfHotKey = newOrderOfHotKey;\r\n    let { store, tableId } = high_hotkey;\r\n\r\n    let columns = meta[tableId] && meta[tableId].items;\r\n    let rows = store.getData();\r\n    let lastRowIndex = rows.length - 1;\r\n    let availableItems = columns && iteratorTableColumns(tableId, columns, []);\r\n\r\n    if (rows && rows.length === 0) return;\r\n\r\n    processKeyMapOfTable({ tableId, availableItems, lastRowIndex, moduleType: MODULE_TYPE.editTable, force });\r\n}\r\n\r\nfunction iteratorTableColumns(tableId, iterable, pool) {\r\n    return iterable.reduce((pre, next) => {\r\n        if (next.children) {\r\n            iteratorTableColumns(tableId, next.children, pre);\r\n        } else {\r\n            isAvailableTableItem(tableId, next)\r\n                ? pre.push(next.attrcode)\r\n                : pre;\r\n        }\r\n\r\n        return pre;\r\n    }, pool);\r\n}\r\n\r\nfunction isAvailableTableItem(moduleId, item) {\r\n    //如果业务组通过table的api修改可编辑性，就根据业务组的设置的只返回，不去读meta里面的值\r\n    if (tableDisabledAttrCode[moduleId]) {\r\n        if (tableDisabledAttrCode[moduleId][item.attrcode] === false) {\r\n            return false;\r\n        }\r\n\r\n        if (tableDisabledAttrCode[moduleId][item.attrcode] === true) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return availableTableItems.includes(item.itemtype) &&\r\n        item.visible !== false &&\r\n        item.disabled !== true &&\r\n        item.attrcode !== undefined;\r\n}\r\n\r\nfunction processKeyMapOfTable({ moduleId, availableItems, lastRowIndex, moduleType, force }) {\r\n    let firstItem = `${hotKeyPrefix}-${moduleId}-${availableItems[0]}-0`;\r\n    let lastAvailableItem = availableItems.length - 1;\r\n    let lastItem = `${hotKeyPrefix}-${moduleId}-${availableItems[lastAvailableItem]}-${lastRowIndex}`;\r\n\r\n    publishFocusItem({ orderOfHotKey, moduleId, firstItem, force });\r\n\r\n    keyByModuleId[moduleId] = {\r\n        firstItem,\r\n        lastItem,\r\n        type: moduleType,\r\n        activeTable: moduleId,\r\n    };\r\n}\r\n\r\n/**\r\n * @desc    原因：此方法是在componentDidUpdate生命周期里调用的。\r\n *          现象：只要meta里面的数据一更改就会重新聚焦到第一个可编辑元素上。\r\n *          解决：keyByModuleId里是否存在此moduleId作为标示\r\n *\r\n * @param orderOfHotKey\r\n * @param moduleId\r\n * @param firstItem\r\n * @param force 是否强制执行，如果是业务组通过executeAutoFocus api 执行的，就强制执行\r\n */\r\nfunction publishFocusItem({ orderOfHotKey, moduleId, firstItem, force }) {\r\n    if (tableAutoFocusJudgement({ orderOfHotKey, moduleId, force })) {\r\n        PubSub.publish('autoFocus', { data: firstItem, moduleId });\r\n    }\r\n}\r\n\r\nfunction tableAutoFocusJudgement({ orderOfHotKey = [], moduleId, force }) {\r\n    return (orderOfHotKey[0] === moduleId && keyByModuleId[moduleId] === undefined) || force;\r\n}\r\n\r\n/**\r\n * @desc 判断此table是否有tabRelation\r\n * @param props {object}\r\n * @param moduleId {string}\r\n */\r\n\r\nfunction hasTabRelation(props, moduleId) {\r\n    // console.log(high_hotkey, getHotKeyConfig)\r\n    let { meta } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n    if (!props.getHotKeyConfig) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n\r\n    let tabRelation = meta.gridrelation &&\r\n        meta.gridrelation[moduleId].tabRelation;\r\n\r\n    return !!(tabRelation && tabRelation.length > 1);\r\n}\r\n\r\nfunction createTabRelationKeyMap(props, moduleId, lastRowIndex) {\r\n    let { meta } = props.getHotKeyConfig ? props.getHotKeyConfig() : {};\r\n    if (!props.getHotKeyConfig) {\r\n        return console.warn('some form hotkey invalid');\r\n    }\r\n\r\n    let tabRelation = meta.gridrelation[moduleId].tabRelation;\r\n\r\n    tabRelation.forEach(item => {\r\n        //因为主表keyMap已经生成不需要重复执行\r\n        if (item !== moduleId) {\r\n            let columns = meta[item] &&\r\n                meta[item].items;\r\n            let availableItems = columns && iteratorTableColumns(moduleId, columns, []);\r\n            let code = meta[item].code;\r\n\r\n            let firstItem = `${hotKeyPrefix}-${moduleId}-${availableItems[0]}-0`;\r\n            let lastAvailableItem = availableItems[availableItems.length - 1];\r\n\r\n            let lastItem = `${hotKeyPrefix}-${moduleId}-${lastAvailableItem}-${lastRowIndex}`;\r\n            /**\r\n             * @type {{parent: string}} 表明此此标签页属于哪个区域ID\r\n             */\r\n            keyByModuleId[code] = {\r\n                firstItem,\r\n                lastItem,\r\n                type: MODULE_TYPE.cardTable,\r\n                parent: moduleId,\r\n            };\r\n        }\r\n    });\r\n}\r\n\r\nfunction deleteKeyByModuleId(moduleId) {\r\n    delete keyByModuleId[moduleId];\r\n}\r\n\r\nfunction setFormDisableAttrCode(moduleId, values) {\r\n    formDisableAttrCode[moduleId] = values;\r\n}\r\n\r\n/**\r\n *\r\n * @param disabledValue {boolean} 是否可编辑 true -> 可编辑 false -> 不可编辑\r\n * @param moduleId  {string}\r\n * @param attrcode {string}\r\n */\r\nfunction editTableFieldEditable(disabledValue, moduleId, attrcode) {\r\n    if (tableDisabledAttrCode[moduleId] === undefined) {\r\n        tableDisabledAttrCode[moduleId] = { [attrcode]: disabledValue };\r\n    } else {\r\n        tableDisabledAttrCode[moduleId][attrcode] = disabledValue;\r\n    }\r\n}\r\n\r\nfunction getFirstItem(moduleId) {\r\n    return keyByModuleId[moduleId] &&\r\n        keyByModuleId[moduleId].firstItem;\r\n}\r\n\r\nfunction setValueOfActiveTable({ moduleId, activeKey }) {\r\n    let moduleInfo = keyByModuleId[moduleId];\r\n    if (moduleInfo) {\r\n        moduleInfo.activeTable = activeKey;\r\n    }\r\n}\r\n\r\nlet createByModuleType = {\r\n    form: keyMapOfForm,\r\n    table: keyMapOfTable,\r\n    editTable: keyMapOfEditTable,\r\n};\r\n\r\nexport {\r\n    createByModuleType,\r\n    keyByModuleId,\r\n    orderOfHotKey,\r\n    deleteKeyByModuleId,\r\n    setFormDisableAttrCode,\r\n    editTableFieldEditable,\r\n    getFirstItem,\r\n    setValueOfActiveTable,\r\n};"],"sourceRoot":""}