// set集合
// 确定性：于一个给定的集合，集合中的元素是确定的。即一个元素，或者属于该集合，或者不属于该集合，两者必居其一
// 无序性：在一个集合中，不考虑元素之间的顺序，只要元素完全相同，就认为是同一个集合
// 互异性：集合中任意两个元素都是不同的

// ES6中，集合本身是一个构建函数Set，用来生成 Set 数据结构
// 集合常见的方法有：

// add()：增  返回 Set 结构本身
// delete()：删  删除某个值，返回一个布尔值，表示删除是否成功
// has()：  返回一个布尔值，判断该值是否为Set的成员
// clear()： 清除所有成员，没有返回值


// 多个集合常见的操作有：

// 并集  两个集合的所有元素
let a = new Set([1, 2, 3]);
let b = new Set([4, 3, 2]);

// 并集
let union = new Set([...a, ...b]);
// Set {1, 2, 3, 4}


// 交集  公共
let intersect = new Set([...a].filter(x => b.has(x)));
// set {2, 3}


// 差集
// （a 相对于 b 的）差集   属于A的元素但不属于B的元素称为A相对于B的差集，
let difference = new Set([...a].filter(x => !b.has(x)));
// Set {1}
